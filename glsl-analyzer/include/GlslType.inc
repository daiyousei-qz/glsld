
// clang-format off
// DECL_BUILTIN_TYPE(/* glsl keyword */, /* c++ type */, /* desc type */, /* desc args... */)
// NOTE C++ type should be void if the type couldn't be constant folded

// Void
DECL_BUILTIN_TYPE(void, void, VoidTypeDesc)

// Scalar
DECL_BUILTIN_TYPE(bool,   bool,     ScalarTypeDesc, ScalarType::Bool)
DECL_BUILTIN_TYPE(int,    int32_t,  ScalarTypeDesc, ScalarType::Int)
DECL_BUILTIN_TYPE(uint,   uint32_t, ScalarTypeDesc, ScalarType::Uint)
DECL_BUILTIN_TYPE(float,  float,    ScalarTypeDesc, ScalarType::Float)
DECL_BUILTIN_TYPE(double, double,   ScalarTypeDesc, ScalarType::Double)

DECL_BUILTIN_TYPE(atomic_uint, void, ScalarTypeDesc)

// Vector
DECL_BUILTIN_TYPE(bvec2, Vec2b, VectorTypeDesc, ScalarType::Bool, 2)
DECL_BUILTIN_TYPE(bvec3, Vec3b, VectorTypeDesc, ScalarType::Bool, 3)
DECL_BUILTIN_TYPE(bvec4, Vec4b, VectorTypeDesc, ScalarType::Bool, 4)
DECL_BUILTIN_TYPE(ivec2, Vec2i, VectorTypeDesc, ScalarType::Int, 2)
DECL_BUILTIN_TYPE(ivec3, Vec3i, VectorTypeDesc, ScalarType::Int, 3)
DECL_BUILTIN_TYPE(ivec4, Vec4i, VectorTypeDesc, ScalarType::Int, 4)
DECL_BUILTIN_TYPE(uvec2, Vec2u, VectorTypeDesc, ScalarType::Uint, 2)
DECL_BUILTIN_TYPE(uvec3, Vec3u, VectorTypeDesc, ScalarType::Uint, 3)
DECL_BUILTIN_TYPE(uvec4, Vec4u, VectorTypeDesc, ScalarType::Uint, 4)
DECL_BUILTIN_TYPE(vec2, Vec2f, VectorTypeDesc, ScalarType::Float, 2)
DECL_BUILTIN_TYPE(vec3, Vec3f, VectorTypeDesc, ScalarType::Float, 3)
DECL_BUILTIN_TYPE(vec4, Vec4f, VectorTypeDesc, ScalarType::Float, 4)
DECL_BUILTIN_TYPE(dvec2, Vec2d, VectorTypeDesc, ScalarType::Double, 2)
DECL_BUILTIN_TYPE(dvec3, Vec3d, VectorTypeDesc, ScalarType::Double, 3)
DECL_BUILTIN_TYPE(dvec4, Vec4d, VectorTypeDesc, ScalarType::Double, 4)

// Matrix
DECL_BUILTIN_TYPE( mat2,   Mat2f,   MatrixTypeDesc, ScalarType::Float , 2, 2)
DECL_BUILTIN_TYPE( mat3,   Mat3f,   MatrixTypeDesc, ScalarType::Float , 3, 3)
DECL_BUILTIN_TYPE( mat4,   Mat4f,   MatrixTypeDesc, ScalarType::Float , 4, 4)
DECL_BUILTIN_TYPE( mat2x2, Mat2x2f, MatrixTypeDesc, ScalarType::Float , 2, 2)
DECL_BUILTIN_TYPE( mat2x3, Mat2x3f, MatrixTypeDesc, ScalarType::Float , 2, 3)
DECL_BUILTIN_TYPE( mat2x4, Mat2x4f, MatrixTypeDesc, ScalarType::Float , 2, 4)
DECL_BUILTIN_TYPE( mat3x2, Mat3x2f, MatrixTypeDesc, ScalarType::Float , 3, 2)
DECL_BUILTIN_TYPE( mat3x3, Mat3x3f, MatrixTypeDesc, ScalarType::Float , 3, 3)
DECL_BUILTIN_TYPE( mat3x4, Mat3x4f, MatrixTypeDesc, ScalarType::Float , 3, 4)
DECL_BUILTIN_TYPE( mat4x2, Mat4x2f, MatrixTypeDesc, ScalarType::Float , 4, 2)
DECL_BUILTIN_TYPE( mat4x3, Mat4x3f, MatrixTypeDesc, ScalarType::Float , 4, 3)
DECL_BUILTIN_TYPE( mat4x4, Mat4x4f, MatrixTypeDesc, ScalarType::Float , 4, 4)
DECL_BUILTIN_TYPE(dmat2,   Mat2d,   MatrixTypeDesc, ScalarType::Double, 2, 2)
DECL_BUILTIN_TYPE(dmat3,   Mat3d,   MatrixTypeDesc, ScalarType::Double, 3, 3)
DECL_BUILTIN_TYPE(dmat4,   Mat4d,   MatrixTypeDesc, ScalarType::Double, 4, 4)
DECL_BUILTIN_TYPE(dmat2x2, Mat2x2d, MatrixTypeDesc, ScalarType::Double, 2, 2)
DECL_BUILTIN_TYPE(dmat2x3, Mat2x3d, MatrixTypeDesc, ScalarType::Double, 2, 3)
DECL_BUILTIN_TYPE(dmat2x4, Mat2x4d, MatrixTypeDesc, ScalarType::Double, 2, 4)
DECL_BUILTIN_TYPE(dmat3x2, Mat3x2d, MatrixTypeDesc, ScalarType::Double, 3, 2)
DECL_BUILTIN_TYPE(dmat3x3, Mat3x3d, MatrixTypeDesc, ScalarType::Double, 3, 3)
DECL_BUILTIN_TYPE(dmat3x4, Mat3x4d, MatrixTypeDesc, ScalarType::Double, 3, 4)
DECL_BUILTIN_TYPE(dmat4x2, Mat4x2d, MatrixTypeDesc, ScalarType::Double, 4, 2)
DECL_BUILTIN_TYPE(dmat4x3, Mat4x3d, MatrixTypeDesc, ScalarType::Double, 4, 3)
DECL_BUILTIN_TYPE(dmat4x4, Mat4x4d, MatrixTypeDesc, ScalarType::Double, 4, 4)

// Combined Sampler
DECL_BUILTIN_TYPE( sampler1D,              void, SamplerTypeDesc)
DECL_BUILTIN_TYPE( sampler1DShoadow,       void, SamplerTypeDesc)
DECL_BUILTIN_TYPE( sampler1DArray,         void, SamplerTypeDesc)
DECL_BUILTIN_TYPE( sampler1DArrayShadow,   void, SamplerTypeDesc)
DECL_BUILTIN_TYPE(isampler1D,              void, SamplerTypeDesc)
DECL_BUILTIN_TYPE(isampler1DArray,         void, SamplerTypeDesc)
DECL_BUILTIN_TYPE(usampler1D,              void, SamplerTypeDesc)
DECL_BUILTIN_TYPE(usampler1DArray,         void, SamplerTypeDesc)
DECL_BUILTIN_TYPE( sampler2D,              void, SamplerTypeDesc)
DECL_BUILTIN_TYPE( sampler2DShoadow,       void, SamplerTypeDesc)
DECL_BUILTIN_TYPE( sampler2DArray,         void, SamplerTypeDesc)
DECL_BUILTIN_TYPE( sampler2DArrayShadow,   void, SamplerTypeDesc)
DECL_BUILTIN_TYPE(isampler2D,              void, SamplerTypeDesc)
DECL_BUILTIN_TYPE(isampler2DArray,         void, SamplerTypeDesc)
DECL_BUILTIN_TYPE(usampler2D,              void, SamplerTypeDesc)
DECL_BUILTIN_TYPE(usampler2DArray,         void, SamplerTypeDesc)
DECL_BUILTIN_TYPE( sampler2DRect,          void, SamplerTypeDesc)
DECL_BUILTIN_TYPE( sampler2DRectShadow,    void, SamplerTypeDesc)
DECL_BUILTIN_TYPE(isampler2DRect,          void, SamplerTypeDesc)
DECL_BUILTIN_TYPE(usampler2DRect,          void, SamplerTypeDesc)
DECL_BUILTIN_TYPE( sampler2DMS,            void, SamplerTypeDesc)
DECL_BUILTIN_TYPE(isampler2DMS,            void, SamplerTypeDesc)
DECL_BUILTIN_TYPE(usampler2DMS,            void, SamplerTypeDesc)
DECL_BUILTIN_TYPE( sampler2DMSArray,       void, SamplerTypeDesc)
DECL_BUILTIN_TYPE(isampler2DMSArray,       void, SamplerTypeDesc)
DECL_BUILTIN_TYPE(usampler2DMSArray,       void, SamplerTypeDesc)
DECL_BUILTIN_TYPE(sampler3D,               void, SamplerTypeDesc)
DECL_BUILTIN_TYPE(isampler3D,              void, SamplerTypeDesc)
DECL_BUILTIN_TYPE(usampler3D,              void, SamplerTypeDesc)
DECL_BUILTIN_TYPE( samplerCube,            void, SamplerTypeDesc)
DECL_BUILTIN_TYPE( samplerCubeShadow,      void, SamplerTypeDesc)
DECL_BUILTIN_TYPE(isamplerCube,            void, SamplerTypeDesc)
DECL_BUILTIN_TYPE(usamplerCube,            void, SamplerTypeDesc)
DECL_BUILTIN_TYPE( samplerCubeArray,       void, SamplerTypeDesc)
DECL_BUILTIN_TYPE( samplerCubeArrayShadow, void, SamplerTypeDesc)
DECL_BUILTIN_TYPE(isamplerCubeArray,       void, SamplerTypeDesc)
DECL_BUILTIN_TYPE(usamplerCubeArray,       void, SamplerTypeDesc)
DECL_BUILTIN_TYPE( samplerBuffer,          void, SamplerTypeDesc)
DECL_BUILTIN_TYPE(isamplerBuffer,          void, SamplerTypeDesc)
DECL_BUILTIN_TYPE(usamplerBuffer,          void, SamplerTypeDesc)

// Image
DECL_BUILTIN_TYPE( image1D,        void, SamplerTypeDesc)
DECL_BUILTIN_TYPE( image1DArray,   void, SamplerTypeDesc)
DECL_BUILTIN_TYPE(iimage1D,        void, SamplerTypeDesc)
DECL_BUILTIN_TYPE(iimage1DArray,   void, SamplerTypeDesc)
DECL_BUILTIN_TYPE(uimage1D,        void, SamplerTypeDesc)
DECL_BUILTIN_TYPE(uimage1DArray,   void, SamplerTypeDesc)
DECL_BUILTIN_TYPE( image2D,        void, SamplerTypeDesc)
DECL_BUILTIN_TYPE( image2DArray,   void, SamplerTypeDesc)
DECL_BUILTIN_TYPE(iimage2D,        void, SamplerTypeDesc)
DECL_BUILTIN_TYPE(iimage2DArray,   void, SamplerTypeDesc)
DECL_BUILTIN_TYPE(uimage2D,        void, SamplerTypeDesc)
DECL_BUILTIN_TYPE(uimage2DArray,   void, SamplerTypeDesc)
DECL_BUILTIN_TYPE(image2DRect,     void, SamplerTypeDesc)
DECL_BUILTIN_TYPE(iimage2DRect,    void, SamplerTypeDesc)
DECL_BUILTIN_TYPE(uimage2DRect,    void, SamplerTypeDesc)
DECL_BUILTIN_TYPE( image2DMS,      void, SamplerTypeDesc)
DECL_BUILTIN_TYPE(iimage2DMS,      void, SamplerTypeDesc)
DECL_BUILTIN_TYPE(uimage2DMS,      void, SamplerTypeDesc)
DECL_BUILTIN_TYPE( image2DMSArray, void, SamplerTypeDesc)
DECL_BUILTIN_TYPE(iimage2DMSArray, void, SamplerTypeDesc)
DECL_BUILTIN_TYPE(uimage2DMSArray, void, SamplerTypeDesc)
DECL_BUILTIN_TYPE( image3D,        void, SamplerTypeDesc)
DECL_BUILTIN_TYPE(iimage3D,        void, SamplerTypeDesc)
DECL_BUILTIN_TYPE(uimage3D,        void, SamplerTypeDesc)
DECL_BUILTIN_TYPE( imageCube,      void, SamplerTypeDesc)
DECL_BUILTIN_TYPE(iimageCube,      void, SamplerTypeDesc)
DECL_BUILTIN_TYPE(uimageCube,      void, SamplerTypeDesc)
DECL_BUILTIN_TYPE( imageCubeArray, void, SamplerTypeDesc)
DECL_BUILTIN_TYPE(iimageCubeArray, void, SamplerTypeDesc)
DECL_BUILTIN_TYPE(uimageCubeArray, void, SamplerTypeDesc)
DECL_BUILTIN_TYPE( imageBuffer,    void, SamplerTypeDesc)
DECL_BUILTIN_TYPE(iimageBuffer,    void, SamplerTypeDesc)
DECL_BUILTIN_TYPE(uimageBuffer,    void, SamplerTypeDesc)

// Separate Sampler (Vulkan-only)
DECL_BUILTIN_TYPE(sampler,       void, SamplerTypeDesc)
DECL_BUILTIN_TYPE(samplerShadow, void, SamplerTypeDesc)

// Separate Texture (Vulkan-only)
DECL_BUILTIN_TYPE(texture1D,         void, SamplerTypeDesc)
DECL_BUILTIN_TYPE(texture1DArray,    void, SamplerTypeDesc)
DECL_BUILTIN_TYPE(itexture1D,        void, SamplerTypeDesc)
DECL_BUILTIN_TYPE(itexture1DArray,   void, SamplerTypeDesc)
DECL_BUILTIN_TYPE(utexture1D,        void, SamplerTypeDesc)
DECL_BUILTIN_TYPE(utexture1DArray,   void, SamplerTypeDesc)
DECL_BUILTIN_TYPE(texture2D,         void, SamplerTypeDesc)
DECL_BUILTIN_TYPE(texture2DArray,    void, SamplerTypeDesc)
DECL_BUILTIN_TYPE(itexture2D,        void, SamplerTypeDesc)
DECL_BUILTIN_TYPE(itexture2DArray,   void, SamplerTypeDesc)
DECL_BUILTIN_TYPE(utexture2D,        void, SamplerTypeDesc)
DECL_BUILTIN_TYPE(utexture2DArray,   void, SamplerTypeDesc)
DECL_BUILTIN_TYPE(texture2DRect,     void, SamplerTypeDesc)
DECL_BUILTIN_TYPE(itexture2DRect,    void, SamplerTypeDesc)
DECL_BUILTIN_TYPE(utexture2DRect,    void, SamplerTypeDesc)
DECL_BUILTIN_TYPE(texture2DMS,       void, SamplerTypeDesc)
DECL_BUILTIN_TYPE(itexture2DMS,      void, SamplerTypeDesc)
DECL_BUILTIN_TYPE(utexture2DMS,      void, SamplerTypeDesc)
DECL_BUILTIN_TYPE(texture2DMSArray,  void, SamplerTypeDesc)
DECL_BUILTIN_TYPE(itexture2DMSArray, void, SamplerTypeDesc)
DECL_BUILTIN_TYPE(utexture2DMSArray, void, SamplerTypeDesc)
DECL_BUILTIN_TYPE(texture3D,         void, SamplerTypeDesc)
DECL_BUILTIN_TYPE(itexture3D,        void, SamplerTypeDesc)
DECL_BUILTIN_TYPE(utexture3D,        void, SamplerTypeDesc)
DECL_BUILTIN_TYPE(textureCube,       void, SamplerTypeDesc)
DECL_BUILTIN_TYPE(itextureCube,      void, SamplerTypeDesc)
DECL_BUILTIN_TYPE(utextureCube,      void, SamplerTypeDesc)
DECL_BUILTIN_TYPE(textureCubeArray,  void, SamplerTypeDesc)
DECL_BUILTIN_TYPE(itextureCubeArray, void, SamplerTypeDesc)
DECL_BUILTIN_TYPE(utextureCubeArray, void, SamplerTypeDesc)
DECL_BUILTIN_TYPE(textureBuffer,     void, SamplerTypeDesc)
DECL_BUILTIN_TYPE(itextureBuffer,    void, SamplerTypeDesc)
DECL_BUILTIN_TYPE(utextureBuffer,    void, SamplerTypeDesc)

// Subpass (Vulkan-only)
DECL_BUILTIN_TYPE(subpassInput,    void, SamplerTypeDesc)
DECL_BUILTIN_TYPE(isubpassInput,   void, SamplerTypeDesc)
DECL_BUILTIN_TYPE(usubpassInput,   void, SamplerTypeDesc)
DECL_BUILTIN_TYPE(subpassInputMS,  void, SamplerTypeDesc)
DECL_BUILTIN_TYPE(isubpassInputMS, void, SamplerTypeDesc)
DECL_BUILTIN_TYPE(usubpassInputMS, void, SamplerTypeDesc)

// clang-format on