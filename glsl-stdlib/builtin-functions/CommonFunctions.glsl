
float abs(float x);
vec2 abs(vec2 x);
vec3 abs(vec3 x);
vec4 abs(vec4 x);
int abs(int x);
ivec2 abs(ivec2 x);
ivec3 abs(ivec3 x);
ivec4 abs(ivec4 x);
double abs(double x);
dvec2  abs(dvec2 x);
dvec3  abs(dvec3 x);
dvec4  abs(dvec4 x);
float sign(float x);
vec2 sign(vec2 x);
vec3 sign(vec3 x);
vec4 sign(vec4 x);
int sign(int x);
ivec2 sign(ivec2 x);
ivec3 sign(ivec3 x);
ivec4 sign(ivec4 x);
double sign(double x);
dvec2  sign(dvec2 x);
dvec3  sign(dvec3 x);
dvec4  sign(dvec4 x);
float floor(float x);
vec2 floor(vec2 x);
vec3 floor(vec3 x);
vec4 floor(vec4 x);
double floor(double x);
dvec2  floor(dvec2 x);
dvec3  floor(dvec3 x);
dvec4  floor(dvec4 x);
float trunc(float x);
vec2 trunc(vec2 x);
vec3 trunc(vec3 x);
vec4 trunc(vec4 x);
double trunc(double x);
dvec2  trunc(dvec2 x);
dvec3  trunc(dvec3 x);
dvec4  trunc(dvec4 x);
float round(float x);
vec2 round(vec2 x);
vec3 round(vec3 x);
vec4 round(vec4 x);
double round(double x);
dvec2  round(dvec2 x);
dvec3  round(dvec3 x);
dvec4  round(dvec4 x);
float roundEven(float x);
vec2 roundEven(vec2 x);
vec3 roundEven(vec3 x);
vec4 roundEven(vec4 x);
double roundEven(double);
dvec2  roundEven(dvec2);
dvec3  roundEven(dvec3);
dvec4  roundEven(dvec4);
float ceil(float x);
vec2 ceil(vec2 x);
vec3 ceil(vec3 x);
vec4 ceil(vec4 x);
double ceil(double x);
dvec2  ceil(dvec2 x);
dvec3  ceil(dvec3 x);
dvec4  ceil(dvec4 x);
float fract(float x);
vec2 fract(vec2 x);
vec3 fract(vec3 x);
vec4 fract(vec4 x);
double fract(double x);
dvec2  fract(dvec2 x);
dvec3  fract(dvec3 x);
dvec4  fract(dvec4 x);
float mod(float x,float y);
vec2 mod(vec2 x,vec2 y);
vec3 mod(vec3 x,vec3 y);
vec4 mod(vec4 x,vec4 y);
vec2 mod(vec2 x,float y);
vec3 mod(vec3 x,float y);
vec4 mod(vec4 x,float y);
double mod(double x, double y);
dvec2  mod(dvec2 x, double y);
dvec3  mod(dvec3 x, double y);
dvec4  mod(dvec4 x, double y);
dvec2  mod(dvec2 x, dvec2 y);
dvec3  mod(dvec3 x, dvec3 y);
dvec4  mod(dvec4 x, dvec4 y);
float modf(float x,out float i);
vec2 modf(vec2 x,out vec2 i);
vec3 modf(vec3 x,out vec3 i);
vec4 modf(vec4 x,out vec4 i);
double modf(double x, out double i);
dvec2  modf(dvec2 x,  out dvec2 i);
dvec3  modf(dvec3 x,  out dvec3 i);
dvec4  modf(dvec4 x,  out dvec4 i);
float min(float x,float y);
vec2 min(vec2 x,vec2 y);
vec3 min(vec3 x,vec3 y);
vec4 min(vec4 x,vec4 y);
vec2 min(vec2 x,float y);
vec3 min(vec3 x,float y);
vec4 min(vec4 x,float y);
double min(double x, double y);
dvec2  min(dvec2 x,  double y);
dvec3  min(dvec3 x,  double y);
dvec4  min(dvec4 x,  double y);
dvec2  min(dvec2 x,  dvec2 y);
dvec3  min(dvec3 x,  dvec3 y);
dvec4  min(dvec4 x,  dvec4 y);
float max(float x,float y);
vec2 max(vec2 x,vec2 y);
vec3 max(vec3 x,vec3 y);
vec4 max(vec4 x,vec4 y);
vec2 max(vec2 x,float y);
vec3 max(vec3 x,float y);
vec4 max(vec4 x,float y);
double max(double x, double y);
dvec2  max(dvec2 x , double y);
dvec3  max(dvec3 x , double y);
dvec4  max(dvec4 x , double y);
dvec2  max(dvec2 x , dvec2 y);
dvec3  max(dvec3 x , dvec3 y);
dvec4  max(dvec4 x , dvec4 y);
float clamp(float x,float minVal,float maxVal);
vec2 clamp(vec2 x,vec2 minVal,vec2 maxVal);
vec3 clamp(vec3 x,vec3 minVal,vec3 maxVal);
vec4 clamp(vec4 x,vec4 minVal,vec4 maxVal);
vec2 clamp(vec2 x,float minVal,float maxVal);
vec3 clamp(vec3 x,float minVal,float maxVal);
vec4 clamp(vec4 x,float minVal,float maxVal);
double clamp(double x, double minVal, double maxVal);
dvec2  clamp(dvec2 x , double minVal, double maxVal);
dvec3  clamp(dvec3 x , double minVal, double maxVal);
dvec4  clamp(dvec4 x , double minVal, double maxVal);
dvec2  clamp(dvec2 x , dvec2 minVal , dvec2 maxVal);
dvec3  clamp(dvec3 x , dvec3 minVal , dvec3 maxVal);
dvec4  clamp(dvec4 x , dvec4 minVal , dvec4 maxVal);
float mix(float x,float y,float a);
vec2 mix(vec2 x,vec2 y,vec2 a);
vec3 mix(vec3 x,vec3 y,vec3 a);
vec4 mix(vec4 x,vec4 y,vec4 a);
vec2 mix(vec2 x,vec2 y,float a);
vec3 mix(vec3 x,vec3 y,float a);
vec4 mix(vec4 x,vec4 y,float a);
bool mix(bool x,bool y ,bool a);
bvec2 mix(bvec2 x,bvec2 y,bvec2 a);
bvec3 mix(bvec3 x,bvec3 y,bvec3 a);
bvec4 mix(bvec4 x,bvec4 y,bvec4 a);
int mix(int x,int y,bool a);
ivec2 mix(ivec2 x,ivec2 y,bvec2 a);
ivec3 mix(ivec3 x,ivec3 y,bvec3 a);
ivec4 mix(ivec4 x,ivec4 y,bvec4 a);
uint mix(uint x,uint y,bool a);
uvec2 mix(uvec2 x,uvec2 y,bvec2 a);
uvec3 mix(uvec3 x,uvec3 y,bvec3 a);
uvec4 mix(uvec4 x,uvec4 y,bvec4 a);
double mix(double x, double y, double a);
dvec2  mix(dvec2 x,  dvec2 y,  double a);
dvec3  mix(dvec3 x,  dvec3 y,  double a);
dvec4  mix(dvec4 x,  dvec4 y,  double a);
dvec2  mix(dvec2 x,  dvec2 y,  dvec2 a);
dvec3  mix(dvec3 x,  dvec3 y,  dvec3 a);
dvec4  mix(dvec4 x,  dvec4 y,  dvec4 a);
double mix(double x, double y, bool a);
dvec2  mix(dvec2 x,  dvec2 y,  bvec2 a);
dvec3  mix(dvec3 x,  dvec3 y,  bvec3 a);
dvec4  mix(dvec4 x,  dvec4 y,  bvec4 a);
float step(float edge,float x);
vec2 step(vec2 edge,vec2 x);
vec3 step(vec3 edge,vec3 x);
vec4 step(vec4 edge,vec4 x);
vec2 step(float edge,vec2 x);
vec3 step(float edge,vec3 x);
vec4 step(float edge,vec4 x);
double step(double edge, double x);
dvec2  step(dvec2 edge , dvec2 x);
dvec3  step(dvec3 edge , dvec3 x);
dvec4  step(dvec4 edge , dvec4 x);
dvec2  step(double edge, dvec2 x);
dvec3  step(double edge, dvec3 x);
dvec4  step(double edge, dvec4 x);
float smoothstep(float edge0,float edge1,float x);
vec2 smoothstep(vec2 edge0,vec2 edge1,vec2 x);
vec3 smoothstep(vec3 edge0,vec3 edge1,vec3 x);
vec4 smoothstep(vec4 edge0,vec4 edge1,vec4 x);
vec2 smoothstep(float edge0,float edge1,vec2 x);
vec3 smoothstep(float edge0,float edge1,vec3 x);
vec4 smoothstep(float edge0,float edge1,vec4 x);
double smoothstep(double edge0, double edge1, double x);
dvec2  smoothstep(dvec2 edge0 , dvec2 edge1 , dvec2 x);
dvec3  smoothstep(dvec3 edge0 , dvec3 edge1 , dvec3 x);
dvec4  smoothstep(dvec4 edge0 , dvec4 edge1 , dvec4 x);
dvec2  smoothstep(double edge0, double edge1, dvec2 x);
dvec3  smoothstep(double edge0, double edge1, dvec3 x);
dvec4  smoothstep(double edge0, double edge1, dvec4 x);
bool isnan(float x);
bvec2 isnan(vec2 x);
bvec3 isnan(vec3 x);
bvec4 isnan(vec4 x);
bool  isnan(double x);
bvec2 isnan(dvec2 x);
bvec3 isnan(dvec3 x);
bvec4 isnan(dvec4 x);
bool isinf(float x);
bvec2 isinf(vec2 x);
bvec3 isinf(vec3 x);
bvec4 isinf(vec4 x);
bool  isinf(double x);
bvec2 isinf(dvec2 x);
bvec3 isinf(dvec3 x);
bvec4 isinf(dvec4 x);
float  fma(float a,  float b,  float c );
vec2   fma(vec2 a,   vec2 b,   vec2 c  );
vec3   fma(vec3 a,   vec3 b,   vec3 c  );
vec4   fma(vec4 a,   vec4 b,   vec4 c  );
double fma(double a, double b, double c);
dvec2  fma(dvec2 a,  dvec2 b,  dvec2 c );
dvec3  fma(dvec3 a,  dvec3 b,  dvec3 c );
dvec4  fma(dvec4 a,  dvec4 b,  dvec4 c );

__glsld_syscmd_begin_context__;
__glsld_syscmd_require_extension__ GL_EXT_shader_explicit_arithmetic_types_int64;

int64_t abs(int64_t x);
i64vec2 abs(i64vec2 x);
i64vec3 abs(i64vec3 x);
i64vec4 abs(i64vec4 x);
int64_t sign(int64_t x);
i64vec2 sign(i64vec2 x);
i64vec3 sign(i64vec3 x);
i64vec4 sign(i64vec4 x);
int64_t  min(int64_t x,  int64_t y);
i64vec2  min(i64vec2 x,  int64_t y);
i64vec3  min(i64vec3 x,  int64_t y);
i64vec4  min(i64vec4 x,  int64_t y);
i64vec2  min(i64vec2 x,  i64vec2 y);
i64vec3  min(i64vec3 x,  i64vec3 y);
i64vec4  min(i64vec4 x,  i64vec4 y);
uint64_t min(uint64_t x, uint64_t y);
u64vec2  min(u64vec2 x,  uint64_t y);
u64vec3  min(u64vec3 x,  uint64_t y);
u64vec4  min(u64vec4 x,  uint64_t y);
u64vec2  min(u64vec2 x,  u64vec2 y);
u64vec3  min(u64vec3 x,  u64vec3 y);
u64vec4  min(u64vec4 x,  u64vec4 y);
int64_t  max(int64_t x,  int64_t y);
i64vec2  max(i64vec2 x,  int64_t y);
i64vec3  max(i64vec3 x,  int64_t y);
i64vec4  max(i64vec4 x,  int64_t y);
i64vec2  max(i64vec2 x,  i64vec2 y);
i64vec3  max(i64vec3 x,  i64vec3 y);
i64vec4  max(i64vec4 x,  i64vec4 y);
uint64_t max(uint64_t x, uint64_t y);
u64vec2  max(u64vec2 x,  uint64_t y);
u64vec3  max(u64vec3 x,  uint64_t y);
u64vec4  max(u64vec4 x,  uint64_t y);
u64vec2  max(u64vec2 x,  u64vec2 y);
u64vec3  max(u64vec3 x,  u64vec3 y);
u64vec4  max(u64vec4 x,  u64vec4 y);
int64_t  clamp(int64_t x,  int64_t minVal,  int64_t maxVal);
i64vec2  clamp(i64vec2 x,  int64_t minVal,  int64_t maxVal);
i64vec3  clamp(i64vec3 x,  int64_t minVal,  int64_t maxVal);
i64vec4  clamp(i64vec4 x,  int64_t minVal,  int64_t maxVal);
i64vec2  clamp(i64vec2 x,  i64vec2 minVal,  i64vec2 maxVal);
i64vec3  clamp(i64vec3 x,  i64vec3 minVal,  i64vec3 maxVal);
i64vec4  clamp(i64vec4 x,  i64vec4 minVal,  i64vec4 maxVal);
uint64_t clamp(uint64_t x, uint64_t minVal, uint64_t maxVal);
u64vec2  clamp(u64vec2 x,  uint64_t minVal, uint64_t maxVal);
u64vec3  clamp(u64vec3 x,  uint64_t minVal, uint64_t maxVal);
u64vec4  clamp(u64vec4 x,  uint64_t minVal, uint64_t maxVal);
u64vec2  clamp(u64vec2 x,  u64vec2 minVal,  u64vec2 maxVal);
u64vec3  clamp(u64vec3 x,  u64vec3 minVal,  u64vec3 maxVal);
u64vec4  clamp(u64vec4 x,  u64vec4 minVal,  u64vec4 maxVal);
int64_t  mix(int64_t x,  int64_t y,  bool a);
i64vec2  mix(i64vec2 x,  i64vec2 y,  bvec2 a);
i64vec3  mix(i64vec3 x,  i64vec3 y,  bvec3 a);
i64vec4  mix(i64vec4 x,  i64vec4 y,  bvec4 a);
uint64_t mix(uint64_t x, uint64_t y, bool a);
u64vec2  mix(u64vec2 x,  u64vec2 y,  bvec2 a);
u64vec3  mix(u64vec3 x,  u64vec3 y,  bvec3 a);
u64vec4  mix(u64vec4 x,  u64vec4 y,  bvec4 a);

__glsld_syscmd_end_context__;


__glsld_syscmd_begin_context__;
__glsld_syscmd_require_extension__ GL_EXT_shader_explicit_arithmetic_types_int16;

int16_t abs(int16_t x);
i16vec2 abs(i16vec2 x);
i16vec3 abs(i16vec3 x);
i16vec4 abs(i16vec4 x);
int16_t sign(int16_t x);
i16vec2 sign(i16vec2 x);
i16vec3 sign(i16vec3 x);
i16vec4 sign(i16vec4 x);
int16_t min(int16_t x, int16_t y);
i16vec2 min(i16vec2 x, int16_t y);
i16vec3 min(i16vec3 x, int16_t y);
i16vec4 min(i16vec4 x, int16_t y);
i16vec2 min(i16vec2 x, i16vec2 y);
i16vec3 min(i16vec3 x, i16vec3 y);
i16vec4 min(i16vec4 x, i16vec4 y);
uint16_t min(uint16_t x, uint16_t y);
u16vec2 min(u16vec2 x, uint16_t y);
u16vec3 min(u16vec3 x, uint16_t y);
u16vec4 min(u16vec4 x, uint16_t y);
u16vec2 min(u16vec2 x, u16vec2 y);
u16vec3 min(u16vec3 x, u16vec3 y);
u16vec4 min(u16vec4 x, u16vec4 y);
int16_t max(int16_t x, int16_t y);
i16vec2 max(i16vec2 x, int16_t y);
i16vec3 max(i16vec3 x, int16_t y);
i16vec4 max(i16vec4 x, int16_t y);
i16vec2 max(i16vec2 x, i16vec2 y);
i16vec3 max(i16vec3 x, i16vec3 y);
i16vec4 max(i16vec4 x, i16vec4 y);
uint16_t max(uint16_t x, uint16_t y);
u16vec2 max(u16vec2 x, uint16_t y);
u16vec3 max(u16vec3 x, uint16_t y);
u16vec4 max(u16vec4 x, uint16_t y);
u16vec2 max(u16vec2 x, u16vec2 y);
u16vec3 max(u16vec3 x, u16vec3 y);
u16vec4 max(u16vec4 x, u16vec4 y);
int16_t    clamp(int16_t x, int16_t minVal, int16_t maxVal);
i16vec2  clamp(i16vec2  x, int16_t minVal, int16_t maxVal);
i16vec3  clamp(i16vec3  x, int16_t minVal, int16_t maxVal);
i16vec4  clamp(i16vec4  x, int16_t minVal, int16_t maxVal);
i16vec2  clamp(i16vec2  x, i16vec2  minVal, i16vec2  maxVal);
i16vec3  clamp(i16vec3  x, i16vec3  minVal, i16vec3  maxVal);
i16vec4  clamp(i16vec4  x, i16vec4  minVal, i16vec4  maxVal);
uint16_t   clamp(uint16_t x, uint16_t minVal, uint16_t maxVal);
u16vec2  clamp(u16vec2  x, uint16_t minVal, uint16_t maxVal);
u16vec3  clamp(u16vec3  x, uint16_t minVal, uint16_t maxVal);
u16vec4  clamp(u16vec4  x, uint16_t minVal, uint16_t maxVal);
u16vec2  clamp(u16vec2  x, u16vec2  minVal, u16vec2  maxVal);
u16vec3  clamp(u16vec3  x, u16vec3  minVal, u16vec3  maxVal);
u16vec4  clamp(u16vec4  x, u16vec4  minVal, u16vec4  maxVal);
int16_t  mix(int16_t x,  int16_t y,  bool a);
uint16_t mix(uint16_t x, uint16_t y, bool a);
i16vec2  mix(i16vec2 x,  i16vec2 y,  bvec2 a);
i16vec3  mix(i16vec3 x,  i16vec3 y,  bvec3 a);
i16vec4  mix(i16vec4 x,  i16vec4 y,  bvec4 a);
u16vec2  mix(u16vec2 x,  u16vec2 y,  bvec2 a);
u16vec3  mix(u16vec3 x,  u16vec3 y,  bvec3 a);
u16vec4  mix(u16vec4 x,  u16vec4 y,  bvec4 a);

__glsld_syscmd_end_context__;

__glsld_syscmd_begin_context__;
__glsld_syscmd_require_extension__ GL_EXT_shader_explicit_arithmetic_types_int8;

int8_t abs(int8_t x);
i8vec2 abs(i8vec2 x);
i8vec3 abs(i8vec3 x);
i8vec4 abs(i8vec4 x);
int8_t sign(int8_t x);
i8vec2 sign(i8vec2 x);
i8vec3 sign(i8vec3 x);
i8vec4 sign(i8vec4 x);
int8_t min(int8_t x, int8_t y);
i8vec2 min(i8vec2 x, int8_t y);
i8vec3 min(i8vec3 x, int8_t y);
i8vec4 min(i8vec4 x, int8_t y);
i8vec2 min(i8vec2 x, i8vec2 y);
i8vec3 min(i8vec3 x, i8vec3 y);
i8vec4 min(i8vec4 x, i8vec4 y);
uint8_t min(uint8_t x, uint8_t y);
u8vec2 min(u8vec2 x, uint8_t y);
u8vec3 min(u8vec3 x, uint8_t y);
u8vec4 min(u8vec4 x, uint8_t y);
u8vec2 min(u8vec2 x, u8vec2 y);
u8vec3 min(u8vec3 x, u8vec3 y);
u8vec4 min(u8vec4 x, u8vec4 y);
int8_t max(int8_t x, int8_t y);
i8vec2 max(i8vec2 x, int8_t y);
i8vec3 max(i8vec3 x, int8_t y);
i8vec4 max(i8vec4 x, int8_t y);
i8vec2 max(i8vec2 x, i8vec2 y);
i8vec3 max(i8vec3 x, i8vec3 y);
i8vec4 max(i8vec4 x, i8vec4 y);
uint8_t max(uint8_t x, uint8_t y);
u8vec2 max(u8vec2 x, uint8_t y);
u8vec3 max(u8vec3 x, uint8_t y);
u8vec4 max(u8vec4 x, uint8_t y);
u8vec2 max(u8vec2 x, u8vec2 y);
u8vec3 max(u8vec3 x, u8vec3 y);
u8vec4 max(u8vec4 x, u8vec4 y);
int8_t    clamp(int8_t x, int8_t minVal, int8_t maxVal);
i8vec2  clamp(i8vec2  x, int8_t minVal, int8_t maxVal);
i8vec3  clamp(i8vec3  x, int8_t minVal, int8_t maxVal);
i8vec4  clamp(i8vec4  x, int8_t minVal, int8_t maxVal);
i8vec2  clamp(i8vec2  x, i8vec2  minVal, i8vec2  maxVal);
i8vec3  clamp(i8vec3  x, i8vec3  minVal, i8vec3  maxVal);
i8vec4  clamp(i8vec4  x, i8vec4  minVal, i8vec4  maxVal);
uint8_t   clamp(uint8_t x, uint8_t minVal, uint8_t maxVal);
u8vec2  clamp(u8vec2  x, uint8_t minVal, uint8_t maxVal);
u8vec3  clamp(u8vec3  x, uint8_t minVal, uint8_t maxVal);
u8vec4  clamp(u8vec4  x, uint8_t minVal, uint8_t maxVal);
u8vec2  clamp(u8vec2  x, u8vec2  minVal, u8vec2  maxVal);
u8vec3  clamp(u8vec3  x, u8vec3  minVal, u8vec3  maxVal);
u8vec4  clamp(u8vec4  x, u8vec4  minVal, u8vec4  maxVal);
int8_t  mix(int8_t x,  int8_t y,  bool a);
i8vec2  mix(i8vec2 x,  i8vec2 y,  bvec2 a);
i8vec3  mix(i8vec3 x,  i8vec3 y,  bvec3 a);
i8vec4  mix(i8vec4 x,  i8vec4 y,  bvec4 a);
uint8_t mix(uint8_t x, uint8_t y, bool a);
u8vec2  mix(u8vec2 x,  u8vec2 y,  bvec2 a);
u8vec3  mix(u8vec3 x,  u8vec3 y,  bvec3 a);
u8vec4  mix(u8vec4 x,  u8vec4 y,  bvec4 a);

__glsld_syscmd_end_context__;


__glsld_syscmd_begin_context__;
__glsld_syscmd_require_extension__ GL_EXT_shader_explicit_arithmetic_types_float16;

float16_t abs(float16_t x);
f16vec2   abs(f16vec2 x);
f16vec3   abs(f16vec3 x);
f16vec4   abs(f16vec4 x);
float16_t sign(float16_t x);
f16vec2   sign(f16vec2 x);
f16vec3   sign(f16vec3 x);
f16vec4   sign(f16vec4 x);
float16_t floor(float16_t x);
f16vec2   floor(f16vec2 x);
f16vec3   floor(f16vec3 x);
f16vec4   floor(f16vec4 x);
float16_t trunc(float16_t x);
f16vec2   trunc(f16vec2 x);
f16vec3   trunc(f16vec3 x);
f16vec4   trunc(f16vec4 x);
float16_t round(float16_t x);
f16vec2   round(f16vec2 x);
f16vec3   round(f16vec3 x);
f16vec4   round(f16vec4 x);
float16_t roundEven(float16_t x);
f16vec2   roundEven(f16vec2 x);
f16vec3   roundEven(f16vec3 x);
f16vec4   roundEven(f16vec4 x);
float16_t ceil(float16_t x);
f16vec2   ceil(f16vec2 x);
f16vec3   ceil(f16vec3 x);
f16vec4   ceil(f16vec4 x);
float16_t fract(float16_t x);
f16vec2   fract(f16vec2 x);
f16vec3   fract(f16vec3 x);
f16vec4   fract(f16vec4 x);
float16_t mod(float16_t x, float16_t y);
f16vec2   mod(f16vec2 x,   float16_t y);
f16vec3   mod(f16vec3 x,   float16_t y);
f16vec4   mod(f16vec4 x,   float16_t y);
f16vec2   mod(f16vec2 x,   f16vec2 y);
f16vec3   mod(f16vec3 x,   f16vec3 y);
f16vec4   mod(f16vec4 x,   f16vec4 y);
float16_t modf(float16_t x, out float16_t i);
f16vec2   modf(f16vec2 x,   out f16vec2 i);
f16vec3   modf(f16vec3 x,   out f16vec3 i);
f16vec4   modf(f16vec4 x,   out f16vec4 i);
float16_t min(float16_t x, float16_t y);
f16vec2   min(f16vec2 x,   float16_t y);
f16vec3   min(f16vec3 x,   float16_t y);
f16vec4   min(f16vec4 x,   float16_t y);
f16vec2   min(f16vec2 x,   f16vec2 y);
f16vec3   min(f16vec3 x,   f16vec3 y);
f16vec4   min(f16vec4 x,   f16vec4 y);
float16_t max(float16_t x, float16_t y);
f16vec2   max(f16vec2 x,   float16_t y);
f16vec3   max(f16vec3 x,   float16_t y);
f16vec4   max(f16vec4 x,   float16_t y);
f16vec2   max(f16vec2 x,   f16vec2 y);
f16vec3   max(f16vec3 x,   f16vec3 y);
f16vec4   max(f16vec4 x,   f16vec4 y);
float16_t clamp(float16_t x, float16_t minVal, float16_t maxVal);
f16vec2   clamp(f16vec2 x,   float16_t minVal, float16_t maxVal);
f16vec3   clamp(f16vec3 x,   float16_t minVal, float16_t maxVal);
f16vec4   clamp(f16vec4 x,   float16_t minVal, float16_t maxVal);
f16vec2   clamp(f16vec2 x,   f16vec2 minVal,   f16vec2 maxVal);
f16vec3   clamp(f16vec3 x,   f16vec3 minVal,   f16vec3 maxVal);
f16vec4   clamp(f16vec4 x,   f16vec4 minVal,   f16vec4 maxVal);
float16_t mix(float16_t x, float16_t y, float16_t a);
f16vec2   mix(f16vec2 x,   f16vec2 y,   float16_t a);
f16vec3   mix(f16vec3 x,   f16vec3 y,   float16_t a);
f16vec4   mix(f16vec4 x,   f16vec4 y,   float16_t a);
f16vec2   mix(f16vec2 x,   f16vec2 y,   f16vec2 a);
f16vec3   mix(f16vec3 x,   f16vec3 y,   f16vec3 a);
f16vec4   mix(f16vec4 x,   f16vec4 y,   f16vec4 a);
float16_t mix(float16_t x, float16_t y, bool a);
f16vec2   mix(f16vec2 x,   f16vec2 y,   bvec2 a);
f16vec3   mix(f16vec3 x,   f16vec3 y,   bvec3 a);
f16vec4   mix(f16vec4 x,   f16vec4 y,   bvec4 a);
float16_t step(float16_t edge, float16_t x);
f16vec2   step(f16vec2 edge,   f16vec2 x);
f16vec3   step(f16vec3 edge,   f16vec3 x);
f16vec4   step(f16vec4 edge,   f16vec4 x);
f16vec2   step(float16_t edge, f16vec2 x);
f16vec3   step(float16_t edge, f16vec3 x);
f16vec4   step(float16_t edge, f16vec4 x);
float16_t smoothstep(float16_t edge0, float16_t edge1, float16_t x);
f16vec2   smoothstep(f16vec2 edge0,   f16vec2 edge1,   f16vec2 x);
f16vec3   smoothstep(f16vec3 edge0,   f16vec3 edge1,   f16vec3 x);
f16vec4   smoothstep(f16vec4 edge0,   f16vec4 edge1,   f16vec4 x);
f16vec2   smoothstep(float16_t edge0, float16_t edge1, f16vec2 x);
f16vec3   smoothstep(float16_t edge0, float16_t edge1, f16vec3 x);
f16vec4   smoothstep(float16_t edge0, float16_t edge1, f16vec4 x);
bool  isnan(float16_t x);
bvec2 isnan(f16vec2 x);
bvec3 isnan(f16vec3 x);
bvec4 isnan(f16vec4 x);
bool  isinf(float16_t x);
bvec2 isinf(f16vec2 x);
bvec3 isinf(f16vec3 x);
bvec4 isinf(f16vec4 x);
float16_t fma(float16_t a, float16_t b, float16_t c);
f16vec2   fma(f16vec2 a,   f16vec2 b,   f16vec2 c);
f16vec3   fma(f16vec3 a,   f16vec3 b,   f16vec3 c);
f16vec4   fma(f16vec4 a,   f16vec4 b,   f16vec4 c);

__glsld_syscmd_end_context__;
