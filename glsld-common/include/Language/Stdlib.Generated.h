// clang-format off
"uint atomicCounterIncrement(atomic_uint c);\n"
"uint atomicCounterDecrement(atomic_uint c);\n"
"uint atomicCounter(atomic_uint c);\n"
"uint atomicCounterAdd(atomic_uint c, uint data);\n"
"uint atomicCounterSubtract(atomic_uint c, uint data);\n"
"uint atomicCounterMin(atomic_uint c, uint data);\n"
"uint atomicCounterMax(atomic_uint c, uint data);\n"
"uint atomicCounterAnd(atomic_uint c, uint data);\n"
"uint atomicCounterOr(atomic_uint c, uint data);\n"
"uint atomicCounterXor(atomic_uint c, uint data);\n"
"uint atomicCounterExchange(atomic_uint c, uint data);\n"
"uint atomicCounterCompSwap(atomic_uint c, uint compare, uint data);"
"\n"
"__glsld_syscmd_begin_context__;\n"
"__glsld_syscmd_require_stage__ compute;\n"
"\n"
"void barrier();\n"
"\n"
"__glsld_syscmd_end_context__;\n"
"\n"
"float abs(float x);\n"
"vec2 abs(vec2 x);\n"
"vec3 abs(vec3 x);\n"
"vec4 abs(vec4 x);\n"
"int abs(int x);\n"
"ivec2 abs(ivec2 x);\n"
"ivec3 abs(ivec3 x);\n"
"ivec4 abs(ivec4 x);\n"
"double abs(double x);\n"
"dvec2  abs(dvec2 x);\n"
"dvec3  abs(dvec3 x);\n"
"dvec4  abs(dvec4 x);\n"
"float sign(float x);\n"
"vec2 sign(vec2 x);\n"
"vec3 sign(vec3 x);\n"
"vec4 sign(vec4 x);\n"
"int sign(int x);\n"
"ivec2 sign(ivec2 x);\n"
"ivec3 sign(ivec3 x);\n"
"ivec4 sign(ivec4 x);\n"
"double sign(double x);\n"
"dvec2  sign(dvec2 x);\n"
"dvec3  sign(dvec3 x);\n"
"dvec4  sign(dvec4 x);\n"
"float floor(float x);\n"
"vec2 floor(vec2 x);\n"
"vec3 floor(vec3 x);\n"
"vec4 floor(vec4 x);\n"
"double floor(double x);\n"
"dvec2  floor(dvec2 x);\n"
"dvec3  floor(dvec3 x);\n"
"dvec4  floor(dvec4 x);\n"
"float trunc(float x);\n"
"vec2 trunc(vec2 x);\n"
"vec3 trunc(vec3 x);\n"
"vec4 trunc(vec4 x);\n"
"double trunc(double x);\n"
"dvec2  trunc(dvec2 x);\n"
"dvec3  trunc(dvec3 x);\n"
"dvec4  trunc(dvec4 x);\n"
"float round(float x);\n"
"vec2 round(vec2 x);\n"
"vec3 round(vec3 x);\n"
"vec4 round(vec4 x);\n"
"double round(double x);\n"
"dvec2  round(dvec2 x);\n"
"dvec3  round(dvec3 x);\n"
"dvec4  round(dvec4 x);\n"
"float roundEven(float x);\n"
"vec2 roundEven(vec2 x);\n"
"vec3 roundEven(vec3 x);\n"
"vec4 roundEven(vec4 x);\n"
"double roundEven(double);\n"
"dvec2  roundEven(dvec2);\n"
"dvec3  roundEven(dvec3);\n"
"dvec4  roundEven(dvec4);\n"
"float ceil(float x);\n"
"vec2 ceil(vec2 x);\n"
"vec3 ceil(vec3 x);\n"
"vec4 ceil(vec4 x);\n"
"double ceil(double x);\n"
"dvec2  ceil(dvec2 x);\n"
"dvec3  ceil(dvec3 x);\n"
"dvec4  ceil(dvec4 x);\n"
"float fract(float x);\n"
"vec2 fract(vec2 x);\n"
"vec3 fract(vec3 x);\n"
"vec4 fract(vec4 x);\n"
"double fract(double x);\n"
"dvec2  fract(dvec2 x);\n"
"dvec3  fract(dvec3 x);\n"
"dvec4  fract(dvec4 x);\n"
"float mod(float x,float y);\n"
"vec2 mod(vec2 x,vec2 y);\n"
"vec3 mod(vec3 x,vec3 y);\n"
"vec4 mod(vec4 x,vec4 y);\n"
"vec2 mod(vec2 x,float y);\n"
"vec3 mod(vec3 x,float y);\n"
"vec4 mod(vec4 x,float y);\n"
"double mod(double x, double y);\n"
"dvec2  mod(dvec2 x, double y);\n"
"dvec3  mod(dvec3 x, double y);\n"
"dvec4  mod(dvec4 x, double y);\n"
"dvec2  mod(dvec2 x, dvec2 y);\n"
"dvec3  mod(dvec3 x, dvec3 y);\n"
"dvec4  mod(dvec4 x, dvec4 y);\n"
"float modf(float x,out float i);\n"
"vec2 modf(vec2 x,out vec2 i);\n"
"vec3 modf(vec3 x,out vec3 i);\n"
"vec4 modf(vec4 x,out vec4 i);\n"
"double modf(double x, out double i);\n"
"dvec2  modf(dvec2 x,  out dvec2 i);\n"
"dvec3  modf(dvec3 x,  out dvec3 i);\n"
"dvec4  modf(dvec4 x,  out dvec4 i);\n"
"float min(float x,float y);\n"
"vec2 min(vec2 x,vec2 y);\n"
"vec3 min(vec3 x,vec3 y);\n"
"vec4 min(vec4 x,vec4 y);\n"
"vec2 min(vec2 x,float y);\n"
"vec3 min(vec3 x,float y);\n"
"vec4 min(vec4 x,float y);\n"
"double min(double x, double y);\n"
"dvec2  min(dvec2 x,  double y);\n"
"dvec3  min(dvec3 x,  double y);\n"
"dvec4  min(dvec4 x,  double y);\n"
"dvec2  min(dvec2 x,  dvec2 y);\n"
"dvec3  min(dvec3 x,  dvec3 y);\n"
"dvec4  min(dvec4 x,  dvec4 y);\n"
"float max(float x,float y);\n"
"vec2 max(vec2 x,vec2 y);\n"
"vec3 max(vec3 x,vec3 y);\n"
"vec4 max(vec4 x,vec4 y);\n"
"vec2 max(vec2 x,float y);\n"
"vec3 max(vec3 x,float y);\n"
"vec4 max(vec4 x,float y);\n"
"double max(double x, double y);\n"
"dvec2  max(dvec2 x , double y);\n"
"dvec3  max(dvec3 x , double y);\n"
"dvec4  max(dvec4 x , double y);\n"
"dvec2  max(dvec2 x , dvec2 y);\n"
"dvec3  max(dvec3 x , dvec3 y);\n"
"dvec4  max(dvec4 x , dvec4 y);\n"
"float clamp(float x,float minVal,float maxVal);\n"
"vec2 clamp(vec2 x,vec2 minVal,vec2 maxVal);\n"
"vec3 clamp(vec3 x,vec3 minVal,vec3 maxVal);\n"
"vec4 clamp(vec4 x,vec4 minVal,vec4 maxVal);\n"
"vec2 clamp(vec2 x,float minVal,float maxVal);\n"
"vec3 clamp(vec3 x,float minVal,float maxVal);\n"
"vec4 clamp(vec4 x,float minVal,float maxVal);\n"
"double clamp(double x, double minVal, double maxVal);\n"
"dvec2  clamp(dvec2 x , double minVal, double maxVal);\n"
"dvec3  clamp(dvec3 x , double minVal, double maxVal);\n"
"dvec4  clamp(dvec4 x , double minVal, double maxVal);\n"
"dvec2  clamp(dvec2 x , dvec2 minVal , dvec2 maxVal);\n"
"dvec3  clamp(dvec3 x , dvec3 minVal , dvec3 maxVal);\n"
"dvec4  clamp(dvec4 x , dvec4 minVal , dvec4 maxVal);\n"
"float mix(float x,float y,float a);\n"
"vec2 mix(vec2 x,vec2 y,vec2 a);\n"
"vec3 mix(vec3 x,vec3 y,vec3 a);\n"
"vec4 mix(vec4 x,vec4 y,vec4 a);\n"
"vec2 mix(vec2 x,vec2 y,float a);\n"
"vec3 mix(vec3 x,vec3 y,float a);\n"
"vec4 mix(vec4 x,vec4 y,float a);\n"
"bool mix(bool x,bool y ,bool a);\n"
"bvec2 mix(bvec2 x,bvec2 y,bvec2 a);\n"
"bvec3 mix(bvec3 x,bvec3 y,bvec3 a);\n"
"bvec4 mix(bvec4 x,bvec4 y,bvec4 a);\n"
"int mix(int x,int y,bool a);\n"
"ivec2 mix(ivec2 x,ivec2 y,bvec2 a);\n"
"ivec3 mix(ivec3 x,ivec3 y,bvec3 a);\n"
"ivec4 mix(ivec4 x,ivec4 y,bvec4 a);\n"
"uint mix(uint x,uint y,bool a);\n"
"uvec2 mix(uvec2 x,uvec2 y,bvec2 a);\n"
"uvec3 mix(uvec3 x,uvec3 y,bvec3 a);\n"
"uvec4 mix(uvec4 x,uvec4 y,bvec4 a);\n"
"double mix(double x, double y, double a);\n"
"dvec2  mix(dvec2 x,  dvec2 y,  double a);\n"
"dvec3  mix(dvec3 x,  dvec3 y,  double a);\n"
"dvec4  mix(dvec4 x,  dvec4 y,  double a);\n"
"dvec2  mix(dvec2 x,  dvec2 y,  dvec2 a);\n"
"dvec3  mix(dvec3 x,  dvec3 y,  dvec3 a);\n"
"dvec4  mix(dvec4 x,  dvec4 y,  dvec4 a);\n"
"double mix(double x, double y, bool a);\n"
"dvec2  mix(dvec2 x,  dvec2 y,  bvec2 a);\n"
"dvec3  mix(dvec3 x,  dvec3 y,  bvec3 a);\n"
"dvec4  mix(dvec4 x,  dvec4 y,  bvec4 a);\n"
"float step(float edge,float x);\n"
"vec2 step(vec2 edge,vec2 x);\n"
"vec3 step(vec3 edge,vec3 x);\n"
"vec4 step(vec4 edge,vec4 x);\n"
"vec2 step(float edge,vec2 x);\n"
"vec3 step(float edge,vec3 x);\n"
"vec4 step(float edge,vec4 x);\n"
"double step(double edge, double x);\n"
"dvec2  step(dvec2 edge , dvec2 x);\n"
"dvec3  step(dvec3 edge , dvec3 x);\n"
"dvec4  step(dvec4 edge , dvec4 x);\n"
"dvec2  step(double edge, dvec2 x);\n"
"dvec3  step(double edge, dvec3 x);\n"
"dvec4  step(double edge, dvec4 x);\n"
"float smoothstep(float edge0,float edge1,float x);\n"
"vec2 smoothstep(vec2 edge0,vec2 edge1,vec2 x);\n"
"vec3 smoothstep(vec3 edge0,vec3 edge1,vec3 x);\n"
"vec4 smoothstep(vec4 edge0,vec4 edge1,vec4 x);\n"
"vec2 smoothstep(float edge0,float edge1,vec2 x);\n"
"vec3 smoothstep(float edge0,float edge1,vec3 x);\n"
"vec4 smoothstep(float edge0,float edge1,vec4 x);\n"
"double smoothstep(double edge0, double edge1, double x);\n"
"dvec2  smoothstep(dvec2 edge0 , dvec2 edge1 , dvec2 x);\n"
"dvec3  smoothstep(dvec3 edge0 , dvec3 edge1 , dvec3 x);\n"
"dvec4  smoothstep(dvec4 edge0 , dvec4 edge1 , dvec4 x);\n"
"dvec2  smoothstep(double edge0, double edge1, dvec2 x);\n"
"dvec3  smoothstep(double edge0, double edge1, dvec3 x);\n"
"dvec4  smoothstep(double edge0, double edge1, dvec4 x);\n"
"bool isnan(float x);\n"
"bvec2 isnan(vec2 x);\n"
"bvec3 isnan(vec3 x);\n"
"bvec4 isnan(vec4 x);\n"
"bool  isnan(double x);\n"
"bvec2 isnan(dvec2 x);\n"
"bvec3 isnan(dvec3 x);\n"
"bvec4 isnan(dvec4 x);\n"
"bool isinf(float x);\n"
"bvec2 isinf(vec2 x);\n"
"bvec3 isinf(vec3 x);\n"
"bvec4 isinf(vec4 x);\n"
"bool  isinf(double x);\n"
"bvec2 isinf(dvec2 x);\n"
"bvec3 isinf(dvec3 x);\n"
"bvec4 isinf(dvec4 x);\n"
"float  fma(float a,  float b,  float c );\n"
"vec2   fma(vec2 a,   vec2 b,   vec2 c  );\n"
"vec3   fma(vec3 a,   vec3 b,   vec3 c  );\n"
"vec4   fma(vec4 a,   vec4 b,   vec4 c  );\n"
"double fma(double a, double b, double c);\n"
"dvec2  fma(dvec2 a,  dvec2 b,  dvec2 c );\n"
"dvec3  fma(dvec3 a,  dvec3 b,  dvec3 c );\n"
"dvec4  fma(dvec4 a,  dvec4 b,  dvec4 c );\n"
"\n"
"__glsld_syscmd_begin_context__;\n"
"__glsld_syscmd_require_extension__ GL_EXT_shader_explicit_arithmetic_types_int64;\n"
"\n"
"int64_t abs(int64_t x);\n"
"i64vec2 abs(i64vec2 x);\n"
"i64vec3 abs(i64vec3 x);\n"
"i64vec4 abs(i64vec4 x);\n"
"int64_t sign(int64_t x);\n"
"i64vec2 sign(i64vec2 x);\n"
"i64vec3 sign(i64vec3 x);\n"
"i64vec4 sign(i64vec4 x);\n"
"int64_t  min(int64_t x,  int64_t y);\n"
"i64vec2  min(i64vec2 x,  int64_t y);\n"
"i64vec3  min(i64vec3 x,  int64_t y);\n"
"i64vec4  min(i64vec4 x,  int64_t y);\n"
"i64vec2  min(i64vec2 x,  i64vec2 y);\n"
"i64vec3  min(i64vec3 x,  i64vec3 y);\n"
"i64vec4  min(i64vec4 x,  i64vec4 y);\n"
"uint64_t min(uint64_t x, uint64_t y);\n"
"u64vec2  min(u64vec2 x,  uint64_t y);\n"
"u64vec3  min(u64vec3 x,  uint64_t y);\n"
"u64vec4  min(u64vec4 x,  uint64_t y);\n"
"u64vec2  min(u64vec2 x,  u64vec2 y);\n"
"u64vec3  min(u64vec3 x,  u64vec3 y);\n"
"u64vec4  min(u64vec4 x,  u64vec4 y);\n"
"int64_t  max(int64_t x,  int64_t y);\n"
"i64vec2  max(i64vec2 x,  int64_t y);\n"
"i64vec3  max(i64vec3 x,  int64_t y);\n"
"i64vec4  max(i64vec4 x,  int64_t y);\n"
"i64vec2  max(i64vec2 x,  i64vec2 y);\n"
"i64vec3  max(i64vec3 x,  i64vec3 y);\n"
"i64vec4  max(i64vec4 x,  i64vec4 y);\n"
"uint64_t max(uint64_t x, uint64_t y);\n"
"u64vec2  max(u64vec2 x,  uint64_t y);\n"
"u64vec3  max(u64vec3 x,  uint64_t y);\n"
"u64vec4  max(u64vec4 x,  uint64_t y);\n"
"u64vec2  max(u64vec2 x,  u64vec2 y);\n"
"u64vec3  max(u64vec3 x,  u64vec3 y);\n"
"u64vec4  max(u64vec4 x,  u64vec4 y);\n"
"int64_t  clamp(int64_t x,  int64_t minVal,  int64_t maxVal);\n"
"i64vec2  clamp(i64vec2 x,  int64_t minVal,  int64_t maxVal);\n"
"i64vec3  clamp(i64vec3 x,  int64_t minVal,  int64_t maxVal);\n"
"i64vec4  clamp(i64vec4 x,  int64_t minVal,  int64_t maxVal);\n"
"i64vec2  clamp(i64vec2 x,  i64vec2 minVal,  i64vec2 maxVal);\n"
"i64vec3  clamp(i64vec3 x,  i64vec3 minVal,  i64vec3 maxVal);\n"
"i64vec4  clamp(i64vec4 x,  i64vec4 minVal,  i64vec4 maxVal);\n"
"uint64_t clamp(uint64_t x, uint64_t minVal, uint64_t maxVal);\n"
"u64vec2  clamp(u64vec2 x,  uint64_t minVal, uint64_t maxVal);\n"
"u64vec3  clamp(u64vec3 x,  uint64_t minVal, uint64_t maxVal);\n"
"u64vec4  clamp(u64vec4 x,  uint64_t minVal, uint64_t maxVal);\n"
"u64vec2  clamp(u64vec2 x,  u64vec2 minVal,  u64vec2 maxVal);\n"
"u64vec3  clamp(u64vec3 x,  u64vec3 minVal,  u64vec3 maxVal);\n"
"u64vec4  clamp(u64vec4 x,  u64vec4 minVal,  u64vec4 maxVal);\n"
"int64_t  mix(int64_t x,  int64_t y,  bool a);\n"
"i64vec2  mix(i64vec2 x,  i64vec2 y,  bvec2 a);\n"
"i64vec3  mix(i64vec3 x,  i64vec3 y,  bvec3 a);\n"
"i64vec4  mix(i64vec4 x,  i64vec4 y,  bvec4 a);\n"
"uint64_t mix(uint64_t x, uint64_t y, bool a);\n"
"u64vec2  mix(u64vec2 x,  u64vec2 y,  bvec2 a);\n"
"u64vec3  mix(u64vec3 x,  u64vec3 y,  bvec3 a);\n"
"u64vec4  mix(u64vec4 x,  u64vec4 y,  bvec4 a);\n"
"\n"
"__glsld_syscmd_end_context__;\n"
"\n"
"\n"
"__glsld_syscmd_begin_context__;\n"
"__glsld_syscmd_require_extension__ GL_EXT_shader_explicit_arithmetic_types_int16;\n"
"\n"
"int16_t abs(int16_t x);\n"
"i16vec2 abs(i16vec2 x);\n"
"i16vec3 abs(i16vec3 x);\n"
"i16vec4 abs(i16vec4 x);\n"
"int16_t sign(int16_t x);\n"
"i16vec2 sign(i16vec2 x);\n"
"i16vec3 sign(i16vec3 x);\n"
"i16vec4 sign(i16vec4 x);\n"
"int16_t min(int16_t x, int16_t y);\n"
"i16vec2 min(i16vec2 x, int16_t y);\n"
"i16vec3 min(i16vec3 x, int16_t y);\n"
"i16vec4 min(i16vec4 x, int16_t y);\n"
"i16vec2 min(i16vec2 x, i16vec2 y);\n"
"i16vec3 min(i16vec3 x, i16vec3 y);\n"
"i16vec4 min(i16vec4 x, i16vec4 y);\n"
"uint16_t min(uint16_t x, uint16_t y);\n"
"u16vec2 min(u16vec2 x, uint16_t y);\n"
"u16vec3 min(u16vec3 x, uint16_t y);\n"
"u16vec4 min(u16vec4 x, uint16_t y);\n"
"u16vec2 min(u16vec2 x, u16vec2 y);\n"
"u16vec3 min(u16vec3 x, u16vec3 y);\n"
"u16vec4 min(u16vec4 x, u16vec4 y);\n"
"int16_t max(int16_t x, int16_t y);\n"
"i16vec2 max(i16vec2 x, int16_t y);\n"
"i16vec3 max(i16vec3 x, int16_t y);\n"
"i16vec4 max(i16vec4 x, int16_t y);\n"
"i16vec2 max(i16vec2 x, i16vec2 y);\n"
"i16vec3 max(i16vec3 x, i16vec3 y);\n"
"i16vec4 max(i16vec4 x, i16vec4 y);\n"
"uint16_t max(uint16_t x, uint16_t y);\n"
"u16vec2 max(u16vec2 x, uint16_t y);\n"
"u16vec3 max(u16vec3 x, uint16_t y);\n"
"u16vec4 max(u16vec4 x, uint16_t y);\n"
"u16vec2 max(u16vec2 x, u16vec2 y);\n"
"u16vec3 max(u16vec3 x, u16vec3 y);\n"
"u16vec4 max(u16vec4 x, u16vec4 y);\n"
"int16_t    clamp(int16_t x, int16_t minVal, int16_t maxVal);\n"
"i16vec2  clamp(i16vec2  x, int16_t minVal, int16_t maxVal);\n"
"i16vec3  clamp(i16vec3  x, int16_t minVal, int16_t maxVal);\n"
"i16vec4  clamp(i16vec4  x, int16_t minVal, int16_t maxVal);\n"
"i16vec2  clamp(i16vec2  x, i16vec2  minVal, i16vec2  maxVal);\n"
"i16vec3  clamp(i16vec3  x, i16vec3  minVal, i16vec3  maxVal);\n"
"i16vec4  clamp(i16vec4  x, i16vec4  minVal, i16vec4  maxVal);\n"
"uint16_t   clamp(uint16_t x, uint16_t minVal, uint16_t maxVal);\n"
"u16vec2  clamp(u16vec2  x, uint16_t minVal, uint16_t maxVal);\n"
"u16vec3  clamp(u16vec3  x, uint16_t minVal, uint16_t maxVal);\n"
"u16vec4  clamp(u16vec4  x, uint16_t minVal, uint16_t maxVal);\n"
"u16vec2  clamp(u16vec2  x, u16vec2  minVal, u16vec2  maxVal);\n"
"u16vec3  clamp(u16vec3  x, u16vec3  minVal, u16vec3  maxVal);\n"
"u16vec4  clamp(u16vec4  x, u16vec4  minVal, u16vec4  maxVal);\n"
"int16_t  mix(int16_t x,  int16_t y,  bool a);\n"
"uint16_t mix(uint16_t x, uint16_t y, bool a);\n"
"i16vec2  mix(i16vec2 x,  i16vec2 y,  bvec2 a);\n"
"i16vec3  mix(i16vec3 x,  i16vec3 y,  bvec3 a);\n"
"i16vec4  mix(i16vec4 x,  i16vec4 y,  bvec4 a);\n"
"u16vec2  mix(u16vec2 x,  u16vec2 y,  bvec2 a);\n"
"u16vec3  mix(u16vec3 x,  u16vec3 y,  bvec3 a);\n"
"u16vec4  mix(u16vec4 x,  u16vec4 y,  bvec4 a);\n"
"\n"
"__glsld_syscmd_end_context__;\n"
"\n"
"__glsld_syscmd_begin_context__;\n"
"__glsld_syscmd_require_extension__ GL_EXT_shader_explicit_arithmetic_types_int8;\n"
"\n"
"int8_t abs(int8_t x);\n"
"i8vec2 abs(i8vec2 x);\n"
"i8vec3 abs(i8vec3 x);\n"
"i8vec4 abs(i8vec4 x);\n"
"int8_t sign(int8_t x);\n"
"i8vec2 sign(i8vec2 x);\n"
"i8vec3 sign(i8vec3 x);\n"
"i8vec4 sign(i8vec4 x);\n"
"int8_t min(int8_t x, int8_t y);\n"
"i8vec2 min(i8vec2 x, int8_t y);\n"
"i8vec3 min(i8vec3 x, int8_t y);\n"
"i8vec4 min(i8vec4 x, int8_t y);\n"
"i8vec2 min(i8vec2 x, i8vec2 y);\n"
"i8vec3 min(i8vec3 x, i8vec3 y);\n"
"i8vec4 min(i8vec4 x, i8vec4 y);\n"
"uint8_t min(uint8_t x, uint8_t y);\n"
"u8vec2 min(u8vec2 x, uint8_t y);\n"
"u8vec3 min(u8vec3 x, uint8_t y);\n"
"u8vec4 min(u8vec4 x, uint8_t y);\n"
"u8vec2 min(u8vec2 x, u8vec2 y);\n"
"u8vec3 min(u8vec3 x, u8vec3 y);\n"
"u8vec4 min(u8vec4 x, u8vec4 y);\n"
"int8_t max(int8_t x, int8_t y);\n"
"i8vec2 max(i8vec2 x, int8_t y);\n"
"i8vec3 max(i8vec3 x, int8_t y);\n"
"i8vec4 max(i8vec4 x, int8_t y);\n"
"i8vec2 max(i8vec2 x, i8vec2 y);\n"
"i8vec3 max(i8vec3 x, i8vec3 y);\n"
"i8vec4 max(i8vec4 x, i8vec4 y);\n"
"uint8_t max(uint8_t x, uint8_t y);\n"
"u8vec2 max(u8vec2 x, uint8_t y);\n"
"u8vec3 max(u8vec3 x, uint8_t y);\n"
"u8vec4 max(u8vec4 x, uint8_t y);\n"
"u8vec2 max(u8vec2 x, u8vec2 y);\n"
"u8vec3 max(u8vec3 x, u8vec3 y);\n"
"u8vec4 max(u8vec4 x, u8vec4 y);\n"
"int8_t    clamp(int8_t x, int8_t minVal, int8_t maxVal);\n"
"i8vec2  clamp(i8vec2  x, int8_t minVal, int8_t maxVal);\n"
"i8vec3  clamp(i8vec3  x, int8_t minVal, int8_t maxVal);\n"
"i8vec4  clamp(i8vec4  x, int8_t minVal, int8_t maxVal);\n"
"i8vec2  clamp(i8vec2  x, i8vec2  minVal, i8vec2  maxVal);\n"
"i8vec3  clamp(i8vec3  x, i8vec3  minVal, i8vec3  maxVal);\n"
"i8vec4  clamp(i8vec4  x, i8vec4  minVal, i8vec4  maxVal);\n"
"uint8_t   clamp(uint8_t x, uint8_t minVal, uint8_t maxVal);\n"
"u8vec2  clamp(u8vec2  x, uint8_t minVal, uint8_t maxVal);\n"
"u8vec3  clamp(u8vec3  x, uint8_t minVal, uint8_t maxVal);\n"
"u8vec4  clamp(u8vec4  x, uint8_t minVal, uint8_t maxVal);\n"
"u8vec2  clamp(u8vec2  x, u8vec2  minVal, u8vec2  maxVal);\n"
"u8vec3  clamp(u8vec3  x, u8vec3  minVal, u8vec3  maxVal);\n"
"u8vec4  clamp(u8vec4  x, u8vec4  minVal, u8vec4  maxVal);\n"
"int8_t  mix(int8_t x,  int8_t y,  bool a);\n"
"i8vec2  mix(i8vec2 x,  i8vec2 y,  bvec2 a);\n"
"i8vec3  mix(i8vec3 x,  i8vec3 y,  bvec3 a);\n"
"i8vec4  mix(i8vec4 x,  i8vec4 y,  bvec4 a);\n"
"uint8_t mix(uint8_t x, uint8_t y, bool a);\n"
"u8vec2  mix(u8vec2 x,  u8vec2 y,  bvec2 a);\n"
"u8vec3  mix(u8vec3 x,  u8vec3 y,  bvec3 a);\n"
"u8vec4  mix(u8vec4 x,  u8vec4 y,  bvec4 a);\n"
"\n"
"__glsld_syscmd_end_context__;\n"
"\n"
"\n"
"__glsld_syscmd_begin_context__;\n"
"__glsld_syscmd_require_extension__ GL_EXT_shader_explicit_arithmetic_types_float16;\n"
"\n"
"float16_t abs(float16_t x);\n"
"f16vec2   abs(f16vec2 x);\n"
"f16vec3   abs(f16vec3 x);\n"
"f16vec4   abs(f16vec4 x);\n"
"float16_t sign(float16_t x);\n"
"f16vec2   sign(f16vec2 x);\n"
"f16vec3   sign(f16vec3 x);\n"
"f16vec4   sign(f16vec4 x);\n"
"float16_t floor(float16_t x);\n"
"f16vec2   floor(f16vec2 x);\n"
"f16vec3   floor(f16vec3 x);\n"
"f16vec4   floor(f16vec4 x);\n"
"float16_t trunc(float16_t x);\n"
"f16vec2   trunc(f16vec2 x);\n"
"f16vec3   trunc(f16vec3 x);\n"
"f16vec4   trunc(f16vec4 x);\n"
"float16_t round(float16_t x);\n"
"f16vec2   round(f16vec2 x);\n"
"f16vec3   round(f16vec3 x);\n"
"f16vec4   round(f16vec4 x);\n"
"float16_t roundEven(float16_t x);\n"
"f16vec2   roundEven(f16vec2 x);\n"
"f16vec3   roundEven(f16vec3 x);\n"
"f16vec4   roundEven(f16vec4 x);\n"
"float16_t ceil(float16_t x);\n"
"f16vec2   ceil(f16vec2 x);\n"
"f16vec3   ceil(f16vec3 x);\n"
"f16vec4   ceil(f16vec4 x);\n"
"float16_t fract(float16_t x);\n"
"f16vec2   fract(f16vec2 x);\n"
"f16vec3   fract(f16vec3 x);\n"
"f16vec4   fract(f16vec4 x);\n"
"float16_t mod(float16_t x, float16_t y);\n"
"f16vec2   mod(f16vec2 x,   float16_t y);\n"
"f16vec3   mod(f16vec3 x,   float16_t y);\n"
"f16vec4   mod(f16vec4 x,   float16_t y);\n"
"f16vec2   mod(f16vec2 x,   f16vec2 y);\n"
"f16vec3   mod(f16vec3 x,   f16vec3 y);\n"
"f16vec4   mod(f16vec4 x,   f16vec4 y);\n"
"float16_t modf(float16_t x, out float16_t i);\n"
"f16vec2   modf(f16vec2 x,   out f16vec2 i);\n"
"f16vec3   modf(f16vec3 x,   out f16vec3 i);\n"
"f16vec4   modf(f16vec4 x,   out f16vec4 i);\n"
"float16_t min(float16_t x, float16_t y);\n"
"f16vec2   min(f16vec2 x,   float16_t y);\n"
"f16vec3   min(f16vec3 x,   float16_t y);\n"
"f16vec4   min(f16vec4 x,   float16_t y);\n"
"f16vec2   min(f16vec2 x,   f16vec2 y);\n"
"f16vec3   min(f16vec3 x,   f16vec3 y);\n"
"f16vec4   min(f16vec4 x,   f16vec4 y);\n"
"float16_t max(float16_t x, float16_t y);\n"
"f16vec2   max(f16vec2 x,   float16_t y);\n"
"f16vec3   max(f16vec3 x,   float16_t y);\n"
"f16vec4   max(f16vec4 x,   float16_t y);\n"
"f16vec2   max(f16vec2 x,   f16vec2 y);\n"
"f16vec3   max(f16vec3 x,   f16vec3 y);\n"
"f16vec4   max(f16vec4 x,   f16vec4 y);\n"
"float16_t clamp(float16_t x, float16_t minVal, float16_t maxVal);\n"
"f16vec2   clamp(f16vec2 x,   float16_t minVal, float16_t maxVal);\n"
"f16vec3   clamp(f16vec3 x,   float16_t minVal, float16_t maxVal);\n"
"f16vec4   clamp(f16vec4 x,   float16_t minVal, float16_t maxVal);\n"
"f16vec2   clamp(f16vec2 x,   f16vec2 minVal,   f16vec2 maxVal);\n"
"f16vec3   clamp(f16vec3 x,   f16vec3 minVal,   f16vec3 maxVal);\n"
"f16vec4   clamp(f16vec4 x,   f16vec4 minVal,   f16vec4 maxVal);\n"
"float16_t mix(float16_t x, float16_t y, float16_t a);\n"
"f16vec2   mix(f16vec2 x,   f16vec2 y,   float16_t a);\n"
"f16vec3   mix(f16vec3 x,   f16vec3 y,   float16_t a);\n"
"f16vec4   mix(f16vec4 x,   f16vec4 y,   float16_t a);\n"
"f16vec2   mix(f16vec2 x,   f16vec2 y,   f16vec2 a);\n"
"f16vec3   mix(f16vec3 x,   f16vec3 y,   f16vec3 a);\n"
"f16vec4   mix(f16vec4 x,   f16vec4 y,   f16vec4 a);\n"
"float16_t mix(float16_t x, float16_t y, bool a);\n"
"f16vec2   mix(f16vec2 x,   f16vec2 y,   bvec2 a);\n"
"f16vec3   mix(f16vec3 x,   f16vec3 y,   bvec3 a);\n"
"f16vec4   mix(f16vec4 x,   f16vec4 y,   bvec4 a);\n"
"float16_t step(float16_t edge, float16_t x);\n"
"f16vec2   step(f16vec2 edge,   f16vec2 x);\n"
"f16vec3   step(f16vec3 edge,   f16vec3 x);\n"
"f16vec4   step(f16vec4 edge,   f16vec4 x);\n"
"f16vec2   step(float16_t edge, f16vec2 x);\n"
"f16vec3   step(float16_t edge, f16vec3 x);\n"
"f16vec4   step(float16_t edge, f16vec4 x);\n"
"float16_t smoothstep(float16_t edge0, float16_t edge1, float16_t x);\n"
"f16vec2   smoothstep(f16vec2 edge0,   f16vec2 edge1,   f16vec2 x);\n"
"f16vec3   smoothstep(f16vec3 edge0,   f16vec3 edge1,   f16vec3 x);\n"
"f16vec4   smoothstep(f16vec4 edge0,   f16vec4 edge1,   f16vec4 x);\n"
"f16vec2   smoothstep(float16_t edge0, float16_t edge1, f16vec2 x);\n"
"f16vec3   smoothstep(float16_t edge0, float16_t edge1, f16vec3 x);\n"
"f16vec4   smoothstep(float16_t edge0, float16_t edge1, f16vec4 x);\n"
"bool  isnan(float16_t x);\n"
"bvec2 isnan(f16vec2 x);\n"
"bvec3 isnan(f16vec3 x);\n"
"bvec4 isnan(f16vec4 x);\n"
"bool  isinf(float16_t x);\n"
"bvec2 isinf(f16vec2 x);\n"
"bvec3 isinf(f16vec3 x);\n"
"bvec4 isinf(f16vec4 x);\n"
"float16_t fma(float16_t a, float16_t b, float16_t c);\n"
"f16vec2   fma(f16vec2 a,   f16vec2 b,   f16vec2 c);\n"
"f16vec3   fma(f16vec3 a,   f16vec3 b,   f16vec3 c);\n"
"f16vec4   fma(f16vec4 a,   f16vec4 b,   f16vec4 c);\n"
"\n"
"__glsld_syscmd_end_context__;\n"
"int   floatBitsToInt(highp float value);\n"
"ivec2 floatBitsToInt(highp vec2  value);\n"
"ivec3 floatBitsToInt(highp vec3  value);\n"
"ivec4 floatBitsToInt(highp vec4  value);\n"
"uint  floatBitsToUint(highp float value);\n"
"uvec2 floatBitsToUint(highp vec2  value);\n"
"uvec3 floatBitsToUint(highp vec3  value);\n"
"uvec4 floatBitsToUint(highp vec4  value);\n"
"float intBitsToFloat(highp int   value);\n"
"vec2  intBitsToFloat(highp ivec2 value);\n"
"vec3  intBitsToFloat(highp ivec3 value);\n"
"vec4  intBitsToFloat(highp ivec4 value);\n"
"float uintBitsToFloat(highp uint  value);\n"
"vec2  uintBitsToFloat(highp uvec2 value);\n"
"vec3  uintBitsToFloat(highp uvec3 value);\n"
"vec4  uintBitsToFloat(highp uvec4 value);\n"
"float frexp(highp float x, out highp int exp);\n"
"vec2  frexp(highp vec2 x,  out highp ivec2 exp);\n"
"vec3  frexp(highp vec3 x,  out highp ivec3 exp);\n"
"vec4  frexp(highp vec4 x,  out highp ivec4 exp);\n"
"double  frexp(double x, out int exp);\n"
"dvec2  frexp( dvec2 x, out ivec2 exp);\n"
"dvec3  frexp( dvec3 x, out ivec3 exp);\n"
"dvec4  frexp( dvec4 x, out ivec4 exp);\n"
"float ldexp(highp float x, highp int exp);\n"
"vec2  ldexp(highp vec2 x,  highp ivec2 exp);\n"
"vec3  ldexp(highp vec3 x,  highp ivec3 exp);\n"
"vec4  ldexp(highp vec4 x,  highp ivec4 exp);\n"
"double ldexp(double x, int exp);\n"
"dvec2  ldexp(dvec2 x, ivec2 exp);\n"
"dvec3  ldexp(dvec3 x, ivec3 exp);\n"
"dvec4  ldexp(dvec4 x, ivec4 exp);\n"
"\n"
"__glsld_syscmd_begin_context__;\n"
"__glsld_syscmd_require_extension__ GL_EXT_shader_explicit_arithmetic_types_int64;\n"
"\n"
"int64_t doubleBitsToInt64(float64_t value);\n"
"uint64_t doubleBitsToUint64(float64_t value);\n"
"float64_t int64BitsToDouble(int64_t value);\n"
"float64_t uint64BitsToDouble(uint64_t value);\n"
"i64vec2 doubleBitsToInt64(f64vec2 value);\n"
"i64vec3 doubleBitsToInt64(f64vec3 value);\n"
"i64vec4 doubleBitsToInt64(f64vec4 value);\n"
"f64vec2  int64BitsToDouble(i64vec2 value);\n"
"f64vec3  int64BitsToDouble(i64vec3 value);\n"
"f64vec4  int64BitsToDouble(i64vec4 value);\n"
"u64vec2  doubleBitsToUint64(f64vec2 value);\n"
"u64vec3  doubleBitsToUint64(f64vec3 value);\n"
"u64vec4  doubleBitsToUint64(f64vec4 value);\n"
"f64vec2  uint64BitsToDouble(u64vec2 value);\n"
"f64vec3  uint64BitsToDouble(u64vec3 value);\n"
"f64vec4  uint64BitsToDouble(u64vec4 value);\n"
"\n"
"__glsld_syscmd_end_context__;\n"
"\n"
"__glsld_syscmd_begin_context__;\n"
"__glsld_syscmd_require_extension__ GL_EXT_shader_explicit_arithmetic_types_int16 GL_EXT_shader_explicit_arithmetic_types_float16;\n"
"\n"
"int16_t halfBitsToInt16(float16_t value);\n"
"uint16_t halfBitsToUint16(float16_t value);\n"
"int16_t float16BitsToInt16(float16_t value);\n"
"uint16_t float16BitsToUint16(float16_t value);\n"
"float16_t int16BitsToFloat16(int16_t value);\n"
"float16_t uint16BitsToFloat16(uint16_t value);\n"
"float16_t int16BitsToHalf(int16_t value);\n"
"float16_t uint16BitsToHalf(uint16_t value);\n"
"i16vec2 halfBitsToInt16(f16vec2 value);\n"
"i16vec3 halhBitsToInt16(f16vec3 value);\n"
"i16vec4 halfBitsToInt16(f16vec4 value);\n"
"i16vec2 float16BitsToInt16(f16vec2 value);\n"
"i16vec3 float16BitsToInt16(f16vec3 value);\n"
"i16vec4 float16BitsToInt16(f16vec4 value);\n"
"f16vec2   int16BitsToFloat16(i16vec2 value);\n"
"f16vec3   int16BitsToFloat16(i16vec3 value);\n"
"f16vec4   int16BitsToFloat16(i16vec4 value);\n"
"f16vec2   int16BitsToHalf(i16vec2 value);\n"
"f16vec3   int16BitsToHalf(i16vec3 value);\n"
"f16vec4   int16BitsToHalf(i16vec4 value);\n"
"u16vec2  halfBitsToUint16(f16vec2 value);\n"
"u16vec3  halfBitsToUint16(f16vec3 value);\n"
"u16vec4  halfBitsToUint16(f16vec4 value);\n"
"u16vec2  float16BitsToUint16(f16vec2 value);\n"
"u16vec3  float16BitsToUint16(f16vec3 value);\n"
"u16vec4  float16BitsToUint16(f16vec4 value);\n"
"f16vec2   uint16BitsToFloat16(u16vec2 value);\n"
"f16vec3   uint16BitsToFloat16(u16vec3 value);\n"
"f16vec4   uint16BitsToFloat16(u16vec4 value);\n"
"f16vec2   uint16BitsToHalf(u16vec2 value);\n"
"f16vec3   uint16BitsToHalf(u16vec3 value);\n"
"f16vec4   uint16BitsToHalf(u16vec4 value);\n"
"float16_t frexp(float16_t x, out int16_t exp);\n"
"f16vec2   frexp(f16vec2 x,   out i16vec2 exp);\n"
"f16vec3   frexp(f16vec3 x,   out i16vec3 exp);\n"
"f16vec4   frexp(f16vec4 x,   out i16vec4 exp);\n"
"float16_t frexp(float16_t x, out int exp);\n"
"f16vec2   frexp(f16vec2 x,   out ivec2 exp);\n"
"f16vec3   frexp(f16vec3 x,   out ivec3 exp);\n"
"f16vec4   frexp(f16vec4 x,   out ivec4 exp);\n"
"float16_t ldexp(float16_t x, int16_t exp);\n"
"f16vec2   ldexp(f16vec2 x,   i16vec2 exp);\n"
"f16vec3   ldexp(f16vec3 x,   i16vec3 exp);\n"
"f16vec4   ldexp(f16vec4 x,   i16vec4 exp);\n"
"float16_t ldexp(float16_t x, int exp);\n"
"f16vec2   ldexp(f16vec2 x,   ivec2 exp);\n"
"f16vec3   ldexp(f16vec3 x,   ivec3 exp);\n"
"f16vec4   ldexp(f16vec4 x,   ivec4 exp);\n"
"\n"
"__glsld_syscmd_end_context__;\n"
"// FIXME: support SPV_NV_compute_shader_derivatives, aka. derivative functions in compute shader\n"
"\n"
"__glsld_syscmd_begin_context__;\n"
"__glsld_syscmd_require_stage__ fragment;\n"
"\n"
"float dFdx(float);\n"
"vec2 dFdx(vec2);\n"
"vec3 dFdx(vec3);\n"
"vec4 dFdx(vec4);\n"
"float dFdy(float);\n"
"vec2 dFdy(vec2);\n"
"vec3 dFdy(vec3);\n"
"vec4 dFdy(vec4);\n"
"float dFdxFine(float p);\n"
"vec2  dFdxFine(vec2  p);\n"
"vec3  dFdxFine(vec3  p);\n"
"vec4  dFdxFine(vec4  p);\n"
"float dFdyFine(float p);\n"
"vec2  dFdyFine(vec2  p);\n"
"vec3  dFdyFine(vec3  p);\n"
"vec4  dFdyFine(vec4  p);\n"
"float dFdxCoarse(float p);\n"
"vec2  dFdxCoarse(vec2  p);\n"
"vec3  dFdxCoarse(vec3  p);\n"
"vec4  dFdxCoarse(vec4  p);\n"
"float dFdyCoarse(float p);\n"
"vec2  dFdyCoarse(vec2  p);\n"
"vec3  dFdyCoarse(vec3  p);\n"
"vec4  dFdyCoarse(vec4  p);\n"
"float fwidth(float);\n"
"vec2 fwidth(vec2);\n"
"vec3 fwidth(vec3);\n"
"vec4 fwidth(vec4);\n"
"float fwidthFine(float p);\n"
"vec2  fwidthFine(vec2  p);\n"
"vec3  fwidthFine(vec3  p);\n"
"vec4  fwidthFine(vec4  p);\n"
"float fwidthCoarse(float p);\n"
"vec2  fwidthCoarse(vec2  p);\n"
"vec3  fwidthCoarse(vec3  p);\n"
"vec4  fwidthCoarse(vec4  p);\n"
"\n"
"__glsld_syscmd_end_context__;\n"
"\n"
"__glsld_syscmd_begin_context__;\n"
"__glsld_syscmd_require_stage__ fragment;\n"
"\n"
"// float64_t dFdx(float64_t);\n"
"// f64vec2   dFdx(f64vec2);\n"
"// f64vec3   dFdx(f64vec3);\n"
"// f64vec4   dFdx(f64vec4);\n"
"// float64_t dFdy(float64_t);\n"
"// f64vec2   dFdy(f64vec2);\n"
"// f64vec3   dFdy(f64vec3);\n"
"// f64vec4   dFdy(f64vec4);\n"
"// float64_t dFdxFine(float64_t);\n"
"// f64vec2   dFdxFine(f64vec2);\n"
"// f64vec3   dFdxFine(f64vec3);\n"
"// f64vec4   dFdxFine(f64vec4);\n"
"// float64_t dFdyFine(float64_t);\n"
"// f64vec2   dFdyFine(f64vec2);\n"
"// f64vec3   dFdyFine(f64vec3);\n"
"// f64vec4   dFdyFine(f64vec4);\n"
"// float64_t dFdxCoarse(float64_t);\n"
"// f64vec2   dFdxCoarse(f64vec2);\n"
"// f64vec3   dFdxCoarse(f64vec3);\n"
"// f64vec4   dFdxCoarse(f64vec4);\n"
"// float64_t dFdyCoarse(float64_t);\n"
"// f64vec2   dFdyCoarse(f64vec2);\n"
"// f64vec3   dFdyCoarse(f64vec3);\n"
"// f64vec4   dFdyCoarse(f64vec4);\n"
"// float64_t fwidth(float64_t);\n"
"// f64vec2   fwidth(f64vec2);\n"
"// f64vec3   fwidth(f64vec3);\n"
"// f64vec4   fwidth(f64vec4);\n"
"// float64_t fwidthFine(float64_t);\n"
"// f64vec2   fwidthFine(f64vec2);\n"
"// f64vec3   fwidthFine(f64vec3);\n"
"// f64vec4   fwidthFine(f64vec4);\n"
"// float64_t fwidthCoarse(float64_t);\n"
"// f64vec2   fwidthCoarse(f64vec2);\n"
"// f64vec3   fwidthCoarse(f64vec3);\n"
"// f64vec4   fwidthCoarse(f64vec4);\n"
"// float16_t dFdx(float16_t);\n"
"// f16vec2   dFdx(f16vec2);\n"
"// f16vec3   dFdx(f16vec3);\n"
"// f16vec4   dFdx(f16vec4);\n"
"// float16_t dFdy(float16_t);\n"
"// f16vec2   dFdy(f16vec2);\n"
"// f16vec3   dFdy(f16vec3);\n"
"// f16vec4   dFdy(f16vec4);\n"
"// float16_t dFdxFine(float16_t);\n"
"// f16vec2   dFdxFine(f16vec2);\n"
"// f16vec3   dFdxFine(f16vec3);\n"
"// f16vec4   dFdxFine(f16vec4);\n"
"// float16_t dFdyFine(float16_t);\n"
"// f16vec2   dFdyFine(f16vec2);\n"
"// f16vec3   dFdyFine(f16vec3);\n"
"// f16vec4   dFdyFine(f16vec4);\n"
"// float16_t dFdxCoarse(float16_t);\n"
"// f16vec2   dFdxCoarse(f16vec2);\n"
"// f16vec3   dFdxCoarse(f16vec3);\n"
"// f16vec4   dFdxCoarse(f16vec4);\n"
"// float16_t dFdyCoarse(float16_t);\n"
"// f16vec2   dFdyCoarse(f16vec2);\n"
"// f16vec3   dFdyCoarse(f16vec3);\n"
"// f16vec4   dFdyCoarse(f16vec4);\n"
"// float16_t fwidth(float16_t);\n"
"// f16vec2   fwidth(f16vec2);\n"
"// f16vec3   fwidth(f16vec3);\n"
"// f16vec4   fwidth(f16vec4);\n"
"// float16_t fwidthFine(float16_t);\n"
"// f16vec2   fwidthFine(f16vec2);\n"
"// f16vec3   fwidthFine(f16vec3);\n"
"// f16vec4   fwidthFine(f16vec4);\n"
"// float16_t fwidthCoarse(float16_t);\n"
"// f16vec2   fwidthCoarse(f16vec2);\n"
"// f16vec3   fwidthCoarse(f16vec3);\n"
"// f16vec4   fwidthCoarse(f16vec4);\n"
"\n"
"__glsld_syscmd_end_context__;\n"
"// double?\n"
"float pow(float x,float y);\n"
"vec2 pow(vec2 x,vec2 y);\n"
"vec3 pow(vec3 x,vec3 y);\n"
"vec4 pow(vec4 x,vec4 y);\n"
"float exp(float x);\n"
"vec2 exp(vec2 x);\n"
"vec3 exp(vec3 x);\n"
"vec4 exp(vec4 x);\n"
"float log(float x);\n"
"vec2 log(vec2 x);\n"
"vec3 log(vec3 x);\n"
"vec4 log(vec4 x);\n"
"float exp2(float x);\n"
"vec2 exp2(vec2 x);\n"
"vec3 exp2(vec3 x);\n"
"vec4 exp2(vec4 x);\n"
"float log2(float x);\n"
"vec2 log2(vec2 x);\n"
"vec3 log2(vec3 x);\n"
"vec4 log2(vec4 x);\n"
"float sqrt(float x);\n"
"vec2 sqrt(vec2 x);\n"
"vec3 sqrt(vec3 x);\n"
"vec4 sqrt(vec4 x);\n"
"float inversesqrt(float x);\n"
"vec2 inversesqrt(vec2 x);\n"
"vec3 inversesqrt(vec3 x);\n"
"vec4 inversesqrt(vec4 x);\n"
"double sqrt(double);\n"
"dvec2  sqrt(dvec2);\n"
"dvec3  sqrt(dvec3);\n"
"dvec4  sqrt(dvec4);\n"
"double inversesqrt(double);\n"
"dvec2  inversesqrt(dvec2);\n"
"dvec3  inversesqrt(dvec3);\n"
"dvec4  inversesqrt(dvec4);\n"
"\n"
"__glsld_syscmd_begin_context__;\n"
"__glsld_syscmd_require_extension__ GL_EXT_shader_explicit_arithmetic_types_float16;\n"
"\n"
"float16_t pow(float16_t x, float16_t y);\n"
"f16vec2   pow(f16vec2 x,   f16vec2 y);\n"
"f16vec3   pow(f16vec3 x,   f16vec3 y);\n"
"f16vec4   pow(f16vec4 x,   f16vec4 y);\n"
"float16_t exp(float16_t x);\n"
"f16vec2   exp(f16vec2 x);\n"
"f16vec3   exp(f16vec3 x);\n"
"f16vec4   exp(f16vec4 x);\n"
"float16_t log(float16_t x);\n"
"f16vec2   log(f16vec2 x);\n"
"f16vec3   log(f16vec3 x);\n"
"f16vec4   log(f16vec4 x);\n"
"float16_t exp2(float16_t x);\n"
"f16vec2   exp2(f16vec2 x);\n"
"f16vec3   exp2(f16vec3 x);\n"
"f16vec4   exp2(f16vec4 x);\n"
"float16_t log2(float16_t x);\n"
"f16vec2   log2(f16vec2 x);\n"
"f16vec3   log2(f16vec3 x);\n"
"f16vec4   log2(f16vec4 x);\n"
"float16_t sqrt(float16_t x);\n"
"f16vec2   sqrt(f16vec2 x);\n"
"f16vec3   sqrt(f16vec3 x);\n"
"f16vec4   sqrt(f16vec4 x);\n"
"float16_t inversesqrt(float16_t x);\n"
"f16vec2   inversesqrt(f16vec2 x);\n"
"f16vec3   inversesqrt(f16vec3 x);\n"
"f16vec4   inversesqrt(f16vec4 x);\n"
"\n"
"__glsld_syscmd_end_context__;\n"
"\n"
"float length(float x);\n"
"float length(vec2 x);\n"
"float length(vec3 x);\n"
"float length(vec4 x);\n"
"double length(double x);\n"
"double length(dvec2 x);\n"
"double length(dvec3 x);\n"
"double length(dvec4 x);\n"
"float distance(float p0,float p1);\n"
"float distance(vec2 p0,vec2 p1);\n"
"float distance(vec3 p0,vec3 p1);\n"
"float distance(vec4 p0,vec4 p1);\n"
"double distance(double p0, double p1);\n"
"double distance(dvec2 p0, dvec2 p1);\n"
"double distance(dvec3 p0, dvec3 p1);\n"
"double distance(dvec4 p0, dvec4 p1);\n"
"float dot(float x,float y);\n"
"float dot(vec2 x,vec2 y);\n"
"float dot(vec3 x,vec3 y);\n"
"float dot(vec4 x,vec4 y);\n"
"double dot(double x, double y);\n"
"double dot(dvec2 x, dvec2 y);\n"
"double dot(dvec3 x, dvec3 y);\n"
"double dot(dvec4 x, dvec4 y);\n"
"vec3 cross(vec3 x,vec3 y);\n"
"dvec3 cross(dvec3 x, dvec3 y);\n"
"float normalize(float x);\n"
"vec2 normalize(vec2 x);\n"
"vec3 normalize(vec3 x);\n"
"vec4 normalize(vec4 x);\n"
"double normalize(double x);\n"
"dvec2  normalize(dvec2 x);\n"
"dvec3  normalize(dvec3 x);\n"
"dvec4  normalize(dvec4 x);\n"
"float faceforward(float N,float I,float NRef);\n"
"vec2 faceforward(vec2 N,vec2 I,vec2 NRef);\n"
"vec3 faceforward(vec3 N,vec3 I,vec3 NRef);\n"
"vec4 faceforward(vec4 N,vec4 I,vec4 NRef);\n"
"double faceforward(double N, double I, double NRef);\n"
"dvec2  faceforward(dvec2 N,  dvec2 I,  dvec2 NRef);\n"
"dvec3  faceforward(dvec3 N,  dvec3 I,  dvec3 NRef);\n"
"dvec4  faceforward(dvec4 N,  dvec4 I,  dvec4 NRef);\n"
"float reflect(float I,float N);\n"
"vec2 reflect(vec2 I,vec2 N);\n"
"vec3 reflect(vec3 I,vec3 N);\n"
"vec4 reflect(vec4 I,vec4 N);\n"
"double reflect(double I, double N);\n"
"dvec2  reflect(dvec2 I, dvec2 N);\n"
"dvec3  reflect(dvec3 I, dvec3 N);\n"
"dvec4  reflect(dvec4 I, dvec4 N);\n"
"float refract(float I,float N,float eta);\n"
"vec2 refract(vec2 I,vec2 N,float eta);\n"
"vec3 refract(vec3 I,vec3 N,float eta);\n"
"vec4 refract(vec4 I,vec4 N,float eta);\n"
"double refract(double I, double N, double eta);\n"
"dvec2  refract(dvec2 I, dvec2 N, double eta);\n"
"dvec3  refract(dvec3 I, dvec3 N, double eta);\n"
"dvec4  refract(dvec4 I, dvec4 N, double eta);\n"
"\n"
"__glsld_syscmd_begin_context__;\n"
"__glsld_syscmd_require_extension__ GL_EXT_shader_explicit_arithmetic_types_float16;\n"
"\n"
"float16_t length(float16_t x);\n"
"float16_t length(f16vec2 x);\n"
"float16_t length(f16vec3 x);\n"
"float16_t length(f16vec4 x);\n"
"float16_t distance(float16_t p0, float16_t p1);\n"
"float16_t distance(f16vec2 p0,   f16vec2 p1);\n"
"float16_t distance(f16vec3 p0,   f16vec3 p1);\n"
"float16_t distance(f16vec4 p0,   f16vec4 p1);\n"
"float16_t dot(float16_t x, float16_t y);\n"
"float16_t dot(f16vec2 x,   f16vec2 y);\n"
"float16_t dot(f16vec3 x,   f16vec3 y);\n"
"float16_t dot(f16vec4 x,   f16vec4 y);\n"
"f16vec3 cross(f16vec3 x, f16vec3 y);\n"
"float16_t normalize(float16_t x);\n"
"f16vec2   normalize(f16vec2 x);\n"
"f16vec3   normalize(f16vec3 x);\n"
"f16vec4   normalize(f16vec4 x);\n"
"float16_t faceforward(float16_t N, float16_t I, float16_t NRef);\n"
"f16vec2   faceforward(f16vec2 N,   f16vec2 I,   f16vec2 NRef);\n"
"f16vec3   faceforward(f16vec3 N,   f16vec3 I,   f16vec3 NRef);\n"
"f16vec4   faceforward(f16vec4 N,   f16vec4 I,   f16vec4 NRef);\n"
"float16_t reflect(float16_t I, float16_t N);\n"
"f16vec2   reflect(f16vec2 I,   f16vec2 N);\n"
"f16vec3   reflect(f16vec3 I,   f16vec3 N);\n"
"f16vec4   reflect(f16vec4 I,   f16vec4 N);\n"
"float16_t refract(float16_t I, float16_t N, float16_t eta);\n"
"f16vec2   refract(f16vec2 I,   f16vec2 N,   float16_t eta);\n"
"f16vec3   refract(f16vec3 I,   f16vec3 N,   float16_t eta);\n"
"f16vec4   refract(f16vec4 I,   f16vec4 N,   float16_t eta);\n"
"\n"
"__glsld_syscmd_end_context__;\n"
"int imageSize(readonly writeonly volatile coherent image1D image);\n"
"int imageSize(readonly writeonly volatile coherent iimage1D image);\n"
"int imageSize(readonly writeonly volatile coherent uimage1D image);\n"
"ivec2 imageSize(readonly writeonly volatile coherent image2D image);\n"
"ivec2 imageSize(readonly writeonly volatile coherent iimage2D image);\n"
"ivec2 imageSize(readonly writeonly volatile coherent uimage2D image);\n"
"ivec3 imageSize(readonly writeonly volatile coherent image3D image);\n"
"ivec3 imageSize(readonly writeonly volatile coherent iimage3D image);\n"
"ivec3 imageSize(readonly writeonly volatile coherent uimage3D image);\n"
"ivec2 imageSize(readonly writeonly volatile coherent imageCube image);\n"
"ivec2 imageSize(readonly writeonly volatile coherent iimageCube image);\n"
"ivec2 imageSize(readonly writeonly volatile coherent uimageCube image);\n"
"ivec2 imageSize(readonly writeonly volatile coherent image2DRect image);\n"
"ivec2 imageSize(readonly writeonly volatile coherent iimage2DRect image);\n"
"ivec2 imageSize(readonly writeonly volatile coherent uimage2DRect image);\n"
"int imageSize(readonly writeonly volatile coherent imageBuffer image);\n"
"int imageSize(readonly writeonly volatile coherent iimageBuffer image);\n"
"int imageSize(readonly writeonly volatile coherent uimageBuffer image);\n"
"ivec2 imageSize(readonly writeonly volatile coherent image1DArray image);\n"
"ivec2 imageSize(readonly writeonly volatile coherent iimage1DArray image);\n"
"ivec2 imageSize(readonly writeonly volatile coherent uimage1DArray image);\n"
"ivec3 imageSize(readonly writeonly volatile coherent image2DArray image);\n"
"ivec3 imageSize(readonly writeonly volatile coherent iimage2DArray image);\n"
"ivec3 imageSize(readonly writeonly volatile coherent uimage2DArray image);\n"
"ivec3 imageSize(readonly writeonly volatile coherent imageCubeArray image);\n"
"ivec3 imageSize(readonly writeonly volatile coherent iimageCubeArray image);\n"
"ivec3 imageSize(readonly writeonly volatile coherent uimageCubeArray image);\n"
"ivec2 imageSize(readonly writeonly volatile coherent image2DMS image);\n"
"ivec2 imageSize(readonly writeonly volatile coherent iimage2DMS image);\n"
"ivec2 imageSize(readonly writeonly volatile coherent uimage2DMS image);\n"
"ivec3 imageSize(readonly writeonly volatile coherent image2DMSArray image);\n"
"ivec3 imageSize(readonly writeonly volatile coherent iimage2DMSArray image);\n"
"ivec3 imageSize(readonly writeonly volatile coherent uimage2DMSArray image);\n"
"int imageSamples(readonly writeonly volatile coherent image2DMS image);\n"
"int imageSamples(readonly writeonly volatile coherent iimage2DMS image);\n"
"int imageSamples(readonly writeonly volatile coherent uimage2DMS image);\n"
"int imageSamples(readonly writeonly volatile coherent image2DMSArray image);\n"
"int imageSamples(readonly writeonly volatile coherent iimage2DMSArray image);\n"
"int imageSamples(readonly writeonly volatile coherent uimage2DMSArray image);\n"
"vec4 imageLoad(readonly volatile coherent image1D image, int P);\n"
"ivec4 imageLoad(readonly volatile coherent iimage1D image, int P);\n"
"uvec4 imageLoad(readonly volatile coherent uimage1D image, int P);\n"
"vec4 imageLoad(readonly volatile coherent image2D image, ivec2 P);\n"
"ivec4 imageLoad(readonly volatile coherent iimage2D image, ivec2 P);\n"
"uvec4 imageLoad(readonly volatile coherent uimage2D image, ivec2 P);\n"
"vec4 imageLoad(readonly volatile coherent image3D image, ivec3 P);\n"
"ivec4 imageLoad(readonly volatile coherent iimage3D image, ivec3 P);\n"
"uvec4 imageLoad(readonly volatile coherent uimage3D image, ivec3 P);\n"
"vec4 imageLoad(readonly volatile coherent imageCube image, ivec3 P);\n"
"ivec4 imageLoad(readonly volatile coherent iimageCube image, ivec3 P);\n"
"uvec4 imageLoad(readonly volatile coherent uimageCube image, ivec3 P);\n"
"vec4 imageLoad(readonly volatile coherent image2DRect image, ivec2 P);\n"
"ivec4 imageLoad(readonly volatile coherent iimage2DRect image, ivec2 P);\n"
"uvec4 imageLoad(readonly volatile coherent uimage2DRect image, ivec2 P);\n"
"vec4 imageLoad(readonly volatile coherent imageBuffer image, int P);\n"
"ivec4 imageLoad(readonly volatile coherent iimageBuffer image, int P);\n"
"uvec4 imageLoad(readonly volatile coherent uimageBuffer image, int P);\n"
"vec4 imageLoad(readonly volatile coherent image1DArray image, ivec2 P);\n"
"ivec4 imageLoad(readonly volatile coherent iimage1DArray image, ivec2 P);\n"
"uvec4 imageLoad(readonly volatile coherent uimage1DArray image, ivec2 P);\n"
"vec4 imageLoad(readonly volatile coherent image2DArray image, ivec3 P);\n"
"ivec4 imageLoad(readonly volatile coherent iimage2DArray image, ivec3 P);\n"
"uvec4 imageLoad(readonly volatile coherent uimage2DArray image, ivec3 P);\n"
"vec4 imageLoad(readonly volatile coherent imageCubeArray image, ivec3 P);\n"
"ivec4 imageLoad(readonly volatile coherent iimageCubeArray image, ivec3 P);\n"
"uvec4 imageLoad(readonly volatile coherent uimageCubeArray image, ivec3 P);\n"
"vec4 imageLoad(readonly volatile coherent image2DMS image, ivec2 P, int sample);\n"
"ivec4 imageLoad(readonly volatile coherent iimage2DMS image, ivec2 P, int sample);\n"
"uvec4 imageLoad(readonly volatile coherent uimage2DMS image, ivec2 P, int sample);\n"
"vec4 imageLoad(readonly volatile coherent image2DMSArray image, ivec3 P, int sample);\n"
"ivec4 imageLoad(readonly volatile coherent iimage2DMSArray image, ivec3 P, int sample);\n"
"uvec4 imageLoad(readonly volatile coherent uimage2DMSArray image, ivec3 P, int sample);\n"
"void imageStore(writeonly volatile coherent image1D image, int P, vec4 data);\n"
"void imageStore(writeonly volatile coherent iimage1D image, int P, ivec4 data);\n"
"void imageStore(writeonly volatile coherent uimage1D image, int P, uvec4 data);\n"
"void imageStore(writeonly volatile coherent image2D image, ivec2 P, vec4 data);\n"
"void imageStore(writeonly volatile coherent iimage2D image, ivec2 P, ivec4 data);\n"
"void imageStore(writeonly volatile coherent uimage2D image, ivec2 P, uvec4 data);\n"
"void imageStore(writeonly volatile coherent image3D image, ivec3 P, vec4 data);\n"
"void imageStore(writeonly volatile coherent iimage3D image, ivec3 P, ivec4 data);\n"
"void imageStore(writeonly volatile coherent uimage3D image, ivec3 P, uvec4 data);\n"
"void imageStore(writeonly volatile coherent imageCube image, ivec3 P, vec4 data);\n"
"void imageStore(writeonly volatile coherent iimageCube image, ivec3 P, ivec4 data);\n"
"void imageStore(writeonly volatile coherent uimageCube image, ivec3 P, uvec4 data);\n"
"void imageStore(writeonly volatile coherent image2DRect image, ivec2 P, vec4 data);\n"
"void imageStore(writeonly volatile coherent iimage2DRect image, ivec2 P, ivec4 data);\n"
"void imageStore(writeonly volatile coherent uimage2DRect image, ivec2 P, uvec4 data);\n"
"void imageStore(writeonly volatile coherent imageBuffer image, int P, vec4 data);\n"
"void imageStore(writeonly volatile coherent iimageBuffer image, int P, ivec4 data);\n"
"void imageStore(writeonly volatile coherent uimageBuffer image, int P, uvec4 data);\n"
"void imageStore(writeonly volatile coherent image1DArray image, ivec2 P, vec4 data);\n"
"void imageStore(writeonly volatile coherent iimage1DArray image, ivec2 P, ivec4 data);\n"
"void imageStore(writeonly volatile coherent uimage1DArray image, ivec2 P, uvec4 data);\n"
"void imageStore(writeonly volatile coherent image2DArray image, ivec3 P, vec4 data);\n"
"void imageStore(writeonly volatile coherent iimage2DArray image, ivec3 P, ivec4 data);\n"
"void imageStore(writeonly volatile coherent uimage2DArray image, ivec3 P, uvec4 data);\n"
"void imageStore(writeonly volatile coherent imageCubeArray image, ivec3 P, vec4 data);\n"
"void imageStore(writeonly volatile coherent iimageCubeArray image, ivec3 P, ivec4 data);\n"
"void imageStore(writeonly volatile coherent uimageCubeArray image, ivec3 P, uvec4 data);\n"
"void imageStore(writeonly volatile coherent image2DMS image, ivec2 P, int sample, vec4 data);\n"
"void imageStore(writeonly volatile coherent iimage2DMS image, ivec2 P, int sample, ivec4 data);\n"
"void imageStore(writeonly volatile coherent uimage2DMS image, ivec2 P, int sample, uvec4 data);\n"
"void imageStore(writeonly volatile coherent image2DMSArray image, ivec3 P, int sample, vec4 data);\n"
"void imageStore(writeonly volatile coherent iimage2DMSArray image, ivec3 P, int sample, ivec4 data);\n"
"void imageStore(writeonly volatile coherent uimage2DMSArray image, ivec3 P, int sample, uvec4 data);\n"
"\n"
"__glsld_syscmd_begin_context__;\n"
"__glsld_syscmd_require_extension__ GL_EXT_shader_explicit_arithmetic_types_int64;\n"
"\n"
"int imageSize(readonly writeonly volatile coherent i64image1D image);\n"
"ivec2 imageSize(readonly writeonly volatile coherent i64image2D image);\n"
"ivec3 imageSize(readonly writeonly volatile coherent i64image3D image);\n"
"ivec2 imageSize(readonly writeonly volatile coherent i64imageCube image);\n"
"ivec2 imageSize(readonly writeonly volatile coherent i64image2DRect image);\n"
"int imageSize(readonly writeonly volatile coherent i64imageBuffer image);\n"
"ivec2 imageSize(readonly writeonly volatile coherent i64image1DArray image);\n"
"ivec3 imageSize(readonly writeonly volatile coherent i64image2DArray image);\n"
"ivec3 imageSize(readonly writeonly volatile coherent i64imageCubeArray image);\n"
"ivec2 imageSize(readonly writeonly volatile coherent i64image2DMS image);\n"
"ivec3 imageSize(readonly writeonly volatile coherent i64image2DMSArray image);\n"
"int imageSamples(readonly writeonly volatile coherent i64image2DMS image);\n"
"int imageSamples(readonly writeonly volatile coherent i64image2DMSArray image);\n"
"i64vec4 imageLoad(readonly volatile coherent i64image1D image, int P);\n"
"i64vec4 imageLoad(readonly volatile coherent i64image2D image, ivec2 P);\n"
"i64vec4 imageLoad(readonly volatile coherent i64image3D image, ivec3 P);\n"
"i64vec4 imageLoad(readonly volatile coherent i64imageCube image, ivec3 P);\n"
"i64vec4 imageLoad(readonly volatile coherent i64image2DRect image, ivec2 P);\n"
"i64vec4 imageLoad(readonly volatile coherent i64imageBuffer image, int P);\n"
"i64vec4 imageLoad(readonly volatile coherent i64image1DArray image, ivec2 P);\n"
"i64vec4 imageLoad(readonly volatile coherent i64image2DArray image, ivec3 P);\n"
"i64vec4 imageLoad(readonly volatile coherent i64imageCubeArray image, ivec3 P);\n"
"i64vec4 imageLoad(readonly volatile coherent i64image2DMS image, ivec2 P, int sample);\n"
"i64vec4 imageLoad(readonly volatile coherent i64image2DMSArray image, ivec3 P, int sample);\n"
"void imageStore(writeonly volatile coherent i64image1D image, int P, i64vec4 data);\n"
"void imageStore(writeonly volatile coherent i64image2D image, ivec2 P, i64vec4 data);\n"
"void imageStore(writeonly volatile coherent i64image3D image, ivec3 P, i64vec4 data);\n"
"void imageStore(writeonly volatile coherent i64imageCube image, ivec3 P, i64vec4 data);\n"
"void imageStore(writeonly volatile coherent i64image2DRect image, ivec2 P, i64vec4 data);\n"
"void imageStore(writeonly volatile coherent i64imageBuffer image, int P, i64vec4 data);\n"
"void imageStore(writeonly volatile coherent i64image1DArray image, ivec2 P, i64vec4 data);\n"
"void imageStore(writeonly volatile coherent i64image2DArray image, ivec3 P, i64vec4 data);\n"
"void imageStore(writeonly volatile coherent i64imageCubeArray image, ivec3 P, i64vec4 data);\n"
"void imageStore(writeonly volatile coherent i64image2DMS image, ivec2 P, int sample, i64vec4 data);\n"
"void imageStore(writeonly volatile coherent i64image2DMSArray image, ivec3 P, int sample, i64vec4 data);\n"
"\n"
"int imageSize(readonly writeonly volatile coherent u64image1D image);\n"
"ivec2 imageSize(readonly writeonly volatile coherent u64image2D image);\n"
"ivec3 imageSize(readonly writeonly volatile coherent u64image3D image);\n"
"ivec2 imageSize(readonly writeonly volatile coherent u64imageCube image);\n"
"ivec2 imageSize(readonly writeonly volatile coherent u64image2DRect image);\n"
"int imageSize(readonly writeonly volatile coherent u64imageBuffer image);\n"
"ivec2 imageSize(readonly writeonly volatile coherent u64image1DArray image);\n"
"ivec3 imageSize(readonly writeonly volatile coherent u64image2DArray image);\n"
"ivec3 imageSize(readonly writeonly volatile coherent u64imageCubeArray image);\n"
"ivec2 imageSize(readonly writeonly volatile coherent u64image2DMS image);\n"
"ivec3 imageSize(readonly writeonly volatile coherent u64image2DMSArray image);\n"
"int imageSamples(readonly writeonly volatile coherent u64image2DMS image);\n"
"int imageSamples(readonly writeonly volatile coherent u64image2DMSArray image);\n"
"u64vec4 imageLoad(readonly volatile coherent u64image1D image, int P);\n"
"u64vec4 imageLoad(readonly volatile coherent u64image2D image, ivec2 P);\n"
"u64vec4 imageLoad(readonly volatile coherent u64image3D image, ivec3 P);\n"
"u64vec4 imageLoad(readonly volatile coherent u64imageCube image, ivec3 P);\n"
"u64vec4 imageLoad(readonly volatile coherent u64image2DRect image, ivec2 P);\n"
"u64vec4 imageLoad(readonly volatile coherent u64imageBuffer image, int P);\n"
"u64vec4 imageLoad(readonly volatile coherent u64image1DArray image, ivec2 P);\n"
"u64vec4 imageLoad(readonly volatile coherent u64image2DArray image, ivec3 P);\n"
"u64vec4 imageLoad(readonly volatile coherent u64imageCubeArray image, ivec3 P);\n"
"u64vec4 imageLoad(readonly volatile coherent u64image2DMS image, ivec2 P, int sample);\n"
"u64vec4 imageLoad(readonly volatile coherent u64image2DMSArray image, ivec3 P, int sample);\n"
"void imageStore(writeonly volatile coherent u64image1D image, int P, u64vec4 data);\n"
"void imageStore(writeonly volatile coherent u64image2D image, ivec2 P, u64vec4 data);\n"
"void imageStore(writeonly volatile coherent u64image3D image, ivec3 P, u64vec4 data);\n"
"void imageStore(writeonly volatile coherent u64imageCube image, ivec3 P, u64vec4 data);\n"
"void imageStore(writeonly volatile coherent u64image2DRect image, ivec2 P, u64vec4 data);\n"
"void imageStore(writeonly volatile coherent u64imageBuffer image, int P, u64vec4 data);\n"
"void imageStore(writeonly volatile coherent u64image1DArray image, ivec2 P, u64vec4 data);\n"
"void imageStore(writeonly volatile coherent u64image2DArray image, ivec3 P, u64vec4 data);\n"
"void imageStore(writeonly volatile coherent u64imageCubeArray image, ivec3 P, u64vec4 data);\n"
"void imageStore(writeonly volatile coherent u64image2DMS image, ivec2 P, int sample, u64vec4 data);\n"
"void imageStore(writeonly volatile coherent u64image2DMSArray image, ivec3 P, int sample, u64vec4 data);\n"
"\n"
"__glsld_syscmd_end_context__;\n"
"\n"
"__glsld_syscmd_begin_context__;\n"
"__glsld_syscmd_require_extension__ GL_EXT_shader_explicit_arithmetic_types_float16;\n"
"\n"
"int imageSize(readonly writeonly volatile coherent f16image1D image);\n"
"ivec2 imageSize(readonly writeonly volatile coherent f16image2D image);\n"
"ivec3 imageSize(readonly writeonly volatile coherent f16image3D image);\n"
"ivec2 imageSize(readonly writeonly volatile coherent f16imageCube image);\n"
"ivec2 imageSize(readonly writeonly volatile coherent f16image2DRect image);\n"
"int imageSize(readonly writeonly volatile coherent f16imageBuffer image);\n"
"ivec2 imageSize(readonly writeonly volatile coherent f16image1DArray image);\n"
"ivec3 imageSize(readonly writeonly volatile coherent f16image2DArray image);\n"
"ivec3 imageSize(readonly writeonly volatile coherent f16imageCubeArray image);\n"
"ivec2 imageSize(readonly writeonly volatile coherent f16image2DMS image);\n"
"ivec3 imageSize(readonly writeonly volatile coherent f16image2DMSArray image);\n"
"int imageSamples(readonly writeonly volatile coherent f16image2DMS image);\n"
"int imageSamples(readonly writeonly volatile coherent f16image2DMSArray image);\n"
"f16vec4 imageLoad(readonly volatile coherent f16image1D image, int P);\n"
"f16vec4 imageLoad(readonly volatile coherent f16image2D image, ivec2 P);\n"
"f16vec4 imageLoad(readonly volatile coherent f16image3D image, ivec3 P);\n"
"f16vec4 imageLoad(readonly volatile coherent f16imageCube image, ivec3 P);\n"
"f16vec4 imageLoad(readonly volatile coherent f16image2DRect image, ivec2 P);\n"
"f16vec4 imageLoad(readonly volatile coherent f16imageBuffer image, int P);\n"
"f16vec4 imageLoad(readonly volatile coherent f16image1DArray image, ivec2 P);\n"
"f16vec4 imageLoad(readonly volatile coherent f16image2DArray image, ivec3 P);\n"
"f16vec4 imageLoad(readonly volatile coherent f16imageCubeArray image, ivec3 P);\n"
"f16vec4 imageLoad(readonly volatile coherent f16image2DMS image, ivec2 P, int sample);\n"
"f16vec4 imageLoad(readonly volatile coherent f16image2DMSArray image, ivec3 P, int sample);\n"
"void imageStore(writeonly volatile coherent f16image1D image, int P, f16vec4 data);\n"
"void imageStore(writeonly volatile coherent f16image2D image, ivec2 P, f16vec4 data);\n"
"void imageStore(writeonly volatile coherent f16image3D image, ivec3 P, f16vec4 data);\n"
"void imageStore(writeonly volatile coherent f16imageCube image, ivec3 P, f16vec4 data);\n"
"void imageStore(writeonly volatile coherent f16image2DRect image, ivec2 P, f16vec4 data);\n"
"void imageStore(writeonly volatile coherent f16imageBuffer image, int P, f16vec4 data);\n"
"void imageStore(writeonly volatile coherent f16image1DArray image, ivec2 P, f16vec4 data);\n"
"void imageStore(writeonly volatile coherent f16image2DArray image, ivec3 P, f16vec4 data);\n"
"void imageStore(writeonly volatile coherent f16imageCubeArray image, ivec3 P, f16vec4 data);\n"
"void imageStore(writeonly volatile coherent f16image2DMS image, ivec2 P, int sample, f16vec4 data);\n"
"void imageStore(writeonly volatile coherent f16image2DMSArray image, ivec3 P, int sample, f16vec4 data);\n"
"\n"
"__glsld_syscmd_end_context__;\n"
"uint uaddCarry(highp  uint x, highp  uint y, out lowp  uint carry);\n"
"uvec2 uaddCarry(highp uvec2 x, highp uvec2 y, out lowp uvec2 carry);\n"
"uvec3 uaddCarry(highp uvec3 x, highp uvec3 y, out lowp uvec3 carry);\n"
"uvec4 uaddCarry(highp uvec4 x, highp uvec4 y, out lowp uvec4 carry);\n"
"uint usubBorrow(highp  uint x, highp  uint y, out lowp  uint borrow);\n"
"uvec2 usubBorrow(highp uvec2 x, highp uvec2 y, out lowp uvec2 borrow);\n"
"uvec3 usubBorrow(highp uvec3 x, highp uvec3 y, out lowp uvec3 borrow);\n"
"uvec4 usubBorrow(highp uvec4 x, highp uvec4 y, out lowp uvec4 borrow);\n"
"void umulExtended(highp  uint x, highp  uint y, out highp  uint msb, out highp  uint lsb);\n"
"void umulExtended(highp uvec2 x, highp uvec2 y, out highp uvec2 msb, out highp uvec2 lsb);\n"
"void umulExtended(highp uvec3 x, highp uvec3 y, out highp uvec3 msb, out highp uvec3 lsb);\n"
"void umulExtended(highp uvec4 x, highp uvec4 y, out highp uvec4 msb, out highp uvec4 lsb);\n"
"void imulExtended(highp   int x, highp   int y, out highp   int msb, out highp   int lsb);\n"
"void imulExtended(highp ivec2 x, highp ivec2 y, out highp ivec2 msb, out highp ivec2 lsb);\n"
"void imulExtended(highp ivec3 x, highp ivec3 y, out highp ivec3 msb, out highp ivec3 lsb);\n"
"void imulExtended(highp ivec4 x, highp ivec4 y, out highp ivec4 msb, out highp ivec4 lsb);\n"
"int bitfieldExtract(  int value, int offset, int bits);\n"
"ivec2 bitfieldExtract(ivec2 value, int offset, int bits);\n"
"ivec3 bitfieldExtract(ivec3 value, int offset, int bits);\n"
"ivec4 bitfieldExtract(ivec4 value, int offset, int bits);\n"
"uint bitfieldExtract( uint value, int offset, int bits);\n"
"uvec2 bitfieldExtract(uvec2 value, int offset, int bits);\n"
"uvec3 bitfieldExtract(uvec3 value, int offset, int bits);\n"
"uvec4 bitfieldExtract(uvec4 value, int offset, int bits);\n"
"int bitfieldInsert(  int base,   int insert, int offset, int bits);\n"
"ivec2 bitfieldInsert(ivec2 base, ivec2 insert, int offset, int bits);\n"
"ivec3 bitfieldInsert(ivec3 base, ivec3 insert, int offset, int bits);\n"
"ivec4 bitfieldInsert(ivec4 base, ivec4 insert, int offset, int bits);\n"
"uint bitfieldInsert( uint base,  uint insert, int offset, int bits);\n"
"uvec2 bitfieldInsert(uvec2 base, uvec2 insert, int offset, int bits);\n"
"uvec3 bitfieldInsert(uvec3 base, uvec3 insert, int offset, int bits);\n"
"uvec4 bitfieldInsert(uvec4 base, uvec4 insert, int offset, int bits);\n"
"int bitfieldReverse(highp   int value);\n"
"ivec2 bitfieldReverse(highp ivec2 value);\n"
"ivec3 bitfieldReverse(highp ivec3 value);\n"
"ivec4 bitfieldReverse(highp ivec4 value);\n"
"uint bitfieldReverse(highp  uint value);\n"
"uvec2 bitfieldReverse(highp uvec2 value);\n"
"uvec3 bitfieldReverse(highp uvec3 value);\n"
"uvec4 bitfieldReverse(highp uvec4 value);\n"
"int bitCount(  int value);\n"
"ivec2 bitCount(ivec2 value);\n"
"ivec3 bitCount(ivec3 value);\n"
"ivec4 bitCount(ivec4 value);\n"
"int bitCount( uint value);\n"
"ivec2 bitCount(uvec2 value);\n"
"ivec3 bitCount(uvec3 value);\n"
"ivec4 bitCount(uvec4 value);\n"
"int findLSB(  int value);\n"
"ivec2 findLSB(ivec2 value);\n"
"ivec3 findLSB(ivec3 value);\n"
"ivec4 findLSB(ivec4 value);\n"
"int findLSB( uint value);\n"
"ivec2 findLSB(uvec2 value);\n"
"ivec3 findLSB(uvec3 value);\n"
"ivec4 findLSB(uvec4 value);\n"
"int findMSB(highp   int value);\n"
"ivec2 findMSB(highp ivec2 value);\n"
"ivec3 findMSB(highp ivec3 value);\n"
"ivec4 findMSB(highp ivec4 value);\n"
"int findMSB(highp  uint value);\n"
"ivec2 findMSB(highp uvec2 value);\n"
"ivec3 findMSB(highp uvec3 value);\n"
"ivec4 findMSB(highp uvec4 value);\n"
"\n"
"\n"
"// FXIME: support these\n"
"// int64_t bitCount(int64_t);\n"
"// i64vec2 bitCount(i64vec2);\n"
"// i64vec3 bitCount(i64vec3);\n"
"// i64vec4 bitCount(i64vec4);\n"
"// int64_t bitCount(uint64_t);\n"
"// i64vec2 bitCount(u64vec2);\n"
"// i64vec3 bitCount(u64vec3);\n"
"// i64vec4 bitCount(u64vec4);\n"
"// int64_t findLSB(int64_t);\n"
"// i64vec2 findLSB(i64vec2);\n"
"// i64vec3 findLSB(i64vec3);\n"
"// i64vec4 findLSB(i64vec4);\n"
"// int64_t findLSB(uint64_t);\n"
"// i64vec2 findLSB(u64vec2);\n"
"// i64vec3 findLSB(u64vec3);\n"
"// i64vec4 findLSB(u64vec4);\n"
"// int64_t findMSB(int64_t);\n"
"// i64vec2 findMSB(i64vec2);\n"
"// i64vec3 findMSB(i64vec3);\n"
"// i64vec4 findMSB(i64vec4);\n"
"// int64_t findMSB(uint64_t);\n"
"// i64vec2 findMSB(u64vec2);\n"
"// i64vec3 findMSB(u64vec3);\n"
"// i64vec4 findMSB(u64vec4);\n"
"// int8_t bitfieldExtract(  int8_t, int8_t, int8_t);\n"
"// i8vec2 bitfieldExtract(i8vec2, int8_t, int8_t);\n"
"// i8vec3 bitfieldExtract(i8vec3, int8_t, int8_t);\n"
"// i8vec4 bitfieldExtract(i8vec4, int8_t, int8_t);\n"
"// uint8_t bitfieldExtract( uint8_t, int8_t, int8_t);\n"
"// u8vec2 bitfieldExtract(u8vec2, int8_t, int8_t);\n"
"// u8vec3 bitfieldExtract(u8vec3, int8_t, int8_t);\n"
"// u8vec4 bitfieldExtract(u8vec4, int8_t, int8_t);\n"
"// int8_t bitfieldInsert(  int8_t base,   int8_t, int8_t, int8_t);\n"
"// i8vec2 bitfieldInsert(i8vec2 base, i8vec2, int8_t, int8_t);\n"
"// i8vec3 bitfieldInsert(i8vec3 base, i8vec3, int8_t, int8_t);\n"
"// i8vec4 bitfieldInsert(i8vec4 base, i8vec4, int8_t, int8_t);\n"
"// uint8_t bitfieldInsert( uint8_t base,  uint8_t, int8_t, int8_t);\n"
"// u8vec2 bitfieldInsert(u8vec2 base, u8vec2, int8_t, int8_t);\n"
"// u8vec3 bitfieldInsert(u8vec3 base, u8vec3, int8_t, int8_t);\n"
"// u8vec4 bitfieldInsert(u8vec4 base, u8vec4, int8_t, int8_t);\n"
"// int8_t bitCount(  int8_t);\n"
"// i8vec2 bitCount(i8vec2);\n"
"// i8vec3 bitCount(i8vec3);\n"
"// i8vec4 bitCount(i8vec4);\n"
"// int8_t bitCount( uint8_t);\n"
"// i8vec2 bitCount(u8vec2);\n"
"// i8vec3 bitCount(u8vec3);\n"
"// i8vec4 bitCount(u8vec4);\n"
"// int8_t findLSB(  int8_t);\n"
"// i8vec2 findLSB(i8vec2);\n"
"// i8vec3 findLSB(i8vec3);\n"
"// i8vec4 findLSB(i8vec4);\n"
"// int8_t findLSB( uint8_t);\n"
"// i8vec2 findLSB(u8vec2);\n"
"// i8vec3 findLSB(u8vec3);\n"
"// i8vec4 findLSB(u8vec4);\n"
"// int8_t findMSB(  int8_t);\n"
"// i8vec2 findMSB(i8vec2);\n"
"// i8vec3 findMSB(i8vec3);\n"
"// i8vec4 findMSB(i8vec4);\n"
"// int8_t findMSB( uint8_t);\n"
"// i8vec2 findMSB(u8vec2);\n"
"// i8vec3 findMSB(u8vec3);\n"
"// i8vec4 findMSB(u8vec4);\n"
"// int16_t bitfieldExtract(  int16_t, int16_t, int16_t);\n"
"// i16vec2 bitfieldExtract(i16vec2, int16_t, int16_t);\n"
"// i16vec3 bitfieldExtract(i16vec3, int16_t, int16_t);\n"
"// i16vec4 bitfieldExtract(i16vec4, int16_t, int16_t);\n"
"// uint16_t bitfieldExtract( uint16_t, int16_t, int16_t);\n"
"// u16vec2 bitfieldExtract(u16vec2, int16_t, int16_t);\n"
"// u16vec3 bitfieldExtract(u16vec3, int16_t, int16_t);\n"
"// u16vec4 bitfieldExtract(u16vec4, int16_t, int16_t);\n"
"// int16_t bitfieldInsert(  int16_t base,   int16_t, int16_t, int16_t);\n"
"// i16vec2 bitfieldInsert(i16vec2 base, i16vec2, int16_t, int16_t);\n"
"// i16vec3 bitfieldInsert(i16vec3 base, i16vec3, int16_t, int16_t);\n"
"// i16vec4 bitfieldInsert(i16vec4 base, i16vec4, int16_t, int16_t);\n"
"// uint16_t bitfieldInsert( uint16_t base,  uint16_t, int16_t, int16_t);\n"
"// u16vec2 bitfieldInsert(u16vec2 base, u16vec2, int16_t, int16_t);\n"
"// u16vec3 bitfieldInsert(u16vec3 base, u16vec3, int16_t, int16_t);\n"
"// u16vec4 bitfieldInsert(u16vec4 base, u16vec4, int16_t, int16_t);\n"
"// int16_t bitCount(  int16_t);\n"
"// i16vec2 bitCount(i16vec2);\n"
"// i16vec3 bitCount(i16vec3);\n"
"// i16vec4 bitCount(i16vec4);\n"
"// int16_t bitCount( uint16_t);\n"
"// i16vec2 bitCount(u16vec2);\n"
"// i16vec3 bitCount(u16vec3);\n"
"// i16vec4 bitCount(u16vec4);\n"
"// int16_t findLSB(  int16_t);\n"
"// i16vec2 findLSB(i16vec2);\n"
"// i16vec3 findLSB(i16vec3);\n"
"// i16vec4 findLSB(i16vec4);\n"
"// int16_t findLSB( uint16_t);\n"
"// i16vec2 findLSB(u16vec2);\n"
"// i16vec3 findLSB(u16vec3);\n"
"// i16vec4 findLSB(u16vec4);\n"
"// int16_t findMSB(  int16_t);\n"
"// i16vec2 findMSB(i16vec2);\n"
"// i16vec3 findMSB(i16vec3);\n"
"// i16vec4 findMSB(i16vec4);\n"
"// int16_t findMSB( uint16_t);\n"
"// i16vec2 findMSB(u16vec2);\n"
"// i16vec3 findMSB(u16vec3);\n"
"// i16vec4 findMSB(u16vec4);\n"
"\n"
"\n"
"\n"
"mat2 matrixCompMult(mat2 x, mat2 y);\n"
"mat3 matrixCompMult(mat3 x, mat3 y);\n"
"mat4 matrixCompMult(mat4 x, mat4 y);\n"
"mat2x3 matrixCompMult(mat2x3 x, mat2x3 y);\n"
"mat2x4 matrixCompMult(mat2x4 x, mat2x4 y);\n"
"mat3x2 matrixCompMult(mat3x2 x, mat3x2 y);\n"
"mat3x4 matrixCompMult(mat3x4 x, mat3x4 y);\n"
"mat4x2 matrixCompMult(mat4x2 x, mat4x2 y);\n"
"mat4x3 matrixCompMult(mat4x3 x, mat4x3 y);\n"
"dmat2 matrixCompMult(dmat2 x, dmat2 y);\n"
"dmat3 matrixCompMult(dmat3 x, dmat3 y);\n"
"dmat4 matrixCompMult(dmat4 x, dmat4 y);\n"
"dmat2x3 matrixCompMult(dmat2x3 x, dmat2x3 y);\n"
"dmat2x4 matrixCompMult(dmat2x4 x, dmat2x4 y);\n"
"dmat3x2 matrixCompMult(dmat3x2 x, dmat3x2 y);\n"
"dmat3x4 matrixCompMult(dmat3x4 x, dmat3x4 y);\n"
"dmat4x2 matrixCompMult(dmat4x2 x, dmat4x2 y);\n"
"dmat4x3 matrixCompMult(dmat4x3 x, dmat4x3 y);\n"
"mat2   outerProduct(vec2 c, vec2 r);\n"
"mat3   outerProduct(vec3 c, vec3 r);\n"
"mat4   outerProduct(vec4 c, vec4 r);\n"
"mat2x3 outerProduct(vec3 c, vec2 r);\n"
"mat3x2 outerProduct(vec2 c, vec3 r);\n"
"mat2x4 outerProduct(vec4 c, vec2 r);\n"
"mat4x2 outerProduct(vec2 c, vec4 r);\n"
"mat3x4 outerProduct(vec4 c, vec3 r);\n"
"mat4x3 outerProduct(vec3 c, vec4 r);\n"
"dmat2   outerProduct(dvec2 c, dvec2 r);\n"
"dmat3   outerProduct(dvec3 c, dvec3 r);\n"
"dmat4   outerProduct(dvec4 c, dvec4 r);\n"
"dmat2x3 outerProduct(dvec3 c, dvec2 r);\n"
"dmat3x2 outerProduct(dvec2 c, dvec3 r);\n"
"dmat2x4 outerProduct(dvec4 c, dvec2 r);\n"
"dmat4x2 outerProduct(dvec2 c, dvec4 r);\n"
"dmat3x4 outerProduct(dvec4 c, dvec3 r);\n"
"dmat4x3 outerProduct(dvec3 c, dvec4 r);\n"
"mat2   transpose(mat2   m);\n"
"mat3   transpose(mat3   m);\n"
"mat4   transpose(mat4   m);\n"
"mat2x3 transpose(mat3x2 m);\n"
"mat3x2 transpose(mat2x3 m);\n"
"mat2x4 transpose(mat4x2 m);\n"
"mat4x2 transpose(mat2x4 m);\n"
"mat3x4 transpose(mat4x3 m);\n"
"mat4x3 transpose(mat3x4 m);\n"
"dmat2   transpose(dmat2 m);\n"
"dmat3   transpose(dmat3 m);\n"
"dmat4   transpose(dmat4 m);\n"
"dmat2x3 transpose(dmat3x2 m);\n"
"dmat3x2 transpose(dmat2x3 m);\n"
"dmat2x4 transpose(dmat4x2 m);\n"
"dmat4x2 transpose(dmat2x4 m);\n"
"dmat3x4 transpose(dmat4x3 m);\n"
"dmat4x3 transpose(dmat3x4 m);\n"
"float determinant(mat2 m);\n"
"float determinant(mat3 m);\n"
"float determinant(mat4 m);\n"
"double determinant(dmat2 m);\n"
"double determinant(dmat3 m);\n"
"double determinant(dmat4 m);\n"
"mat2 inverse(mat2 m);\n"
"mat3 inverse(mat3 m);\n"
"mat4 inverse(mat4 m);\n"
"dmat2 inverse(dmat2 m);\n"
"dmat3 inverse(dmat3 m);\n"
"dmat4 inverse(dmat4 m);\n"
"\n"
"\n"
"__glsld_syscmd_begin_context__;\n"
"__glsld_syscmd_require_extension__ GL_EXT_shader_explicit_arithmetic_types_float16;\n"
"\n"
"f16mat2   matrixCompMult(f16mat2 x,   f16mat2 y);\n"
"f16mat3   matrixCompMult(f16mat3 x,   f16mat3 y);\n"
"f16mat4   matrixCompMult(f16mat4 x,   f16mat4 y);\n"
"f16mat2x3 matrixCompMult(f16mat2x3 x, f16mat2x3 y);\n"
"f16mat2x4 matrixCompMult(f16mat2x4 x, f16mat2x4 y);\n"
"f16mat3x2 matrixCompMult(f16mat3x2 x, f16mat3x2 y);\n"
"f16mat3x4 matrixCompMult(f16mat3x4 x, f16mat3x4 y);\n"
"f16mat4x2 matrixCompMult(f16mat4x2 x, f16mat4x2 y);\n"
"f16mat4x3 matrixCompMult(f16mat4x3 x, f16mat4x3 y);\n"
"f16mat2   outerProduct(f16vec2 c, f16vec2 r);\n"
"f16mat3   outerProduct(f16vec3 c, f16vec3 r);\n"
"f16mat4   outerProduct(f16vec4 c, f16vec4 r);\n"
"f16mat2x3 outerProduct(f16vec3 c, f16vec2 r);\n"
"f16mat3x2 outerProduct(f16vec2 c, f16vec3 r);\n"
"f16mat2x4 outerProduct(f16vec4 c, f16vec2 r);\n"
"f16mat4x2 outerProduct(f16vec2 c, f16vec4 r);\n"
"f16mat3x4 outerProduct(f16vec4 c, f16vec3 r);\n"
"f16mat4x3 outerProduct(f16vec3 c, f16vec4 r);\n"
"f16mat2   transpose(f16mat2 m);\n"
"f16mat3   transpose(f16mat3 m);\n"
"f16mat4   transpose(f16mat4 m);\n"
"f16mat2x3 transpose(f16mat3x2 m);\n"
"f16mat3x2 transpose(f16mat2x3 m);\n"
"f16mat2x4 transpose(f16mat4x2 m);\n"
"f16mat4x2 transpose(f16mat2x4 m);\n"
"f16mat3x4 transpose(f16mat4x3 m);\n"
"f16mat4x3 transpose(f16mat3x4 m);\n"
"float16_t determinant(f16mat2 m);\n"
"float16_t determinant(f16mat3 m);\n"
"float16_t determinant(f16mat4 m);\n"
"f16mat2 inverse(f16mat2 m);\n"
"f16mat3 inverse(f16mat3 m);\n"
"f16mat4 inverse(f16mat4 m);\n"
"\n"
"__glsld_syscmd_end_context__;\n"
"void memoryBarrier();\n"
"void memoryBarrierAtomicCounter();\n"
"void memoryBarrierBuffer();\n"
"void memoryBarrierShared();\n"
"void memoryBarrierImage();\n"
"void groupMemoryBarrier();\n"
"float noise1(float x);\n"
"float noise1(vec2 x);\n"
"float noise1(vec3 x);\n"
"float noise1(vec4 x);\n"
"vec2 noise2(float x);\n"
"vec2 noise2(vec2 x);\n"
"vec2 noise2(vec3 x);\n"
"vec2 noise2(vec4 x);\n"
"vec3 noise3(float x);\n"
"vec3 noise3(vec2 x);\n"
"vec3 noise3(vec3 x);\n"
"vec3 noise3(vec4 x);\n"
"vec4 noise4(float x);\n"
"vec4 noise4(vec2 x);\n"
"vec4 noise4(vec3 x);\n"
"vec4 noise4(vec4 x);"
"vec4 textureGather(sampler2D sampler_,vec2 P);\n"
"vec4 textureGather(sampler2D sampler_,vec2 P,int comp);\n"
"ivec4 textureGather(isampler2D sampler_,vec2 P);\n"
"ivec4 textureGather(isampler2D sampler_,vec2 P,int comp);\n"
"uvec4 textureGather(usampler2D sampler_,vec2 P);\n"
"uvec4 textureGather(usampler2D sampler_,vec2 P,int comp);\n"
"vec4 textureGather(samplerCube sampler_,vec3 P);\n"
"vec4 textureGather(samplerCube sampler_,vec3 P,int comp);\n"
"ivec4 textureGather(isamplerCube sampler_,vec3 P);\n"
"ivec4 textureGather(isamplerCube sampler_,vec3 P,int comp);\n"
"uvec4 textureGather(usamplerCube sampler_,vec3 P);\n"
"uvec4 textureGather(usamplerCube sampler_,vec3 P,int comp);\n"
"vec4 textureGather(sampler2DRect sampler_,vec2 P);\n"
"vec4 textureGather(sampler2DRect sampler_,vec2 P,int comp);\n"
"ivec4 textureGather(isampler2DRect sampler_,vec2 P);\n"
"ivec4 textureGather(isampler2DRect sampler_,vec2 P,int comp);\n"
"uvec4 textureGather(usampler2DRect sampler_,vec2 P);\n"
"uvec4 textureGather(usampler2DRect sampler_,vec2 P,int comp);\n"
"vec4 textureGather(sampler2DArray sampler_,vec3 P);\n"
"vec4 textureGather(sampler2DArray sampler_,vec3 P,int comp);\n"
"ivec4 textureGather(isampler2DArray sampler_,vec3 P);\n"
"ivec4 textureGather(isampler2DArray sampler_,vec3 P,int comp);\n"
"uvec4 textureGather(usampler2DArray sampler_,vec3 P);\n"
"uvec4 textureGather(usampler2DArray sampler_,vec3 P,int comp);\n"
"vec4 textureGather(samplerCubeArray sampler_,vec4 P);\n"
"vec4 textureGather(samplerCubeArray sampler_,vec4 P,int comp);\n"
"ivec4 textureGather(isamplerCubeArray sampler_,vec4 P);\n"
"ivec4 textureGather(isamplerCubeArray sampler_,vec4 P,int comp);\n"
"uvec4 textureGather(usamplerCubeArray sampler_,vec4 P);\n"
"uvec4 textureGather(usamplerCubeArray sampler_,vec4 P,int comp);\n"
"vec4 textureGather(sampler2DShadow sampler_,vec2 P,float refZ);\n"
"vec4 textureGather(samplerCubeShadow sampler_,vec3 P,float refZ);\n"
"vec4 textureGather(sampler2DRectShadow sampler_,vec2 P,float refZ);\n"
"vec4 textureGather(sampler2DArrayShadow sampler_,vec3 P,float refZ);\n"
"vec4 textureGather(samplerCubeArrayShadow sampler_,vec4 P,float refZ);\n"
"vec4 textureGatherOffset(sampler2D sampler_,vec2 P,ivec2 offset);\n"
"vec4 textureGatherOffset(sampler2D sampler_,vec2 P,ivec2 offset,int comp);\n"
"ivec4 textureGatherOffset(isampler2D sampler_,vec2 P,ivec2 offset);\n"
"ivec4 textureGatherOffset(isampler2D sampler_,vec2 P,ivec2 offset,int comp);\n"
"uvec4 textureGatherOffset(usampler2D sampler_,vec2 P,ivec2 offset);\n"
"uvec4 textureGatherOffset(usampler2D sampler_,vec2 P,ivec2 offset,int comp);\n"
"vec4 textureGatherOffset(sampler2DRect sampler_,vec2 P,ivec2 offset);\n"
"vec4 textureGatherOffset(sampler2DRect sampler_,vec2 P,ivec2 offset,int comp);\n"
"ivec4 textureGatherOffset(isampler2DRect sampler_,vec2 P,ivec2 offset);\n"
"ivec4 textureGatherOffset(isampler2DRect sampler_,vec2 P,ivec2 offset,int comp);\n"
"uvec4 textureGatherOffset(usampler2DRect sampler_,vec2 P,ivec2 offset);\n"
"uvec4 textureGatherOffset(usampler2DRect sampler_,vec2 P,ivec2 offset,int comp);\n"
"vec4 textureGatherOffset(sampler2DArray sampler_,vec3 P,ivec2 offset);\n"
"vec4 textureGatherOffset(sampler2DArray sampler_,vec3 P,ivec2 offset,int comp);\n"
"ivec4 textureGatherOffset(isampler2DArray sampler_,vec3 P,ivec2 offset);\n"
"ivec4 textureGatherOffset(isampler2DArray sampler_,vec3 P,ivec2 offset,int comp);\n"
"uvec4 textureGatherOffset(usampler2DArray sampler_,vec3 P,ivec2 offset);\n"
"uvec4 textureGatherOffset(usampler2DArray sampler_,vec3 P,ivec2 offset,int comp);\n"
"vec4 textureGatherOffset(sampler2DShadow sampler_,vec2 P,float refZ,ivec2 offset);\n"
"vec4 textureGatherOffset(sampler2DRectShadow sampler_,vec2 P,float refZ,ivec2 offset);\n"
"vec4 textureGatherOffset(sampler2DArrayShadow sampler_,vec3 P,float refZ,ivec2 offset);\n"
"vec4 textureGatherOffsets(sampler2D sampler_,vec2 P,ivec2 offsets[4]);\n"
"vec4 textureGatherOffsets(sampler2D sampler_,vec2 P,ivec2 offsets[4],int comp);\n"
"ivec4 textureGatherOffsets(isampler2D sampler_,vec2 P,ivec2 offsets[4]);\n"
"ivec4 textureGatherOffsets(isampler2D sampler_,vec2 P,ivec2 offsets[4],int comp);\n"
"uvec4 textureGatherOffsets(usampler2D sampler_,vec2 P,ivec2 offsets[4]);\n"
"uvec4 textureGatherOffsets(usampler2D sampler_,vec2 P,ivec2 offsets[4],int comp);\n"
"vec4 textureGatherOffsets(sampler2DRect sampler_,vec2 P,ivec2 offsets[4]);\n"
"vec4 textureGatherOffsets(sampler2DRect sampler_,vec2 P,ivec2 offsets[4],int comp);\n"
"ivec4 textureGatherOffsets(isampler2DRect sampler_,vec2 P,ivec2 offsets[4]);\n"
"ivec4 textureGatherOffsets(isampler2DRect sampler_,vec2 P,ivec2 offsets[4],int comp);\n"
"uvec4 textureGatherOffsets(usampler2DRect sampler_,vec2 P,ivec2 offsets[4]);\n"
"uvec4 textureGatherOffsets(usampler2DRect sampler_,vec2 P,ivec2 offsets[4],int comp);\n"
"vec4 textureGatherOffsets(sampler2DArray sampler_,vec3 P,ivec2 offsets[4]);\n"
"vec4 textureGatherOffsets(sampler2DArray sampler_,vec3 P,ivec2 offsets[4],int comp);\n"
"ivec4 textureGatherOffsets(isampler2DArray sampler_,vec3 P,ivec2 offsets[4]);\n"
"ivec4 textureGatherOffsets(isampler2DArray sampler_,vec3 P,ivec2 offsets[4],int comp);\n"
"uvec4 textureGatherOffsets(usampler2DArray sampler_,vec3 P,ivec2 offsets[4]);\n"
"uvec4 textureGatherOffsets(usampler2DArray sampler_,vec3 P,ivec2 offsets[4],int comp);\n"
"vec4 textureGatherOffsets(sampler2DShadow sampler_,vec2 P,float refZ,ivec2 offsets[4]);\n"
"vec4 textureGatherOffsets(sampler2DRectShadow sampler_,vec2 P,float refZ,ivec2 offsets[4]);\n"
"vec4 textureGatherOffsets(sampler2DArrayShadow sampler_,vec3 P,float refZ,ivec2 offsets[4]);\n"
"\n"
"__glsld_syscmd_begin_context__;\n"
"__glsld_syscmd_require_extension__ GL_EXT_shader_explicit_arithmetic_types_float16;\n"
"\n"
"f16vec4 textureGather(f16sampler2D sampler_,vec2 P);\n"
"f16vec4 textureGather(f16sampler2D sampler_,vec2 P,int comp);\n"
"f16vec4 textureGather(f16sampler2D sampler_,f16vec2 P);\n"
"f16vec4 textureGather(f16sampler2D sampler_,f16vec2 P,int comp);\n"
"f16vec4 textureGather(f16samplerCube sampler_,vec3 P);\n"
"f16vec4 textureGather(f16samplerCube sampler_,vec3 P,int comp);\n"
"f16vec4 textureGather(f16samplerCube sampler_,f16vec3 P);\n"
"f16vec4 textureGather(f16samplerCube sampler_,f16vec3 P,int comp);\n"
"f16vec4 textureGather(f16sampler2DRect sampler_,vec2 P);\n"
"f16vec4 textureGather(f16sampler2DRect sampler_,vec2 P,int comp);\n"
"f16vec4 textureGather(f16sampler2DRect sampler_,f16vec2 P);\n"
"f16vec4 textureGather(f16sampler2DRect sampler_,f16vec2 P,int comp);\n"
"f16vec4 textureGather(f16sampler2DArray sampler_,vec3 P);\n"
"f16vec4 textureGather(f16sampler2DArray sampler_,vec3 P,int comp);\n"
"f16vec4 textureGather(f16sampler2DArray sampler_,f16vec3 P);\n"
"f16vec4 textureGather(f16sampler2DArray sampler_,f16vec3 P,int comp);\n"
"f16vec4 textureGather(f16samplerCubeArray sampler_,vec4 P);\n"
"f16vec4 textureGather(f16samplerCubeArray sampler_,vec4 P,int comp);\n"
"f16vec4 textureGather(f16samplerCubeArray sampler_,f16vec4 P);\n"
"f16vec4 textureGather(f16samplerCubeArray sampler_,f16vec4 P,int comp);\n"
"f16vec4 textureGather(f16sampler2DShadow sampler_,vec2 P,float refZ);\n"
"f16vec4 textureGather(f16sampler2DShadow sampler_,f16vec2 P,float refZ);\n"
"f16vec4 textureGather(f16samplerCubeShadow sampler_,vec3 P,float refZ);\n"
"f16vec4 textureGather(f16samplerCubeShadow sampler_,f16vec3 P,float refZ);\n"
"f16vec4 textureGather(f16sampler2DRectShadow sampler_,vec2 P,float refZ);\n"
"f16vec4 textureGather(f16sampler2DRectShadow sampler_,f16vec2 P,float refZ);\n"
"f16vec4 textureGather(f16sampler2DArrayShadow sampler_,vec3 P,float refZ);\n"
"f16vec4 textureGather(f16sampler2DArrayShadow sampler_,f16vec3 P,float refZ);\n"
"f16vec4 textureGather(f16samplerCubeArrayShadow sampler_,vec4 P,float refZ);\n"
"f16vec4 textureGather(f16samplerCubeArrayShadow sampler_,f16vec4 P,float refZ);\n"
"f16vec4 textureGatherOffset(f16sampler2D sampler_,vec2 P,ivec2 offset);\n"
"f16vec4 textureGatherOffset(f16sampler2D sampler_,vec2 P,ivec2 offset,int comp);\n"
"f16vec4 textureGatherOffset(f16sampler2D sampler_,f16vec2 P,ivec2 offset);\n"
"f16vec4 textureGatherOffset(f16sampler2D sampler_,f16vec2 P,ivec2 offset,int comp);\n"
"f16vec4 textureGatherOffset(f16sampler2DRect sampler_,vec2 P,ivec2 offset);\n"
"f16vec4 textureGatherOffset(f16sampler2DRect sampler_,vec2 P,ivec2 offset,int comp);\n"
"f16vec4 textureGatherOffset(f16sampler2DRect sampler_,f16vec2 P,ivec2 offset);\n"
"f16vec4 textureGatherOffset(f16sampler2DRect sampler_,f16vec2 P,ivec2 offset,int comp);\n"
"f16vec4 textureGatherOffset(f16sampler2DArray sampler_,vec3 P,ivec2 offset);\n"
"f16vec4 textureGatherOffset(f16sampler2DArray sampler_,vec3 P,ivec2 offset,int comp);\n"
"f16vec4 textureGatherOffset(f16sampler2DArray sampler_,f16vec3 P,ivec2 offset);\n"
"f16vec4 textureGatherOffset(f16sampler2DArray sampler_,f16vec3 P,ivec2 offset,int comp);\n"
"f16vec4 textureGatherOffset(f16sampler2DShadow sampler_,vec2 P,float refZ,ivec2 offset);\n"
"f16vec4 textureGatherOffset(f16sampler2DShadow sampler_,f16vec2 P,float refZ,ivec2 offset);\n"
"f16vec4 textureGatherOffset(f16sampler2DRectShadow sampler_,vec2 P,float refZ,ivec2 offset);\n"
"f16vec4 textureGatherOffset(f16sampler2DRectShadow sampler_,f16vec2 P,float refZ,ivec2 offset);\n"
"f16vec4 textureGatherOffset(f16sampler2DArrayShadow sampler_,vec3 P,float refZ,ivec2 offset);\n"
"f16vec4 textureGatherOffset(f16sampler2DArrayShadow sampler_,f16vec3 P,float refZ,ivec2 offset);\n"
"f16vec4 textureGatherOffsets(f16sampler2D sampler_,vec2 P,ivec2 offsets[4]);\n"
"f16vec4 textureGatherOffsets(f16sampler2D sampler_,vec2 P,ivec2 offsets[4],int comp);\n"
"f16vec4 textureGatherOffsets(f16sampler2D sampler_,f16vec2 P,ivec2 offsets[4]);\n"
"f16vec4 textureGatherOffsets(f16sampler2D sampler_,f16vec2 P,ivec2 offsets[4],int comp);\n"
"f16vec4 textureGatherOffsets(f16sampler2DRect sampler_,vec2 P,ivec2 offsets[4]);\n"
"f16vec4 textureGatherOffsets(f16sampler2DRect sampler_,vec2 P,ivec2 offsets[4],int comp);\n"
"f16vec4 textureGatherOffsets(f16sampler2DRect sampler_,f16vec2 P,ivec2 offsets[4]);\n"
"f16vec4 textureGatherOffsets(f16sampler2DRect sampler_,f16vec2 P,ivec2 offsets[4],int comp);\n"
"f16vec4 textureGatherOffsets(f16sampler2DArray sampler_,vec3 P,ivec2 offsets[4]);\n"
"f16vec4 textureGatherOffsets(f16sampler2DArray sampler_,vec3 P,ivec2 offsets[4],int comp);\n"
"f16vec4 textureGatherOffsets(f16sampler2DArray sampler_,f16vec3 P,ivec2 offsets[4]);\n"
"f16vec4 textureGatherOffsets(f16sampler2DArray sampler_,f16vec3 P,ivec2 offsets[4],int comp);\n"
"f16vec4 textureGatherOffsets(f16sampler2DShadow sampler_,vec2 P,float refZ,ivec2 offsets[4]);\n"
"f16vec4 textureGatherOffsets(f16sampler2DShadow sampler_,f16vec2 P,float refZ,ivec2 offsets[4]);\n"
"f16vec4 textureGatherOffsets(f16sampler2DRectShadow sampler_,vec2 P,float refZ,ivec2 offsets[4]);\n"
"f16vec4 textureGatherOffsets(f16sampler2DRectShadow sampler_,f16vec2 P,float refZ,ivec2 offsets[4]);\n"
"f16vec4 textureGatherOffsets(f16sampler2DArrayShadow sampler_,vec3 P,float refZ,ivec2 offsets[4]);\n"
"f16vec4 textureGatherOffsets(f16sampler2DArrayShadow sampler_,f16vec3 P,float refZ,ivec2 offsets[4]);\n"
"\n"
"__glsld_syscmd_end_context__;\n"
"// FIXME: this file needs major revision\n"
"\n"
"float texture(sampler2DShadow sampler_,vec3 P);\n"
"float texture(samplerCubeShadow sampler_,vec4 P);\n"
"float texture(sampler2DRectShadow sampler_,vec3 P);\n"
"float texture(sampler1DArrayShadow sampler_,vec3 P);\n"
"float texture(sampler2DArrayShadow sampler_,vec4 P);\n"
"float texture(samplerCubeArrayShadow sampler_,vec4 P,float bias);\n"
"vec4 texture(sampler1D sampler_,float P);\n"
"ivec4 texture(isampler1D sampler_,float P);\n"
"uvec4 texture(usampler1D sampler_,float P);\n"
"vec4 texture(sampler2D sampler_,vec2 P);\n"
"ivec4 texture(isampler2D sampler_,vec2 P);\n"
"uvec4 texture(usampler2D sampler_,vec2 P);\n"
"vec4 texture(sampler3D sampler_,vec3 P);\n"
"ivec4 texture(isampler3D sampler_,vec3 P);\n"
"uvec4 texture(usampler3D sampler_,vec3 P);\n"
"vec4 texture(samplerCube sampler_,vec3 P);\n"
"ivec4 texture(isamplerCube sampler_,vec3 P);\n"
"uvec4 texture(usamplerCube sampler_,vec3 P);\n"
"vec4 texture(sampler2DRect sampler_,vec2 P);\n"
"ivec4 texture(isampler2DRect sampler_,vec2 P);\n"
"uvec4 texture(usampler2DRect sampler_,vec2 P);\n"
"vec4 texture(sampler1DArray sampler_,vec2 P);\n"
"ivec4 texture(isampler1DArray sampler_,vec2 P);\n"
"uvec4 texture(usampler1DArray sampler_,vec2 P);\n"
"vec4 texture(sampler2DArray sampler_,vec3 P);\n"
"ivec4 texture(isampler2DArray sampler_,vec3 P);\n"
"uvec4 texture(usampler2DArray sampler_,vec3 P);\n"
"vec4 texture(samplerCubeArray sampler_,vec4 P);\n"
"ivec4 texture(isamplerCubeArray sampler_,vec4 P);\n"
"uvec4 texture(usamplerCubeArray sampler_,vec4 P);\n"
"float texture(sampler1DShadow sampler_,vec3 P);\n"
"vec4 textureProj(sampler1D sampler_,vec2 P);\n"
"vec4 textureProj(sampler1D sampler_,vec4 P);\n"
"float textureProj(sampler2DRectShadow sampler_,vec4 P);\n"
"ivec4 textureProj(isampler1D sampler_,vec2 P);\n"
"ivec4 textureProj(isampler1D sampler_,vec4 P);\n"
"uvec4 textureProj(usampler1D sampler_,vec2 P);\n"
"uvec4 textureProj(usampler1D sampler_,vec4 P);\n"
"vec4 textureProj(sampler2D sampler_,vec3 P);\n"
"vec4 textureProj(sampler2D sampler_,vec4 P);\n"
"ivec4 textureProj(isampler2D sampler_,vec3 P);\n"
"ivec4 textureProj(isampler2D sampler_,vec4 P);\n"
"uvec4 textureProj(usampler2D sampler_,vec3 P);\n"
"uvec4 textureProj(usampler2D sampler_,vec4 P);\n"
"vec4 textureProj(sampler3D sampler_,vec4 P);\n"
"ivec4 textureProj(isampler3D sampler_,vec4 P);\n"
"uvec4 textureProj(usampler3D sampler_,vec4 P);\n"
"vec4 textureProj(sampler2DRect sampler_,vec3 P);\n"
"vec4 textureProj(sampler2DRect sampler_,vec4 P);\n"
"ivec4 textureProj(isampler2DRect sampler_,vec3 P);\n"
"ivec4 textureProj(isampler2DRect sampler_,vec4 P);\n"
"uvec4 textureProj(usampler2DRect sampler_,vec3 P);\n"
"uvec4 textureProj(usampler2DRect sampler_,vec4 P);\n"
"float textureProj(sampler1DShadow sampler_,vec4 P);\n"
"float textureProj(sampler2DShadow sampler_,vec4 P);\n"
"float textureLod(sampler1DArrayShadow sampler_,vec3 P,float lod);\n"
"vec4 textureLod(sampler1D sampler_,float P,float lod);\n"
"ivec4 textureLod(isampler1D sampler_,float P,float lod);\n"
"uvec4 textureLod(usampler1D sampler_,float P,float lod);\n"
"vec4 textureLod(sampler2D sampler_,vec2 P,float lod);\n"
"ivec4 textureLod(isampler2D sampler_,vec2 P,float lod);\n"
"uvec4 textureLod(usampler2D sampler_,vec2 P,float lod);\n"
"vec4 textureLod(sampler3D sampler_,vec3 P,float lod);\n"
"ivec4 textureLod(isampler3D sampler_,vec3 P,float lod);\n"
"uvec4 textureLod(usampler3D sampler_,vec3 P,float lod);\n"
"vec4 textureLod(samplerCube sampler_,vec3 P,float lod);\n"
"ivec4 textureLod(isamplerCube sampler_,vec3 P,float lod);\n"
"uvec4 textureLod(usamplerCube sampler_,vec3 P,float lod);\n"
"vec4 textureLod(sampler1DArray sampler_,vec2 P,float lod);\n"
"ivec4 textureLod(isampler1DArray sampler_,vec2 P,float lod);\n"
"uvec4 textureLod(usampler1DArray sampler_,vec2 P,float lod);\n"
"vec4 textureLod(sampler2DArray sampler_,vec3 P,float lod);\n"
"ivec4 textureLod(isampler2DArray sampler_,vec3 P,float lod);\n"
"uvec4 textureLod(usampler2DArray sampler_,vec3 P,float lod);\n"
"vec4 textureLod(samplerCubeArray sampler_,vec4 P,float lod);\n"
"ivec4 textureLod(isamplerCubeArray sampler_,vec4 P,float lod);\n"
"uvec4 textureLod(usamplerCubeArray sampler_,vec4 P,float lod);\n"
"float textureLod(sampler1DShadow sampler_,vec3 P,float lod);\n"
"float textureLod(sampler2DShadow sampler_,vec3 P,float lod);\n"
"ivec4 textureOffset(isampler1D sampler_,float P,int offset);\n"
"uvec4 textureOffset(usampler1D sampler_,float P,int offset);\n"
"vec4 textureOffset(sampler1D sampler_,float P,int offset);\n"
"vec4 textureOffset(sampler2D sampler_,vec2 P,ivec2 offset);\n"
"ivec4 textureOffset(isampler2D sampler_,vec2 P,ivec2 offset);\n"
"uvec4 textureOffset(usampler2D sampler_,vec2 P,ivec2 offset);\n"
"vec4 textureOffset(sampler3D sampler_,vec3 P,ivec3 offset);\n"
"ivec4 textureOffset(isampler3D sampler_,vec3 P,ivec3 offset);\n"
"uvec4 textureOffset(usampler3D sampler_,vec3 P,ivec3 offset);\n"
"vec4 textureOffset(sampler2DRect sampler_,vec2 P,ivec2 offset);\n"
"ivec4 textureOffset(isampler2DRect sampler_,vec2 P,ivec2 offset);\n"
"uvec4 textureOffset(usampler2DRect sampler_,vec2 P,ivec2 offset);\n"
"vec4 textureOffset(sampler1DArray sampler_,vec2 P,int offset);\n"
"ivec4 textureOffset(isampler1DArray sampler_,vec2 P,int offset);\n"
"uvec4 textureOffset(usampler1DArray sampler_,vec2 P,int offset);\n"
"vec4 textureOffset(sampler2DArray sampler_,vec3 P,ivec2 offset);\n"
"ivec4 textureOffset(isampler2DArray sampler_,vec3 P,ivec2 offset);\n"
"uvec4 textureOffset(usampler2DArray sampler_,vec3 P,ivec2 offset);\n"
"float textureOffset(sampler1DShadow sampler_,vec3 P,int offset);\n"
"float textureOffset(sampler2DShadow sampler_,vec3 P,ivec2 offset);\n"
"float textureOffset(sampler2DRectShadow sampler_,vec3 P,ivec2 offset);\n"
"float textureOffset(sampler1DArrayShadow sampler_,vec3 P,int offset);\n"
"float textureOffset(sampler2DArrayShadow sampler_,vec4 P,ivec2 offset);\n"
"vec4 texelFetch(sampler1D sampler_,int P,int lod);\n"
"ivec4 texelFetch(isampler1D sampler_,int P,int lod);\n"
"uvec4 texelFetch(usampler1D sampler_,int P,int lod);\n"
"vec4 texelFetch(sampler2D sampler_,ivec2 P,int lod);\n"
"ivec4 texelFetch(isampler2D sampler_,ivec2 P,int lod);\n"
"uvec4 texelFetch(usampler2D sampler_,ivec2 P,int lod);\n"
"vec4 texelFetch(sampler3D sampler_,ivec3 P,int lod);\n"
"ivec4 texelFetch(isampler3D sampler_,ivec3 P,int lod);\n"
"uvec4 texelFetch(usampler3D sampler_,ivec3 P,int lod);\n"
"vec4 texelFetch(sampler2DRect sampler_,ivec2 P);\n"
"ivec4 texelFetch(isampler2DRect sampler_,ivec2 P);\n"
"uvec4 texelFetch(usampler2DRect sampler_,ivec2 P);\n"
"vec4 texelFetch(samplerBuffer sampler_,int P);\n"
"ivec4 texelFetch(isamplerBuffer sampler_,int P);\n"
"uvec4 texelFetch(usamplerBuffer sampler_,int P);\n"
"vec4 texelFetch(sampler1DArray sampler_,ivec2 P,int lod);\n"
"ivec4 texelFetch(isampler1DArray sampler_,ivec2 P,int lod);\n"
"uvec4 texelFetch(usampler1DArray sampler_,ivec2 P,int lod);\n"
"vec4 texelFetch(sampler2DArray sampler_,ivec3 P,int lod);\n"
"ivec4 texelFetch(isampler2DArray sampler_,ivec3 P,int lod);\n"
"uvec4 texelFetch(usampler2DArray sampler_,ivec3 P,int lod);\n"
"vec4 texelFetch(sampler2DMS sampler_,ivec2 P,int lod);\n"
"ivec4 texelFetch(isampler2DMS sampler_,ivec2 P,int lod);\n"
"uvec4 texelFetch(usampler2DMS sampler_,ivec2 P,int lod);\n"
"vec4 texelFetch(sampler2DMSArray sampler_,ivec3 P,int lod);\n"
"ivec4 texelFetch(isampler2DMSArray sampler_,ivec3 P,int lod);\n"
"uvec4 texelFetch(usampler2DMSArray sampler_,ivec3 P,int lod);\n"
"vec4 texelFetchOffset(sampler1D sampler_,int P,int lod,int offset);\n"
"ivec4 texelFetchOffset(isampler1D sampler_,int P,int lod,int offset);\n"
"uvec4 texelFetchOffset(usampler1D sampler_,int P,int lod,int offset);\n"
"vec4 texelFetchOffset(sampler2D sampler_,ivec2 P,int lod,ivec2 offset);\n"
"ivec4 texelFetchOffset(isampler2D sampler_,ivec2 P,int lod,ivec2 offset);\n"
"uvec4 texelFetchOffset(usampler2D sampler_,ivec2 P,int lod,ivec2 offset);\n"
"vec4 texelFetchOffset(sampler3D sampler_,ivec3 P,int lod,ivec3 offset);\n"
"ivec4 texelFetchOffset(isampler3D sampler_,ivec3 P,int lod,ivec3 offset);\n"
"uvec4 texelFetchOffset(usampler3D sampler_,ivec3 P,int lod,ivec3 offset);\n"
"vec4 texelFetchOffset(sampler2DRect sampler_,ivec2 P,ivec2 offset);\n"
"ivec4 texelFetchOffset(isampler2DRect sampler_,ivec2 P,ivec2 offset);\n"
"uvec4 texelFetchOffset(usampler2DRect sampler_,ivec2 P,ivec2 offset);\n"
"vec4 texelFetchOffset(sampler1DArray sampler_,ivec2 P,int lod,int offset);\n"
"ivec4 texelFetchOffset(isampler1DArray sampler_,ivec2 P,int lod,int offset);\n"
"uvec4 texelFetchOffset(usampler1DArray sampler_,ivec2 P,int lod,int offset);\n"
"vec4 texelFetchOffset(sampler2DArray sampler_,ivec3 P,int lod,ivec2 offset);\n"
"ivec4 texelFetchOffset(isampler2DArray sampler_,ivec3 P,int lod,ivec2 offset);\n"
"uvec4 texelFetchOffset(usampler2DArray sampler_,ivec3 P,int lod,ivec2 offset);\n"
"vec4 textureProjOffset(sampler1D sampler_,vec2 P,int offset);\n"
"vec4 textureProjOffset(sampler1D sampler_,vec4 P,int offset);\n"
"ivec4 textureProjOffset(isampler1D sampler_,vec2 P,int offset);\n"
"ivec4 textureProjOffset(isampler1D sampler_,vec4 P,int offset);\n"
"uvec4 textureProjOffset(usampler1D sampler_,vec2 P,int offset);\n"
"uvec4 textureProjOffset(usampler1D sampler_,vec4 P,int offset);\n"
"vec4 textureProjOffset(sampler2D sampler_,vec3 P,ivec2 offset);\n"
"vec4 textureProjOffset(sampler2D sampler_,vec4 P,ivec2 offset);\n"
"ivec4 textureProjOffset(isampler2D sampler_,vec3 P,ivec2 offset);\n"
"ivec4 textureProjOffset(isampler2D sampler_,vec4 P,ivec2 offset);\n"
"uvec4 textureProjOffset(usampler2D sampler_,vec3 P,ivec2 offset);\n"
"uvec4 textureProjOffset(usampler2D sampler_,vec4 P,ivec2 offset);\n"
"vec4 textureProjOffset(sampler3D sampler_,vec4 P,ivec3 offset);\n"
"ivec4 textureProjOffset(isampler3D sampler_,vec4 P,ivec3 offset);\n"
"uvec4 textureProjOffset(usampler3D sampler_,vec4 P,ivec3 offset);\n"
"vec4 textureProjOffset(sampler2DRect sampler_,vec3 P,ivec2 offset);\n"
"vec4 textureProjOffset(sampler2DRect sampler_,vec4 P,ivec2 offset);\n"
"ivec4 textureProjOffset(isampler2DRect sampler_,vec3 P,ivec2 offset);\n"
"ivec4 textureProjOffset(isampler2DRect sampler_,vec4 P,ivec2 offset);\n"
"uvec4 textureProjOffset(usampler2DRect sampler_,vec3 P,ivec2 offset);\n"
"uvec4 textureProjOffset(usampler2DRect sampler_,vec4 P,ivec2 offset);\n"
"float textureProjOffset(sampler1DShadow sampler_,vec4 P,int offset);\n"
"float textureProjOffset(sampler2DShadow sampler_,vec4 P,ivec2 offset);\n"
"float textureProjOffset(sampler2DRectShadow sampler_,vec4 P,ivec2 offset);\n"
"vec4 textureLodOffset(sampler1D sampler_,float P,float lod,int offset);\n"
"ivec4 textureLodOffset(isampler1D sampler_,float P,float lod,int offset);\n"
"uvec4 textureLodOffset(usampler1D sampler_,float P,float lod,int offset);\n"
"vec4 textureLodOffset(sampler2D sampler_,vec2 P,float lod,ivec2 offset);\n"
"ivec4 textureLodOffset(isampler2D sampler_,vec2 P,float lod,ivec2 offset);\n"
"uvec4 textureLodOffset(usampler2D sampler_,vec2 P,float lod,ivec2 offset);\n"
"vec4 textureLodOffset(sampler3D sampler_,vec3 P,float lod,ivec3 offset);\n"
"ivec4 textureLodOffset(isampler3D sampler_,vec3 P,float lod,ivec3 offset);\n"
"uvec4 textureLodOffset(usampler3D sampler_,vec3 P,float lod,ivec3 offset);\n"
"vec4 textureLodOffset(sampler1DArray sampler_,vec2 P,float lod,int offset);\n"
"ivec4 textureLodOffset(isampler1DArray sampler_,vec2 P,float lod,int offset);\n"
"uvec4 textureLodOffset(usampler1DArray sampler_,vec2 P,float lod,int offset);\n"
"vec4 textureLodOffset(sampler2DArray sampler_,vec3 P,float lod,ivec2 offset);\n"
"ivec4 textureLodOffset(isampler2DArray sampler_,vec3 P,float lod,ivec2 offset);\n"
"uvec4 textureLodOffset(usampler2DArray sampler_,vec3 P,float lod,ivec2 offset);\n"
"float textureLodOffset(sampler1DShadow sampler_,vec3 P,float lod,int offset);\n"
"float textureLodOffset(sampler2DShadow sampler_,vec3 P,float lod,ivec2 offset);\n"
"float textureLodOffset(sampler1DArrayShadow sampler_,vec3 P,float lod,int offset);\n"
"vec4 textureProjLod(sampler1D sampler_,vec2 P,float lod);\n"
"vec4 textureProjLod(sampler1D sampler_,vec4 P,float lod);\n"
"ivec4 textureProjLod(isampler1D sampler_,vec2 P,float lod);\n"
"ivec4 textureProjLod(isampler1D sampler_,vec4 P,float lod);\n"
"uvec4 textureProjLod(usampler1D sampler_,vec2 P,float lod);\n"
"uvec4 textureProjLod(usampler1D sampler_,vec4 P,float lod);\n"
"vec4 textureProjLod(sampler2D sampler_,vec3 P,float lod);\n"
"vec4 textureProjLod(sampler2D sampler_,vec4 P,float lod);\n"
"ivec4 textureProjLod(isampler2D sampler_,vec3 P,float lod);\n"
"ivec4 textureProjLod(isampler2D sampler_,vec4 P,float lod);\n"
"uvec4 textureProjLod(usampler2D sampler_,vec3 P,float lod);\n"
"uvec4 textureProjLod(usampler2D sampler_,vec4 P,float lod);\n"
"vec4 textureProjLod(sampler3D sampler_,vec4 P,float lod);\n"
"ivec4 textureProjLod(isampler3D sampler_,vec4 P,float lod);\n"
"uvec4 textureProjLod(usampler3D sampler_,vec4 P,float lod);\n"
"float textureProjLod(sampler1DShadow sampler_,vec4 P,float lod);\n"
"float textureProjLod(sampler2DShadow sampler_,vec4 P,float lod);\n"
"vec4 textureProjLodOffset(sampler1D sampler_,vec2 P,float lod,int offset);\n"
"vec4 textureProjLodOffset(sampler1D sampler_,vec4 P,float lod,int offset);\n"
"ivec4 textureProjLodOffset(isampler1D sampler_,vec2 P,float lod,int offset);\n"
"ivec4 textureProjLodOffset(isampler1D sampler_,vec4 P,float lod,int offset);\n"
"uvec4 textureProjLodOffset(usampler1D sampler_,vec2 P,float lod,int offset);\n"
"uvec4 textureProjLodOffset(usampler1D sampler_,vec4 P,float lod,int offset);\n"
"vec4 textureProjLodOffset(sampler2D sampler_,vec3 P,float lod,ivec2 offset);\n"
"vec4 textureProjLodOffset(sampler2D sampler_,vec4 P,float lod,ivec2 offset);\n"
"ivec4 textureProjLodOffset(isampler2D sampler_,vec3 P,float lod,ivec2 offset);\n"
"ivec4 textureProjLodOffset(isampler2D sampler_,vec4 P,float lod,ivec2 offset);\n"
"uvec4 textureProjLodOffset(usampler2D sampler_,vec3 P,float lod,ivec2 offset);\n"
"uvec4 textureProjLodOffset(usampler2D sampler_,vec4 P,float lod,ivec2 offset);\n"
"vec4 textureProjLodOffset(sampler3D sampler_,vec4 P,float lod,ivec3 offset);\n"
"ivec4 textureProjLodOffset(isampler3D sampler_,vec4 P,float lod,ivec3 offset);\n"
"uvec4 textureProjLodOffset(usampler3D sampler_,vec4 P,float lod,ivec3 offset);\n"
"float textureProjLodOffset(sampler1DShadow sampler_,vec4 P,float lod,int offset);\n"
"float textureProjLodOffset(sampler2DShadow sampler_,vec4 P,float lod,ivec2 offset);\n"
"vec4 textureGrad(sampler1D sampler_,float P,float dPdx,float dPdy);\n"
"ivec4 textureGrad(isampler1D sampler_,float P,float dPdx,float dPdy);\n"
"uvec4 textureGrad(usampler1D sampler_,float P,float dPdx,float dPdy);\n"
"vec4 textureGrad(sampler2D sampler_,vec2 P,vec2 dPdx,vec2 dPdy);\n"
"ivec4 textureGrad(isampler2D sampler_,vec2 P,vec2 dPdx,vec2 dPdy);\n"
"uvec4 textureGrad(usampler2D sampler_,vec2 P,vec2 dPdx,vec2 dPdy);\n"
"vec4 textureGrad(sampler3D sampler_,vec3 P,vec3 dPdx,vec3 dPdy);\n"
"ivec4 textureGrad(isampler3D sampler_,vec3 P,vec3 dPdx,vec3 dPdy);\n"
"uvec4 textureGrad(usampler3D sampler_,vec3 P,vec3 dPdx,vec3 dPdy);\n"
"vec4 textureGrad(samplerCube sampler_,vec3 P,vec3 dPdx,vec3 dPdy);\n"
"ivec4 textureGrad(isamplerCube sampler_,vec3 P,vec3 dPdx,vec3 dPdy);\n"
"uvec4 textureGrad(usamplerCube sampler_,vec3 P,vec3 dPdx,vec3 dPdy);\n"
"vec4 textureGrad(sampler2DRect sampler_,vec2 P,vec2 dPdx,vec2 dPdy);\n"
"ivec4 textureGrad(isampler2DRect sampler_,vec2 P,vec2 dPdx,vec2 dPdy);\n"
"uvec4 textureGrad(usampler2DRect sampler_,vec2 P,vec2 dPdx,vec2 dPdy);\n"
"vec4 textureGrad(sampler1DArray sampler_,vec2 P,float dPdx,float dPdy);\n"
"ivec4 textureGrad(isampler1DArray sampler_,vec2 P,float dPdx,float dPdy);\n"
"uvec4 textureGrad(usampler1DArray sampler_,vec2 P,float dPdx,float dPdy);\n"
"vec4 textureGrad(sampler2DArray sampler_,vec3 P,vec2 dPdx,vec2 dPdy);\n"
"ivec4 textureGrad(isampler2DArray sampler_,vec3 P,vec2 dPdx,vec2 dPdy);\n"
"uvec4 textureGrad(usampler2DArray sampler_,vec3 P,vec2 dPdx,vec2 dPdy);\n"
"vec4 textureGrad(samplerCubeArray sampler_,vec4 P,vec3 dPdx,vec3 dPdy);\n"
"ivec4 textureGrad(isamplerCubeArray sampler_,vec4 P,vec3 dPdx,vec3 dPdy);\n"
"uvec4 textureGrad(usamplerCubeArray sampler_,vec4 P,vec3 dPdx,vec3 dPdy);\n"
"float textureGrad(sampler1DShadow sampler_,vec3 P,float dPdx,float dPdy);\n"
"float textureGrad(sampler2DShadow sampler_,vec3 P,vec2 dPdx,vec2 dPdy);\n"
"float textureGrad(samplerCubeShadow sampler_,vec4 P,vec3 dPdx,vec3 dPdy);\n"
"float textureGrad(sampler2DRectShadow sampler_,vec3 P,vec2 dPdx,vec2 dPdy);\n"
"float textureGrad(sampler1DArrayShadow sampler_,vec3 P,float dPdx,float dPdy);\n"
"float textureGrad(sampler2DArrayShadow sampler_,vec4 P,vec2 dPdx,vec2 dPdy);\n"
"float textureGrad(samplerCubeArrayShadow sampler_,vec4 P,float dPdx,vec3 dPdy,vec3);\n"
"vec4 textureGradOffset(sampler1D sampler_,float P,float dPdx,float dPdy,int offset);\n"
"ivec4 textureGradOffset(isampler1D sampler_,float P,float dPdx,float dPdy,int offset);\n"
"uvec4 textureGradOffset(usampler1D sampler_,float P,float dPdx,float dPdy,int offset);\n"
"vec4 textureGradOffset(sampler2D sampler_,vec2 P,vec2 dPdx,vec2 dPdy,ivec2 offset);\n"
"ivec4 textureGradOffset(isampler2D sampler_,vec2 P,vec2 dPdx,vec2 dPdy,ivec2 offset);\n"
"uvec4 textureGradOffset(usampler2D sampler_,vec2 P,vec2 dPdx,vec2 dPdy,ivec2 offset);\n"
"vec4 textureGradOffset(sampler3D sampler_,vec3 P,vec3 dPdx,vec3 dPdy,ivec3 offset);\n"
"ivec4 textureGradOffset(isampler3D sampler_,vec3 P,vec3 dPdx,vec3 dPdy,ivec3 offset);\n"
"uvec4 textureGradOffset(usampler3D sampler_,vec3 P,vec3 dPdx,vec3 dPdy,ivec3 offset);\n"
"vec4 textureGradOffset(sampler2DRect sampler_,vec2 P,vec2 dPdx,vec2 dPdy,ivec2 offset);\n"
"ivec4 textureGradOffset(isampler2DRect sampler_,vec2 P,vec2 dPdx,vec2 dPdy,ivec2 offset);\n"
"uvec4 textureGradOffset(usampler2DRect sampler_,vec2 P,vec2 dPdx,vec2 dPdy,ivec2 offset);\n"
"vec4 textureGradOffset(sampler1DArray sampler_,vec2 P,float dPdx,float dPdy,int offset);\n"
"ivec4 textureGradOffset(isampler1DArray sampler_,vec2 P,float dPdx,float dPdy,int offset);\n"
"uvec4 textureGradOffset(usampler1DArray sampler_,vec2 P,float dPdx,float dPdy,int offset);\n"
"vec4 textureGradOffset(sampler2DArray sampler_,vec3 P,vec2 dPdx,vec2 dPdy,ivec2 offset);\n"
"ivec4 textureGradOffset(isampler2DArray sampler_,vec3 P,vec2 dPdx,vec2 dPdy,ivec2 offset);\n"
"uvec4 textureGradOffset(usampler2DArray sampler_,vec3 P,vec2 dPdx,vec2 dPdy,ivec2 offset);\n"
"float textureGradOffset(sampler1DShadow sampler_,vec3 P,float dPdx,float dPdy,int offset);\n"
"float textureGradOffset(sampler2DShadow sampler_,vec3 P,vec2 dPdx,vec2 dPdy,ivec2 offset);\n"
"float textureGradOffset(sampler2DRectShadow sampler_,vec3 P,vec2 dPdx,vec2 dPdy,ivec2 offset);\n"
"float textureGradOffset(sampler1DArrayShadow sampler_,vec3 P,float dPdx,float dPdy,int offset);\n"
"float textureGradOffset(sampler2DArrayShadow sampler_,vec4 P,vec2 dPdx,vec2 dPdy,ivec2 offset);\n"
"vec4 textureProjGrad(sampler1D sampler_,vec2 P,float dPdx,float dPdy);\n"
"vec4 textureProjGrad(sampler1D sampler_,vec4 P,float dPdx,float dPdy);\n"
"ivec4 textureProjGrad(isampler1D sampler_,vec2 P,float dPdx,float dPdy);\n"
"ivec4 textureProjGrad(isampler1D sampler_,vec4 P,float dPdx,float dPdy);\n"
"uvec4 textureProjGrad(usampler1D sampler_,vec2 P,float dPdx,float dPdy);\n"
"uvec4 textureProjGrad(usampler1D sampler_,vec4 P,float dPdx,float dPdy);\n"
"vec4 textureProjGrad(sampler2D sampler_,vec3 P,vec2 dPdx,vec2 dPdy);\n"
"vec4 textureProjGrad(sampler2D sampler_,vec4 P,vec2 dPdx,vec2 dPdy);\n"
"ivec4 textureProjGrad(isampler2D sampler_,vec3 P,vec2 dPdx,vec2 dPdy);\n"
"ivec4 textureProjGrad(isampler2D sampler_,vec4 P,vec2 dPdx,vec2 dPdy);\n"
"uvec4 textureProjGrad(usampler2D sampler_,vec3 P,vec2 dPdx,vec2 dPdy);\n"
"uvec4 textureProjGrad(usampler2D sampler_,vec4 P,vec2 dPdx,vec2 dPdy);\n"
"vec4 textureProjGrad(sampler3D sampler_,vec4 P,vec3 dPdx,vec3 dPdy);\n"
"ivec4 textureProjGrad(isampler3D sampler_,vec4 P,vec3 dPdx,vec3 dPdy);\n"
"uvec4 textureProjGrad(usampler3D sampler_,vec4 P,vec3 dPdx,vec3 dPdy);\n"
"vec4 textureProjGrad(sampler2DRect sampler_,vec3 P,vec2 dPdx,vec2 dPdy);\n"
"vec4 textureProjGrad(sampler2DRect sampler_,vec4 P,vec2 dPdx,vec2 dPdy);\n"
"ivec4 textureProjGrad(isampler2DRect sampler_,vec3 P,vec2 dPdx,vec2 dPdy);\n"
"ivec4 textureProjGrad(isampler2DRect sampler_,vec4 P,vec2 dPdx,vec2 dPdy);\n"
"uvec4 textureProjGrad(usampler2DRect sampler_,vec3 P,vec2 dPdx,vec2 dPdy);\n"
"uvec4 textureProjGrad(usampler2DRect sampler_,vec4 P,vec2 dPdx,vec2 dPdy);\n"
"float textureProjGrad(sampler1DShadow sampler_,vec4 P,float dPdx,float dPdy);\n"
"float textureProjGrad(sampler2DShadow sampler_,vec4 P,vec2 dPdx,vec2 dPdy);\n"
"float textureProjGrad(sampler2DRectShadow sampler_,vec4 P,vec2 dPdx,vec2 dPdy);\n"
"vec4 textureProjGradOffset(sampler1D sampler_,vec2 P,float dPdx,float dPdy,int offset);\n"
"vec4 textureProjGradOffset(sampler1D sampler_,vec4 P,float dPdx,float dPdy,int offset);\n"
"ivec4 textureProjGradOffset(isampler1D sampler_,vec2 P,float dPdx,float dPdy,int offset);\n"
"ivec4 textureProjGradOffset(isampler1D sampler_,vec4 P,float dPdx,float dPdy,int offset);\n"
"uvec4 textureProjGradOffset(usampler1D sampler_,vec2 P,float dPdx,float dPdy,int offset);\n"
"uvec4 textureProjGradOffset(usampler1D sampler_,vec4 P,float dPdx,float dPdy,int offset);\n"
"vec4 textureProjGradOffset(sampler2D sampler_,vec3 P,vec2 dPdx,vec2 dPdy,ivec2 offset);\n"
"vec4 textureProjGradOffset(sampler2D sampler_,vec4 P,vec2 dPdx,vec2 dPdy,ivec2 offset);\n"
"ivec4 textureProjGradOffset(isampler2D sampler_,vec3 P,vec2 dPdx,vec2 dPdy,ivec2 offset);\n"
"ivec4 textureProjGradOffset(isampler2D sampler_,vec4 P,vec2 dPdx,vec2 dPdy,ivec2 offset);\n"
"uvec4 textureProjGradOffset(usampler2D sampler_,vec3 P,vec2 dPdx,vec2 dPdy,ivec2 offset);\n"
"uvec4 textureProjGradOffset(usampler2D sampler_,vec4 P,vec2 dPdx,vec2 dPdy,ivec2 offset);\n"
"vec4 textureProjGradOffset(sampler3D sampler_,vec4 P,vec3 dPdx,vec3 dPdy,ivec3 offset);\n"
"ivec4 textureProjGradOffset(isampler3D sampler_,vec4 P,vec3 dPdx,vec3 dPdy,ivec3 offset);\n"
"uvec4 textureProjGradOffset(usampler3D sampler_,vec4 P,vec3 dPdx,vec3 dPdy,ivec3 offset);\n"
"vec4 textureProjGradOffset(sampler2DRect sampler_,vec3 P,vec2 dPdx,vec2 dPdy,ivec2 offset);\n"
"vec4 textureProjGradOffset(sampler2DRect sampler_,vec4 P,vec2 dPdx,vec2 dPdy,ivec2 offset);\n"
"ivec4 textureProjGradOffset(isampler2DRect sampler_,vec3 P,vec2 dPdx,vec2 dPdy,ivec2 offset);\n"
"ivec4 textureProjGradOffset(isampler2DRect sampler_,vec4 P,vec2 dPdx,vec2 dPdy,ivec2 offset);\n"
"uvec4 textureProjGradOffset(usampler2DRect sampler_,vec3 P,vec2 dPdx,vec2 dPdy,ivec2 offset);\n"
"uvec4 textureProjGradOffset(usampler2DRect sampler_,vec4 P,vec2 dPdx,vec2 dPdy,ivec2 offset);\n"
"float textureProjGradOffset(sampler1DShadow sampler_,vec4 P,float dPdx,float dPdy,int offset);\n"
"float textureProjGradOffset(sampler2DShadow sampler_,vec4 P,vec2 dPdx,vec2 dPdy,ivec2 offset);\n"
"float textureProjGradOffset(sampler2DRectShadow sampler_,vec4 P,vec2 dPdx,vec2 dPdy,ivec2 offset);\n"
"\n"
"__glsld_syscmd_begin_context__;\n"
"__glsld_syscmd_require_extension__ GL_EXT_shader_explicit_arithmetic_types_float16;\n"
"\n"
"float16_t texture(f16sampler2DShadow,vec3);\n"
"float16_t texture(f16sampler2DShadow,f16vec2,float);\n"
"float16_t texture(f16samplerCubeShadow,vec4);\n"
"float16_t texture(f16samplerCubeShadow,f16vec3,float);\n"
"float16_t texture(f16sampler2DRectShadow,vec3);\n"
"float16_t texture(f16sampler2DRectShadow,f16vec2,float);\n"
"float16_t texture(f16sampler1DArrayShadow,vec3);\n"
"float16_t texture(f16sampler1DArrayShadow,f16vec2,float);\n"
"float16_t texture(f16sampler2DArrayShadow,vec4);\n"
"float16_t texture(f16sampler2DArrayShadow,f16vec3,float);\n"
"float16_t texture(f16samplerCubeArrayShadow,vec4,float);\n"
"float16_t texture(f16samplerCubeArrayShadow,f16vec4,float);\n"
"f16vec4 texture(f16sampler1D,float);\n"
"f16vec4 texture(f16sampler1D,float16_t);\n"
"f16vec4 texture(f16sampler2D,vec2);\n"
"f16vec4 texture(f16sampler2D,f16vec2);\n"
"f16vec4 texture(f16sampler3D,vec3);\n"
"f16vec4 texture(f16sampler3D,f16vec3);\n"
"f16vec4 texture(f16samplerCube,vec3);\n"
"f16vec4 texture(f16samplerCube,f16vec3);\n"
"f16vec4 texture(f16sampler2DRect,vec2);\n"
"f16vec4 texture(f16sampler2DRect,f16vec2);\n"
"f16vec4 texture(f16sampler1DArray,vec2);\n"
"f16vec4 texture(f16sampler1DArray,f16vec2);\n"
"f16vec4 texture(f16sampler2DArray,vec3);\n"
"f16vec4 texture(f16sampler2DArray,f16vec3);\n"
"f16vec4 texture(f16samplerCubeArray,vec4);\n"
"f16vec4 texture(f16samplerCubeArray,f16vec4);\n"
"float16_t texture(f16sampler1DShadow sampler_,vec3 P);\n"
"float16_t texture(f16sampler1DShadow sampler_,f16vec2 P,float compare);\n"
"float16_t textureProj(f16sampler2DRectShadow sampler_,vec4 P);\n"
"float16_t textureProj(f16sampler2DRectShadow sampler_,f16vec3 P,float bias);\n"
"float16_t textureProj(f16sampler2DShadow sampler_,vec4 P);\n"
"float16_t textureProj(f16sampler2DShadow sampler_,f16vec3 P,float bias);\n"
"f16vec4 textureProj(f16sampler1D sampler_,vec2 P);\n"
"f16vec4 textureProj(f16sampler1D sampler_,f16vec2 P);\n"
"f16vec4 textureProj(f16sampler1D sampler_,vec4 P);\n"
"f16vec4 textureProj(f16sampler1D sampler_,f16vec4 P);\n"
"f16vec4 textureProj(f16sampler2D sampler_,vec3 P);\n"
"f16vec4 textureProj(f16sampler2D sampler_,f16vec3 P);\n"
"f16vec4 textureProj(f16sampler2D sampler_,vec4 P);\n"
"f16vec4 textureProj(f16sampler2D sampler_,f16vec4 P);\n"
"f16vec4 textureProj(f16sampler3D sampler_,vec4 P);\n"
"f16vec4 textureProj(f16sampler3D sampler_,f16vec4 P);\n"
"f16vec4 textureProj(f16sampler2DRect sampler_,vec3 P);\n"
"f16vec4 textureProj(f16sampler2DRect sampler_,f16vec3 P);\n"
"f16vec4 textureProj(f16sampler2DRect sampler_,vec4 P);\n"
"f16vec4 textureProj(f16sampler2DRect sampler_,f16vec4 P);\n"
"float16_t textureProj(f16sampler1DShadow sampler_,vec4 P);\n"
"float16_t textureProj(f16sampler1DShadow sampler_,f16vec3 P,float bias);\n"
"float16_t textureLod(f16sampler2DShadow sampler_,vec3 P,float lod);\n"
"float16_t textureLod(f16sampler2DShadow sampler_,f16vec2 P,float lod,float16_t);\n"
"float16_t textureLod(f16sampler1DArrayShadow sampler_,vec3 P,float lod);\n"
"float16_t textureLod(f16sampler1DArrayShadow sampler_,f16vec2 P,float lod,float16_t);\n"
"f16vec4 textureLod(f16sampler1D sampler_,float P,float lod);\n"
"f16vec4 textureLod(f16sampler1D sampler_,float16_t P,float16_t lod);\n"
"f16vec4 textureLod(f16sampler2D sampler_,vec2 P,float lod);\n"
"f16vec4 textureLod(f16sampler2D sampler_,f16vec2 P,float16_t lod);\n"
"f16vec4 textureLod(f16sampler3D sampler_,vec3 P,float lod);\n"
"f16vec4 textureLod(f16sampler3D sampler_,f16vec3 P,float16_t lod);\n"
"f16vec4 textureLod(f16samplerCube sampler_,vec3 P,float lod);\n"
"f16vec4 textureLod(f16samplerCube sampler_,f16vec3 P,float16_t lod);\n"
"f16vec4 textureLod(f16sampler1DArray sampler_,vec2 P,float lod);\n"
"f16vec4 textureLod(f16sampler1DArray sampler_,f16vec2 P,float16_t lod);\n"
"f16vec4 textureLod(f16sampler2DArray sampler_,vec3 P,float lod);\n"
"f16vec4 textureLod(f16sampler2DArray sampler_,f16vec3 P,float16_t lod);\n"
"f16vec4 textureLod(f16samplerCubeArray sampler_,vec4 P,float lod);\n"
"f16vec4 textureLod(f16samplerCubeArray sampler_,f16vec4 P,float16_t lod);\n"
"float16_t textureLod(f16sampler1DShadow sampler_,vec3 P,float lod);\n"
"float16_t textureLod(f16sampler1DShadow sampler_,f16vec2 P,float lod,float16_t);\n"
"f16vec4 textureOffset(f16sampler1D sampler_,float P,int offset);\n"
"f16vec4 textureOffset(f16sampler1D sampler_,float16_t P,int offset);\n"
"f16vec4 textureOffset(f16sampler2D sampler_,vec2 P,ivec2 offset);\n"
"f16vec4 textureOffset(f16sampler2D sampler_,f16vec2 P,ivec2 offset);\n"
"f16vec4 textureOffset(f16sampler3D sampler_,vec3 P,ivec3 offset);\n"
"f16vec4 textureOffset(f16sampler3D sampler_,f16vec3 P,ivec3 offset);\n"
"f16vec4 textureOffset(f16sampler2DRect sampler_,vec2 P,ivec2 offset);\n"
"f16vec4 textureOffset(f16sampler2DRect sampler_,f16vec2 P,ivec2 offset);\n"
"f16vec4 textureOffset(f16sampler1DArray sampler_,vec2 P,int offset);\n"
"f16vec4 textureOffset(f16sampler1DArray sampler_,f16vec2 P,int offset);\n"
"f16vec4 textureOffset(f16sampler2DArray sampler_,vec3 P,ivec2 offset);\n"
"f16vec4 textureOffset(f16sampler2DArray sampler_,f16vec3 P,ivec2 offset);\n"
"float16_t textureOffset(f16sampler1DShadow sampler_,vec3 P,int offset);\n"
"float16_t textureOffset(f16sampler1DShadow sampler_,f16vec2 P,float offset,int bias);\n"
"float16_t textureOffset(f16sampler2DShadow sampler_,vec3 P,ivec2 offset);\n"
"float16_t textureOffset(f16sampler2DShadow sampler_,f16vec2 P,float offset,ivec2 bias);\n"
"float16_t textureOffset(f16sampler2DRectShadow sampler_,vec3 P,ivec2 offset);\n"
"float16_t textureOffset(f16sampler2DRectShadow sampler_,f16vec2 P,float offset,ivec2 bias);\n"
"float16_t textureOffset(f16sampler1DArrayShadow sampler_,vec3 P,int offset);\n"
"float16_t textureOffset(f16sampler1DArrayShadow sampler_,f16vec2 P,float offset,int bias);\n"
"float16_t textureOffset(f16sampler2DArrayShadow sampler_,vec4 P,ivec2 offset);\n"
"float16_t textureOffset(f16sampler2DArrayShadow sampler_,f16vec3 P,float offset,ivec2 bias);\n"
"f16vec4 texelFetch(f16sampler1D sampler_,int P,int lod);\n"
"f16vec4 texelFetch(f16sampler1D sampler_,int P,int lod);\n"
"f16vec4 texelFetch(f16sampler2D sampler_,ivec2 P,int lod);\n"
"f16vec4 texelFetch(f16sampler2D sampler_,ivec2 P,int lod);\n"
"f16vec4 texelFetch(f16sampler3D sampler_,ivec3 P,int lod);\n"
"f16vec4 texelFetch(f16sampler3D sampler_,ivec3 P,int lod);\n"
"f16vec4 texelFetch(f16sampler2DRect sampler_,ivec2 P);\n"
"f16vec4 texelFetch(f16sampler2DRect sampler_,ivec2 P);\n"
"f16vec4 texelFetch(f16samplerBuffer sampler_,int P);\n"
"f16vec4 texelFetch(f16samplerBuffer sampler_,int P);\n"
"f16vec4 texelFetch(f16sampler1DArray sampler_,ivec2 P,int lod);\n"
"f16vec4 texelFetch(f16sampler1DArray sampler_,ivec2 P,int lod);\n"
"f16vec4 texelFetch(f16sampler2DArray sampler_,ivec3 P,int lod);\n"
"f16vec4 texelFetch(f16sampler2DArray sampler_,ivec3 P,int lod);\n"
"f16vec4 texelFetch(f16sampler2DMS sampler_,ivec2 P,int lod);\n"
"f16vec4 texelFetch(f16sampler2DMS sampler_,ivec2 P,int lod);\n"
"f16vec4 texelFetch(f16sampler2DMSArray sampler_,ivec3 P,int lod);\n"
"f16vec4 texelFetch(f16sampler2DMSArray sampler_,ivec3 P,int lod);\n"
"f16vec4 texelFetchOffset(f16sampler1D sampler_,int P,int lod,int offset);\n"
"f16vec4 texelFetchOffset(f16sampler1D sampler_,int P,int lod,int offset);\n"
"f16vec4 texelFetchOffset(f16sampler2D sampler_,ivec2 P,int lod,ivec2 offset);\n"
"f16vec4 texelFetchOffset(f16sampler2D sampler_,ivec2 P,int lod,ivec2 offset);\n"
"f16vec4 texelFetchOffset(f16sampler3D sampler_,ivec3 P,int lod,ivec3 offset);\n"
"f16vec4 texelFetchOffset(f16sampler3D sampler_,ivec3 P,int lod,ivec3 offset);\n"
"f16vec4 texelFetchOffset(f16sampler2DRect sampler_,ivec2 P,ivec2 offset);\n"
"f16vec4 texelFetchOffset(f16sampler2DRect sampler_,ivec2 P,ivec2 offset);\n"
"f16vec4 texelFetchOffset(f16sampler1DArray sampler_,ivec2 P,int lod,int offset);\n"
"f16vec4 texelFetchOffset(f16sampler1DArray sampler_,ivec2 P,int lod,int offset);\n"
"f16vec4 texelFetchOffset(f16sampler2DArray sampler_,ivec3 P,int lod,ivec2 offset);\n"
"f16vec4 texelFetchOffset(f16sampler2DArray sampler_,ivec3 P,int lod,ivec2 offset);\n"
"f16vec4 textureProjOffset(f16sampler1D sampler_,vec2 P,int offset);\n"
"f16vec4 textureProjOffset(f16sampler1D sampler_,f16vec2 P,int offset);\n"
"f16vec4 textureProjOffset(f16sampler1D sampler_,vec4 P,int offset);\n"
"f16vec4 textureProjOffset(f16sampler1D sampler_,f16vec4 P,int offset);\n"
"f16vec4 textureProjOffset(f16sampler2D sampler_,vec3 P,ivec2 offset);\n"
"f16vec4 textureProjOffset(f16sampler2D sampler_,f16vec3 P,ivec2 offset);\n"
"f16vec4 textureProjOffset(f16sampler2D sampler_,vec4 P,ivec2 offset);\n"
"f16vec4 textureProjOffset(f16sampler2D sampler_,f16vec4 P,ivec2 offset);\n"
"f16vec4 textureProjOffset(f16sampler3D sampler_,vec4 P,ivec3 offset);\n"
"f16vec4 textureProjOffset(f16sampler3D sampler_,f16vec4 P,ivec3 offset);\n"
"f16vec4 textureProjOffset(f16sampler2DRect sampler_,vec3 P,ivec2 offset);\n"
"f16vec4 textureProjOffset(f16sampler2DRect sampler_,f16vec3 P,ivec2 offset);\n"
"f16vec4 textureProjOffset(f16sampler2DRect sampler_,vec4 P,ivec2 offset);\n"
"f16vec4 textureProjOffset(f16sampler2DRect sampler_,f16vec4 P,ivec2 offset);\n"
"float16_t textureProjOffset(f16sampler1DShadow sampler_,vec4 P,int offset);\n"
"float16_t textureProjOffset(f16sampler1DShadow sampler_,f16vec3 P,float offset,int bias);\n"
"float16_t textureProjOffset(f16sampler2DShadow sampler_,vec4 P,ivec2 offset);\n"
"float16_t textureProjOffset(f16sampler2DShadow sampler_,f16vec3 P,float offset,ivec2 bias);\n"
"float16_t textureProjOffset(f16sampler2DRectShadow sampler_,vec4 P,ivec2 offset);\n"
"float16_t textureProjOffset(f16sampler2DRectShadow sampler_,f16vec3 P,float offset,ivec2 bias);\n"
"float16_t textureLodOffset(f16sampler1DArrayShadow sampler_,vec3 P,float lod,int offset);\n"
"f16vec4 textureLodOffset(f16sampler1D sampler_,float P,float lod,int offset);\n"
"f16vec4 textureLodOffset(f16sampler1D sampler_,float16_t P,float16_t lod,int offset);\n"
"f16vec4 textureLodOffset(f16sampler2D sampler_,vec2 P,float lod,ivec2 offset);\n"
"f16vec4 textureLodOffset(f16sampler2D sampler_,f16vec2 P,float16_t lod,ivec2 offset);\n"
"f16vec4 textureLodOffset(f16sampler3D sampler_,vec3 P,float lod,ivec3 offset);\n"
"f16vec4 textureLodOffset(f16sampler3D sampler_,f16vec3 P,float16_t lod,ivec3 offset);\n"
"f16vec4 textureLodOffset(f16sampler1DArray sampler_,vec2 P,float lod,int offset);\n"
"f16vec4 textureLodOffset(f16sampler1DArray sampler_,f16vec2 P,float16_t lod,int offset);\n"
"f16vec4 textureLodOffset(f16sampler2DArray sampler_,vec3 P,float lod,ivec2 offset);\n"
"f16vec4 textureLodOffset(f16sampler2DArray sampler_,f16vec3 P,float16_t lod,ivec2 offset);\n"
"float16_t textureLodOffset(f16sampler1DShadow sampler_,vec3 P,float lod,int offset);\n"
"float16_t textureLodOffset(f16sampler1DShadow sampler_,f16vec2 P,float lod,float16_t offset,int);\n"
"float16_t textureLodOffset(f16sampler2DShadow sampler_,vec3 P,float lod,ivec2 offset);\n"
"float16_t textureLodOffset(f16sampler2DShadow sampler_,f16vec2 P,float lod,float16_t offset,ivec2);\n"
"float16_t textureLodOffset(f16sampler1DArrayShadow sampler_,f16vec2 P,float lod,float16_t offset,int);\n"
"f16vec4 textureProjLod(f16sampler1D sampler_,vec2 P,float lod);\n"
"f16vec4 textureProjLod(f16sampler1D sampler_,f16vec2 P,float16_t lod);\n"
"f16vec4 textureProjLod(f16sampler1D sampler_,vec4 P,float lod);\n"
"f16vec4 textureProjLod(f16sampler1D sampler_,f16vec4 P,float16_t lod);\n"
"f16vec4 textureProjLod(f16sampler2D sampler_,vec3 P,float lod);\n"
"f16vec4 textureProjLod(f16sampler2D sampler_,f16vec3 P,float16_t lod);\n"
"f16vec4 textureProjLod(f16sampler2D sampler_,vec4 P,float lod);\n"
"f16vec4 textureProjLod(f16sampler2D sampler_,f16vec4 P,float16_t lod);\n"
"f16vec4 textureProjLod(f16sampler3D sampler_,vec4 P,float lod);\n"
"f16vec4 textureProjLod(f16sampler3D sampler_,f16vec4 P,float16_t lod);\n"
"float16_t textureProjLod(f16sampler1DShadow sampler_,vec4 P,float lod);\n"
"float16_t textureProjLod(f16sampler1DShadow sampler_,f16vec3 P,float lod,float16_t);\n"
"float16_t textureProjLod(f16sampler2DShadow sampler_,vec4 P,float lod);\n"
"float16_t textureProjLod(f16sampler2DShadow sampler_,f16vec3 P,float lod,float16_t);\n"
"f16vec4 textureProjLodOffset(f16sampler1D sampler_,vec2 P,float lod,int offset);\n"
"f16vec4 textureProjLodOffset(f16sampler1D sampler_,f16vec2 P,float16_t lod,int offset);\n"
"f16vec4 textureProjLodOffset(f16sampler1D sampler_,vec4 P,float lod,int offset);\n"
"f16vec4 textureProjLodOffset(f16sampler1D sampler_,f16vec4 P,float16_t lod,int offset);\n"
"f16vec4 textureProjLodOffset(f16sampler2D sampler_,vec3 P,float lod,ivec2 offset);\n"
"f16vec4 textureProjLodOffset(f16sampler2D sampler_,f16vec3 P,float16_t lod,ivec2 offset);\n"
"f16vec4 textureProjLodOffset(f16sampler2D sampler_,vec4 P,float lod,ivec2 offset);\n"
"f16vec4 textureProjLodOffset(f16sampler2D sampler_,f16vec4 P,float16_t lod,ivec2 offset);\n"
"f16vec4 textureProjLodOffset(f16sampler3D sampler_,vec4 P,float lod,ivec3 offset);\n"
"f16vec4 textureProjLodOffset(f16sampler3D sampler_,f16vec4 P,float16_t lod,ivec3 offset);\n"
"float16_t textureProjLodOffset(f16sampler1DShadow sampler_,vec4 P,float lod,int offset);\n"
"float16_t textureProjLodOffset(f16sampler1DShadow sampler_,f16vec3 P,float lod,float16_t offset,int);\n"
"float16_t textureProjLodOffset(f16sampler2DShadow sampler_,vec4 P,float lod,ivec2 offset);\n"
"float16_t textureProjLodOffset(f16sampler2DShadow sampler_,f16vec3 P,float lod,float16_t offset,ivec2);\n"
"f16vec4 textureGrad(f16sampler1D sampler_,float P,float dPdx,float dPdy);\n"
"f16vec4 textureGrad(f16sampler1D sampler_,float16_t P,float16_t dPdx,float16_t dPdy);\n"
"f16vec4 textureGrad(f16sampler2D sampler_,vec2 P,vec2 dPdx,vec2 dPdy);\n"
"f16vec4 textureGrad(f16sampler2D sampler_,f16vec2 P,f16vec2 dPdx,f16vec2 dPdy);\n"
"f16vec4 textureGrad(f16sampler3D sampler_,vec3 P,vec3 dPdx,vec3 dPdy);\n"
"f16vec4 textureGrad(f16sampler3D sampler_,f16vec3 P,f16vec3 dPdx,f16vec3 dPdy);\n"
"f16vec4 textureGrad(f16samplerCube sampler_,vec3 P,vec3 dPdx,vec3 dPdy);\n"
"f16vec4 textureGrad(f16samplerCube sampler_,f16vec3 P,f16vec3 dPdx,f16vec3 dPdy);\n"
"f16vec4 textureGrad(f16sampler2DRect sampler_,vec2 P,vec2 dPdx,vec2 dPdy);\n"
"f16vec4 textureGrad(f16sampler2DRect sampler_,f16vec2 P,f16vec2 dPdx,f16vec2 dPdy);\n"
"f16vec4 textureGrad(f16sampler1DArray sampler_,vec2 P,float dPdx,float dPdy);\n"
"f16vec4 textureGrad(f16sampler1DArray sampler_,f16vec2 P,float16_t dPdx,float16_t dPdy);\n"
"f16vec4 textureGrad(f16sampler2DArray sampler_,vec3 P,vec2 dPdx,vec2 dPdy);\n"
"f16vec4 textureGrad(f16sampler2DArray sampler_,f16vec3 P,f16vec2 dPdx,f16vec2 dPdy);\n"
"f16vec4 textureGrad(f16samplerCubeArray sampler_,vec4 P,vec3 dPdx,vec3 dPdy);\n"
"f16vec4 textureGrad(f16samplerCubeArray sampler_,f16vec4 P,f16vec3 dPdx,f16vec3 dPdy);\n"
"float16_t textureGrad(f16sampler1DShadow sampler_,vec3 P,float dPdx,float dPdy);\n"
"float16_t textureGrad(f16sampler2DShadow sampler_,vec3 P,vec2 dPdx,vec2 dPdy);\n"
"float16_t textureGrad(f16sampler1DShadow,f16vec2,float,float16_t,float16_t);\n"
"float16_t textureGrad(f16sampler2DShadow,f16vec2,float,f16vec2,f16vec2);\n"
"float16_t textureGrad(f16samplerCubeShadow,vec4,vec3,vec3);\n"
"float16_t textureGrad(f16samplerCubeShadow,f16vec3,float,f16vec3,f16vec3);\n"
"float16_t textureGrad(f16sampler2DRectShadow,vec3,vec2,vec2);\n"
"float16_t textureGrad(f16sampler2DRectShadow,f16vec2,float,f16vec2,f16vec2);\n"
"float16_t textureGrad(f16sampler1DArrayShadow,vec3,float,float);\n"
"float16_t textureGrad(f16sampler1DArrayShadow,f16vec2,float,float16_t,float16_t);\n"
"float16_t textureGrad(f16sampler2DArrayShadow,vec4,vec2,vec2);\n"
"float16_t textureGrad(f16sampler2DArrayShadow,f16vec3,float,f16vec2,f16vec2);\n"
"float16_t textureGrad(f16samplerCubeArrayShadow,vec4,float,vec3,vec3);\n"
"float16_t textureGrad(f16samplerCubeArrayShadow,f16vec4,float,f16vec3,f16vec3);\n"
"f16vec4 textureGradOffset(f16sampler1D,float,float,float,int);\n"
"f16vec4 textureGradOffset(f16sampler1D,float16_t,float16_t,float16_t,int);\n"
"f16vec4 textureGradOffset(f16sampler2D,vec2,vec2,vec2,ivec2);\n"
"f16vec4 textureGradOffset(f16sampler2D,f16vec2,f16vec2,f16vec2,ivec2);\n"
"f16vec4 textureGradOffset(f16sampler3D,vec3,vec3,vec3,ivec3);\n"
"f16vec4 textureGradOffset(f16sampler3D,f16vec3,f16vec3,f16vec3,ivec3);\n"
"f16vec4 textureGradOffset(f16sampler2DRect,vec2,vec2,vec2,ivec2);\n"
"f16vec4 textureGradOffset(f16sampler2DRect,f16vec2,f16vec2,f16vec2,ivec2);\n"
"f16vec4 textureGradOffset(f16sampler1DArray,vec2,float,float,int);\n"
"f16vec4 textureGradOffset(f16sampler1DArray,f16vec2,float16_t,float16_t,int);\n"
"f16vec4 textureGradOffset(f16sampler2DArray,vec3,vec2,vec2,ivec2);\n"
"f16vec4 textureGradOffset(f16sampler2DArray,f16vec3,f16vec2,f16vec2,ivec2);\n"
"float16_t textureGradOffset(f16sampler1DShadow,vec3,float,float,int);\n"
"float16_t textureGradOffset(f16sampler1DShadow,f16vec2,float,float16_t,float16_t,int);\n"
"float16_t textureGradOffset(f16sampler2DShadow,vec3,vec2,vec2,ivec2);\n"
"float16_t textureGradOffset(f16sampler2DShadow,f16vec2,float,f16vec2,f16vec2,ivec2);\n"
"float16_t textureGradOffset(f16sampler2DRectShadow,vec3,vec2,vec2,ivec2);\n"
"float16_t textureGradOffset(f16sampler2DRectShadow,f16vec2,float,f16vec2,f16vec2,ivec2);\n"
"float16_t textureGradOffset(f16sampler1DArrayShadow,vec3,float,float,int);\n"
"float16_t textureGradOffset(f16sampler1DArrayShadow,f16vec2,float,float16_t,float16_t,int);\n"
"float16_t textureGradOffset(f16sampler2DArrayShadow,vec4,vec2,vec2,ivec2);\n"
"float16_t textureGradOffset(f16sampler2DArrayShadow,f16vec3,float,f16vec2,f16vec2,ivec2);\n"
"f16vec4 textureProjGrad(f16sampler1D,vec2,float,float);\n"
"f16vec4 textureProjGrad(f16sampler1D,f16vec2,float16_t,float16_t);\n"
"f16vec4 textureProjGrad(f16sampler1D,vec4,float,float);\n"
"f16vec4 textureProjGrad(f16sampler1D,f16vec4,float16_t,float16_t);\n"
"f16vec4 textureProjGrad(f16sampler2D,vec3,vec2,vec2);\n"
"f16vec4 textureProjGrad(f16sampler2D,f16vec3,f16vec2,f16vec2);\n"
"f16vec4 textureProjGrad(f16sampler2D,vec4,vec2,vec2);\n"
"f16vec4 textureProjGrad(f16sampler2D,f16vec4,f16vec2,f16vec2);\n"
"f16vec4 textureProjGrad(f16sampler3D,vec4,vec3,vec3);\n"
"f16vec4 textureProjGrad(f16sampler3D,f16vec4,f16vec3,f16vec3);\n"
"f16vec4 textureProjGrad(f16sampler2DRect,vec3,vec2,vec2);\n"
"f16vec4 textureProjGrad(f16sampler2DRect,f16vec3,f16vec2,f16vec2);\n"
"f16vec4 textureProjGrad(f16sampler2DRect,vec4,vec2,vec2);\n"
"f16vec4 textureProjGrad(f16sampler2DRect,f16vec4,f16vec2,f16vec2);\n"
"float16_t textureProjGrad(f16sampler1DShadow,vec4,float,float);\n"
"float16_t textureProjGrad(f16sampler1DShadow,f16vec3,float,float16_t,float16_t);\n"
"float16_t textureProjGrad(f16sampler2DShadow,vec4,vec2,vec2);\n"
"float16_t textureProjGrad(f16sampler2DShadow,f16vec3,float,f16vec2,f16vec2);\n"
"float16_t textureProjGrad(f16sampler2DRectShadow,vec4,vec2,vec2);\n"
"float16_t textureProjGrad(f16sampler2DRectShadow,f16vec3,float,f16vec2,f16vec2);\n"
"f16vec4 textureProjGradOffset(f16sampler1D,vec2,float,float,int);\n"
"f16vec4 textureProjGradOffset(f16sampler1D,f16vec2,float16_t,float16_t,int);\n"
"f16vec4 textureProjGradOffset(f16sampler1D,vec4,float,float,int);\n"
"f16vec4 textureProjGradOffset(f16sampler1D,f16vec4,float16_t,float16_t,int);\n"
"f16vec4 textureProjGradOffset(f16sampler2D,vec3,vec2,vec2,ivec2);\n"
"f16vec4 textureProjGradOffset(f16sampler2D,f16vec3,f16vec2,f16vec2,ivec2);\n"
"f16vec4 textureProjGradOffset(f16sampler2D,vec4,vec2,vec2,ivec2);\n"
"f16vec4 textureProjGradOffset(f16sampler2D,f16vec4,f16vec2,f16vec2,ivec2);\n"
"f16vec4 textureProjGradOffset(f16sampler3D,vec4,vec3,vec3,ivec3);\n"
"f16vec4 textureProjGradOffset(f16sampler3D,f16vec4,f16vec3,f16vec3,ivec3);\n"
"f16vec4 textureProjGradOffset(f16sampler2DRect,vec3,vec2,vec2,ivec2);\n"
"f16vec4 textureProjGradOffset(f16sampler2DRect,f16vec3,f16vec2,f16vec2,ivec2);\n"
"f16vec4 textureProjGradOffset(f16sampler2DRect,vec4,vec2,vec2,ivec2);\n"
"f16vec4 textureProjGradOffset(f16sampler2DRect,f16vec4,f16vec2,f16vec2,ivec2);\n"
"float16_t textureProjGradOffset(f16sampler1DShadow,vec4,float,float,int);\n"
"float16_t textureProjGradOffset(f16sampler1DShadow,f16vec3,float,float16_t,float16_t,int);\n"
"float16_t textureProjGradOffset(f16sampler2DShadow,vec4,vec2,vec2,ivec2);\n"
"float16_t textureProjGradOffset(f16sampler2DShadow,f16vec3,float,f16vec2,f16vec2,ivec2);\n"
"float16_t textureProjGradOffset(f16sampler2DRectShadow,vec4,vec2,vec2,ivec2);\n"
"float16_t textureProjGradOffset(f16sampler2DRectShadow,f16vec3,float,f16vec2,f16vec2,ivec2);\n"
"\n"
"__glsld_syscmd_end_context__;\n"
"int textureSize(isampler1D sampler_,int lod);\n"
"int textureSize(sampler1D sampler_,int lod);\n"
"int textureSize(usampler1D sampler_,int lod);\n"
"ivec2 textureSize(sampler2D sampler_,int lod);\n"
"ivec2 textureSize(isampler2D sampler_,int lod);\n"
"ivec2 textureSize(usampler2D sampler_,int lod);\n"
"ivec3 textureSize(sampler3D sampler_,int lod);\n"
"ivec3 textureSize(isampler3D sampler_,int lod);\n"
"ivec3 textureSize(usampler3D sampler_,int lod);\n"
"ivec2 textureSize(samplerCube sampler_,int lod);\n"
"ivec2 textureSize(isamplerCube sampler_,int lod);\n"
"ivec2 textureSize(usamplerCube sampler_,int lod);\n"
"ivec2 textureSize(sampler2DRect sampler_);\n"
"ivec2 textureSize(isampler2DRect sampler_);\n"
"ivec2 textureSize(usampler2DRect sampler_);\n"
"int textureSize(samplerBuffer sampler_);\n"
"int textureSize(isamplerBuffer sampler_);\n"
"int textureSize(usamplerBuffer sampler_);\n"
"ivec2 textureSize(sampler1DArray sampler_,int lod);\n"
"ivec2 textureSize(isampler1DArray sampler_,int lod);\n"
"ivec2 textureSize(usampler1DArray sampler_,int lod);\n"
"ivec3 textureSize(sampler2DArray sampler_,int lod);\n"
"ivec3 textureSize(isampler2DArray sampler_,int lod);\n"
"ivec3 textureSize(usampler2DArray sampler_,int lod);\n"
"ivec3 textureSize(samplerCubeArray sampler_,int lod);\n"
"ivec3 textureSize(isamplerCubeArray sampler_,int lod);\n"
"ivec3 textureSize(usamplerCubeArray sampler_,int lod);\n"
"ivec2 textureSize(sampler2DMS sampler_);\n"
"ivec2 textureSize(isampler2DMS sampler_);\n"
"ivec2 textureSize(usampler2DMS sampler_);\n"
"ivec3 textureSize(sampler2DMSArray sampler_);\n"
"ivec3 textureSize(isampler2DMSArray sampler_);\n"
"ivec3 textureSize(usampler2DMSArray sampler_);\n"
"int textureSize(sampler1DShadow sampler_,int lod);\n"
"ivec2 textureSize(sampler2DShadow sampler_,int lod);\n"
"ivec2 textureSize(samplerCubeShadow sampler_,int lod);\n"
"ivec2 textureSize(sampler2DRectShadow sampler_); lod\n"
"ivec2 textureSize(sampler1DArrayShadow sampler_,int lod);\n"
"ivec3 textureSize(sampler2DArrayShadow sampler_,int lod);\n"
"ivec3 textureSize(samplerCubeArrayShadow sampler_,int lod);\n"
"vec2 textureQueryLod(sampler1D sampler_, float P);\n"
"vec2 textureQueryLod(isampler1D sampler_, float P);\n"
"vec2 textureQueryLod(usampler1D sampler_, float P);\n"
"vec2 textureQueryLod(sampler2D sampler_, vec2 P);\n"
"vec2 textureQueryLod(isampler2D sampler_, vec2 P);\n"
"vec2 textureQueryLod(usampler2D sampler_, vec2 P);\n"
"vec2 textureQueryLod(sampler3D sampler_, vec3 P);\n"
"vec2 textureQueryLod(isampler3D sampler_, vec3 P);\n"
"vec2 textureQueryLod(usampler3D sampler_, vec3 P);\n"
"vec2 textureQueryLod(samplerCube sampler_, vec3 P);\n"
"vec2 textureQueryLod(isamplerCube sampler_, vec3 P);\n"
"vec2 textureQueryLod(usamplerCube sampler_, vec3 P);\n"
"vec2 textureQueryLod(sampler1DArray sampler_, float P);\n"
"vec2 textureQueryLod(isampler1DArray sampler_, float P);\n"
"vec2 textureQueryLod(usampler1DArray sampler_, float P);\n"
"vec2 textureQueryLod(sampler2DArray sampler_, vec2 P);\n"
"vec2 textureQueryLod(isampler2DArray sampler_, vec2 P);\n"
"vec2 textureQueryLod(usampler2DArray sampler_, vec2 P);\n"
"vec2 textureQueryLod(samplerCubeArray sampler_, vec3 P);\n"
"vec2 textureQueryLod(isamplerCubeArray sampler_, vec3 P);\n"
"vec2 textureQueryLod(usamplerCubeArray sampler_, vec3 P);\n"
"vec2 textureQueryLod(sampler1DShadow sampler_, float P);\n"
"vec2 textureQueryLod(sampler2DShadow sampler_, vec2 P);\n"
"vec2 textureQueryLod(samplerCubeShadow sampler_, vec3 P);\n"
"vec2 textureQueryLod(sampler1DArrayShadow sampler_, float P);\n"
"vec2 textureQueryLod(sampler2DArrayShadow sampler_, vec2 P);\n"
"vec2 textureQueryLod(samplerCubeArrayShadow sampler_, vec3 P);\n"
"int textureQueryLevels(isampler1D sampler_);\n"
"int textureQueryLevels(sampler1D sampler_);\n"
"int textureQueryLevels(usampler1D sampler_);\n"
"int textureQueryLevels(sampler2D sampler_);\n"
"int textureQueryLevels(isampler2D sampler_);\n"
"int textureQueryLevels(usampler2D sampler_);\n"
"int textureQueryLevels(sampler3D sampler_);\n"
"int textureQueryLevels(isampler3D sampler_);\n"
"int textureQueryLevels(usampler3D sampler_);\n"
"int textureQueryLevels(samplerCube sampler_);\n"
"int textureQueryLevels(isamplerCube sampler_);\n"
"int textureQueryLevels(usamplerCube sampler_);\n"
"int textureQueryLevels(usampler1DArray sampler_);\n"
"int textureQueryLevels(sampler2DArray sampler_);\n"
"int textureQueryLevels(isampler2DArray sampler_);\n"
"int textureQueryLevels(usampler2DArray sampler_);\n"
"int textureQueryLevels(samplerCubeArray sampler_);\n"
"int textureQueryLevels(isamplerCubeArray sampler_);\n"
"int textureQueryLevels(usamplerCubeArray sampler_);\n"
"int textureQueryLevels(sampler2DShadow sampler_);\n"
"int textureQueryLevels(samplerCubeShadow sampler_);\n"
"int textureQueryLevels(sampler2DArrayShadow sampler_);\n"
"int textureQueryLevels(samplerCubeArrayShadow sampler_);\n"
"int textureQueryLevels(sampler1DArray sampler_);\n"
"int textureQueryLevels(isampler1DArray sampler_);\n"
"int textureQueryLevels(sampler1DShadow sampler_);\n"
"int textureQueryLevels(sampler1DArrayShadow sampler_);\n"
"int textureSamples(sampler2DMS sampler_);\n"
"int textureSamples(isampler2DMS sampler_);\n"
"int textureSamples(usampler2DMS sampler_);\n"
"int textureSamples(sampler2DMSArray sampler_);\n"
"int textureSamples(isampler2DMSArray sampler_);\n"
"int textureSamples(usampler2DMSArray sampler_);\n"
"\n"
"// GL_ARB_texture_query_lod\n"
"// vec2 textureQueryLOD(sampler1D sampler_, float P);\n"
"// vec2 textureQueryLOD(isampler1D sampler_, float P);\n"
"// vec2 textureQueryLOD(usampler1D sampler_, float P);\n"
"// vec2 textureQueryLOD(sampler2D sampler_, vec2 P);\n"
"// vec2 textureQueryLOD(isampler2D sampler_, vec2 P);\n"
"// vec2 textureQueryLOD(usampler2D sampler_, vec2 P);\n"
"// vec2 textureQueryLOD(sampler3D sampler_, vec3 P);\n"
"// vec2 textureQueryLOD(isampler3D sampler_, vec3 P);\n"
"// vec2 textureQueryLOD(usampler3D sampler_, vec3 P);\n"
"// vec2 textureQueryLOD(samplerCube sampler_, vec3 P);\n"
"// vec2 textureQueryLOD(isamplerCube sampler_, vec3 P);\n"
"// vec2 textureQueryLOD(usamplerCube sampler_, vec3 P);\n"
"// vec2 textureQueryLOD(sampler1DArray sampler_, float P);\n"
"// vec2 textureQueryLOD(isampler1DArray sampler_, float P);\n"
"// vec2 textureQueryLOD(usampler1DArray sampler_, float P);\n"
"// vec2 textureQueryLOD(sampler2DArray sampler_, vec2 P);\n"
"// vec2 textureQueryLOD(isampler2DArray sampler_, vec2 P);\n"
"// vec2 textureQueryLOD(usampler2DArray sampler_, vec2 P);\n"
"// vec2 textureQueryLOD(samplerCubeArray sampler_, vec3 P);\n"
"// vec2 textureQueryLOD(isamplerCubeArray sampler_, vec3 P);\n"
"// vec2 textureQueryLOD(usamplerCubeArray sampler_, vec3 P);\n"
"// vec2 textureQueryLOD(sampler1DShadow sampler_, float P);\n"
"// vec2 textureQueryLOD(sampler2DShadow sampler_, vec2 P);\n"
"// vec2 textureQueryLOD(samplerCubeShadow sampler_, vec3 P);\n"
"// vec2 textureQueryLOD(sampler1DArrayShadow sampler_, float P);\n"
"// vec2 textureQueryLOD(sampler2DArrayShadow sampler_, vec2 P);\n"
"// vec2 textureQueryLOD(samplerCubeArrayShadow sampler_, vec3 P);\n"
"\n"
"__glsld_syscmd_begin_context__;\n"
"__glsld_syscmd_require_extension__ GL_EXT_shader_explicit_arithmetic_types_float16;\n"
"\n"
"int textureSize(f16sampler1D sampler_,int lod);\n"
"ivec2 textureSize(f16sampler2D sampler_,int lod);\n"
"ivec3 textureSize(f16sampler3D sampler_,int lod);\n"
"ivec2 textureSize(f16samplerCube sampler_,int lod);\n"
"ivec2 textureSize(f16sampler2DRect sampler_);\n"
"int textureSize(f16samplerBuffer sampler_);\n"
"ivec2 textureSize(f16sampler1DArray sampler_,int lod);\n"
"ivec3 textureSize(f16sampler2DArray sampler_,int lod);\n"
"ivec3 textureSize(f16samplerCubeArray sampler_,int lod);\n"
"ivec2 textureSize(f16sampler2DMS sampler_);\n"
"ivec3 textureSize(f16sampler2DMSArray sampler_);\n"
"int textureSize(f16sampler1DShadow sampler_,int lod);\n"
"ivec2 textureSize(f16sampler2DShadow sampler_,int lod);\n"
"ivec2 textureSize(f16samplerCubeShadow sampler_,int lod);\n"
"ivec2 textureSize(f16sampler2DRectShadow sampler_); lod\n"
"ivec2 textureSize(f16sampler1DArrayShadow sampler_,int lod);\n"
"ivec3 textureSize(f16sampler2DArrayShadow sampler_,int lod);\n"
"ivec3 textureSize(f16samplerCubeArrayShadow sampler_,int lod);\n"
"vec2 textureQueryLod(f16sampler1D sampler_, float P);\n"
"vec2 textureQueryLod(f16sampler2D sampler_, vec2 P);\n"
"vec2 textureQueryLod(f16sampler3D sampler_, vec3 P);\n"
"vec2 textureQueryLod(f16samplerCube sampler_, vec3 P);\n"
"vec2 textureQueryLod(f16sampler1DArray sampler_, float P);\n"
"vec2 textureQueryLod(f16sampler2DArray sampler_, vec2 P);\n"
"vec2 textureQueryLod(f16samplerCubeArray sampler_, vec3 P);\n"
"vec2 textureQueryLod(f16sampler1DShadow sampler_, float P);\n"
"vec2 textureQueryLod(f16sampler2DShadow sampler_, vec2 P);\n"
"vec2 textureQueryLod(f16samplerCubeShadow sampler_, vec3 P);\n"
"vec2 textureQueryLod(f16sampler1DArrayShadow sampler_, float P);\n"
"vec2 textureQueryLod(f16sampler2DArrayShadow sampler_, vec2 P);\n"
"vec2 textureQueryLod(f16samplerCubeArrayShadow sampler_, vec3 P);\n"
"int textureQueryLevels(f16sampler1D sampler_);\n"
"int textureQueryLevels(f16sampler2D sampler_);\n"
"int textureQueryLevels(f16sampler3D sampler_);\n"
"int textureQueryLevels(f16samplerCube sampler_);\n"
"int textureQueryLevels(f16sampler2DArray sampler_);\n"
"int textureQueryLevels(f16samplerCubeArray sampler_);\n"
"int textureQueryLevels(f16sampler1DShadow sampler_);\n"
"int textureQueryLevels(f16sampler2DShadow sampler_);\n"
"int textureQueryLevels(f16sampler1DArrayShadow sampler_);\n"
"int textureQueryLevels(f16sampler2DArrayShadow sampler_);\n"
"int textureQueryLevels(f16samplerCubeArrayShadow sampler_);\n"
"int textureQueryLevels(f16sampler1DArray sampler_);\n"
"int textureQueryLevels(f16samplerCubeShadow sampler_);\n"
"int textureSamples(f16sampler2DMS sampler_);\n"
"int textureSamples(f16sampler2DMSArray sampler_);\n"
"\n"
"// GL_ARB_texture_query_lod\n"
"// vec2 textureQueryLOD(f16sampler1D sampler_, float P);\n"
"// vec2 textureQueryLOD(f16sampler2D sampler_, vec2 P);\n"
"// vec2 textureQueryLOD(f16sampler3D sampler_, vec3 P);\n"
"// vec2 textureQueryLOD(f16samplerCube sampler_, vec3 P);\n"
"// vec2 textureQueryLOD(f16sampler1DArray sampler_, float P);\n"
"// vec2 textureQueryLOD(f16sampler2DArray sampler_, vec2 P);\n"
"// vec2 textureQueryLOD(f16samplerCubeArray sampler_, vec3 P);\n"
"// vec2 textureQueryLOD(f16sampler1DShadow sampler_, float P);\n"
"// vec2 textureQueryLOD(f16sampler2DShadow sampler_, vec2 P);\n"
"// vec2 textureQueryLOD(f16samplerCubeShadow sampler_, vec3 P);\n"
"// vec2 textureQueryLOD(f16sampler1DArrayShadow sampler_, float P);\n"
"// vec2 textureQueryLOD(f16sampler2DArrayShadow sampler_, vec2 P);\n"
"// vec2 textureQueryLOD(f16samplerCubeArrayShadow sampler_, vec3 P);\n"
"\n"
"__glsld_syscmd_end_context__;"
"float radians(float degrees);\n"
"vec2 radians(vec2 degrees);\n"
"vec3 radians(vec3 degrees);\n"
"vec4 radians(vec4 degrees);\n"
"float degrees(float radians);\n"
"vec2 degrees(vec2 radians);\n"
"vec3 degrees(vec3 radians);\n"
"vec4 degrees(vec4 radians);\n"
"float sin(float angle);\n"
"vec2 sin(vec2 angle);\n"
"vec3 sin(vec3 angle);\n"
"vec4 sin(vec4 angle);\n"
"float cos(float angle);\n"
"vec2 cos(vec2 angle);\n"
"vec3 cos(vec3 angle);\n"
"vec4 cos(vec4 angle);\n"
"float tan(float angle);\n"
"vec2 tan(vec2 angle);\n"
"vec3 tan(vec3 angle);\n"
"vec4 tan(vec4 angle);\n"
"float asin(float angle);\n"
"vec2 asin(vec2 x);\n"
"vec3 asin(vec3 x);\n"
"vec4 asin(vec4 x);\n"
"float acos(float x);\n"
"vec2 acos(vec2 x);\n"
"vec3 acos(vec3 x);\n"
"vec4 acos(vec4 x);\n"
"float atan(float y,float x);\n"
"vec2 atan(vec2 y,vec2 x);\n"
"vec3 atan(vec3 y,vec3 x);\n"
"vec4 atan(vec4 y,vec4 x);\n"
"float atan(float y_over_x);\n"
"vec2 atan(vec2 y_over_x);\n"
"vec3 atan(vec3 y_over_x);\n"
"vec4 atan(vec4 y_over_x);\n"
"float sinh(float x);\n"
"vec2 sinh(vec2 x);\n"
"vec3 sinh(vec3 x);\n"
"vec4 sinh(vec4 x);\n"
"float cosh(float x);\n"
"vec2 cosh(vec2 x);\n"
"vec3 cosh(vec3 x);\n"
"vec4 cosh(vec4 x);\n"
"float tanh(float x);\n"
"vec2 tanh(vec2 x);\n"
"vec3 tanh(vec3 x);\n"
"vec4 tanh(vec4 x);\n"
"float asinh(float x);\n"
"vec2 asinh(vec2 x);\n"
"vec3 asinh(vec3 x);\n"
"vec4 asinh(vec4 x);\n"
"float acosh(float x);\n"
"vec2 acosh(vec2 x);\n"
"vec3 acosh(vec3 x);\n"
"vec4 acosh(vec4 x);\n"
"float atanh(float x);\n"
"vec2 atanh(vec2 x);\n"
"vec3 atanh(vec3 x);\n"
"vec4 atanh(vec4 x);\n"
"\n"
"__glsld_syscmd_begin_context__;\n"
"__glsld_syscmd_require_extension__ GL_EXT_shader_explicit_arithmetic_types_float16;\n"
"\n"
"float16_t radians(float16_t x);\n"
"f16vec2   radians(f16vec2 x);\n"
"f16vec3   radians(f16vec3 x);\n"
"f16vec4   radians(f16vec4 x);\n"
"float16_t degrees(float16_t x);\n"
"f16vec2   degrees(f16vec2 x);\n"
"f16vec3   degrees(f16vec3 x);\n"
"f16vec4   degrees(f16vec4 x);\n"
"float16_t sin(float16_t x);\n"
"f16vec2   sin(f16vec2 x);\n"
"f16vec3   sin(f16vec3 x);\n"
"f16vec4   sin(f16vec4 x);\n"
"float16_t cos(float16_t x);\n"
"f16vec2   cos(f16vec2 x);\n"
"f16vec3   cos(f16vec3 x);\n"
"f16vec4   cos(f16vec4 x);\n"
"float16_t tan(float16_t x);\n"
"f16vec2   tan(f16vec2 x);\n"
"f16vec3   tan(f16vec3 x);\n"
"f16vec4   tan(f16vec4 x);\n"
"float16_t asin(float16_t x);\n"
"f16vec2   asin(f16vec2 x);\n"
"f16vec3   asin(f16vec3 x);\n"
"f16vec4   asin(f16vec4 x);\n"
"float16_t acos(float16_t x);\n"
"f16vec2   acos(f16vec2 x);\n"
"f16vec3   acos(f16vec3 x);\n"
"f16vec4   acos(f16vec4 x);\n"
"float16_t atan(float16_t y, float16_t x);\n"
"f16vec2   atan(f16vec2 y,   f16vec2 x);\n"
"f16vec3   atan(f16vec3 y,   f16vec3 x);\n"
"f16vec4   atan(f16vec4 y,   f16vec4 x);\n"
"float16_t atan(float16_t y_over_x);\n"
"f16vec2   atan(f16vec2 y_over_x);\n"
"f16vec3   atan(f16vec3 y_over_x);\n"
"f16vec4   atan(f16vec4 y_over_x);\n"
"float16_t sinh(float16_t x);\n"
"f16vec2   sinh(f16vec2 x);\n"
"f16vec3   sinh(f16vec3 x);\n"
"f16vec4   sinh(f16vec4 x);\n"
"float16_t cosh(float16_t x);\n"
"f16vec2   cosh(f16vec2 x);\n"
"f16vec3   cosh(f16vec3 x);\n"
"f16vec4   cosh(f16vec4 x);\n"
"float16_t tanh(float16_t x);\n"
"f16vec2   tanh(f16vec2 x);\n"
"f16vec3   tanh(f16vec3 x);\n"
"f16vec4   tanh(f16vec4 x);\n"
"float16_t asinh(float16_t x);\n"
"f16vec2   asinh(f16vec2 x);\n"
"f16vec3   asinh(f16vec3 x);\n"
"f16vec4   asinh(f16vec4 x);\n"
"float16_t acosh(float16_t x);\n"
"f16vec2   acosh(f16vec2 x);\n"
"f16vec3   acosh(f16vec3 x);\n"
"f16vec4   acosh(f16vec4 x);\n"
"float16_t atanh(float16_t x);\n"
"f16vec2   atanh(f16vec2 x);\n"
"f16vec3   atanh(f16vec3 x);\n"
"f16vec4   atanh(f16vec4 x);\n"
"\n"
"__glsld_syscmd_end_context__;\n"
"bvec2 lessThan(vec2 x,vec2 y);\n"
"bvec3 lessThan(vec3 x,vec3 y);\n"
"bvec4 lessThan(vec4 x,vec4 y);\n"
"bvec2 lessThan(ivec2 x,ivec2 y);\n"
"bvec3 lessThan(ivec3 x,ivec3 y);\n"
"bvec4 lessThan(ivec4 x,ivec4 y);\n"
"bvec2 lessThan(uvec2 x,uvec2 y);\n"
"bvec3 lessThan(uvec3 x,uvec3 y);\n"
"bvec4 lessThan(uvec4 x,uvec4 y);\n"
"bvec2 lessThan(dvec2 x, dvec2 y);\n"
"bvec3 lessThan(dvec3 x, dvec3 y);\n"
"bvec4 lessThan(dvec4 x, dvec4 y);\n"
"bvec2 lessThanEqual(vec2 x,vec2 y);\n"
"bvec3 lessThanEqual(vec3 x,vec3 y);\n"
"bvec4 lessThanEqual(vec4 x,vec4 y);\n"
"bvec2 lessThanEqual(ivec2 x,ivec2 y);\n"
"bvec3 lessThanEqual(ivec3 x,ivec3 y);\n"
"bvec4 lessThanEqual(ivec4 x,ivec4 y);\n"
"bvec2 lessThanEqual(uvec2 x,uvec2 y);\n"
"bvec3 lessThanEqual(uvec3 x,uvec3 y);\n"
"bvec4 lessThanEqual(uvec4 x,uvec4 y);\n"
"bvec2 lessThanEqual(dvec2 x, dvec2 y);\n"
"bvec3 lessThanEqual(dvec3 x, dvec3 y);\n"
"bvec4 lessThanEqual(dvec4 x, dvec4 y);\n"
"bvec2 greaterThan(vec2 x,vec2 y);\n"
"bvec3 greaterThan(vec3 x,vec3 y);\n"
"bvec4 greaterThan(vec4 x,vec4 y);\n"
"bvec2 greaterThan(ivec2 x,ivec2 y);\n"
"bvec3 greaterThan(ivec3 x,ivec3 y);\n"
"bvec4 greaterThan(ivec4 x,ivec4 y);\n"
"bvec2 greaterThan(uvec2 x,uvec2 y);\n"
"bvec3 greaterThan(uvec3 x,uvec3 y);\n"
"bvec4 greaterThan(uvec4 x,uvec4 y);\n"
"bvec2 greaterThan(dvec2 x, dvec2 y);\n"
"bvec3 greaterThan(dvec3 x, dvec3 y);\n"
"bvec4 greaterThan(dvec4 x, dvec4 y);\n"
"bvec2 greaterThanEqual(vec2 x,vec2 y);\n"
"bvec3 greaterThanEqual(vec3 x,vec3 y);\n"
"bvec4 greaterThanEqual(vec4 x,vec4 y);\n"
"bvec2 greaterThanEqual(ivec2 x,ivec2 y);\n"
"bvec3 greaterThanEqual(ivec3 x,ivec3 y);\n"
"bvec4 greaterThanEqual(ivec4 x,ivec4 y);\n"
"bvec2 greaterThanEqual(uvec2 x,uvec2 y);\n"
"bvec3 greaterThanEqual(uvec3 x,uvec3 y);\n"
"bvec4 greaterThanEqual(uvec4 x,uvec4 y);\n"
"bvec2 greaterThanEqual(dvec2 x, dvec2 y);\n"
"bvec3 greaterThanEqual(dvec3 x, dvec3 y);\n"
"bvec4 greaterThanEqual(dvec4 x, dvec4 y);\n"
"bvec2 equal(bvec2 x,bvec2 y);\n"
"bvec3 equal(bvec3 x,bvec3 y);\n"
"bvec4 equal(bvec4 x,bvec4 y);\n"
"bvec2 equal(vec2 x,vec2 y);\n"
"bvec3 equal(vec3 x,vec3 y);\n"
"bvec4 equal(vec4 x,vec4 y);\n"
"bvec2 equal(ivec2 x,ivec2 y);\n"
"bvec3 equal(ivec3 x,ivec3 y);\n"
"bvec4 equal(ivec4 x,ivec4 y);\n"
"bvec2 equal(uvec2 x,uvec2 y);\n"
"bvec3 equal(uvec3 x,uvec3 y);\n"
"bvec4 equal(uvec4 x,uvec4 y);\n"
"bvec2 equal(dvec2 x, dvec2 y);\n"
"bvec3 equal(dvec3 x, dvec3 y);\n"
"bvec4 equal(dvec4 x, dvec4 y);\n"
"bvec2 notEqual(bvec2 x,bvec2 y);\n"
"bvec3 notEqual(bvec3 x,bvec3 y);\n"
"bvec4 notEqual(bvec4 x,bvec4 y);\n"
"bvec2 notEqual(vec2 x,vec2 y);\n"
"bvec3 notEqual(vec3 x,vec3 y);\n"
"bvec4 notEqual(vec4 x,vec4 y);\n"
"bvec2 notEqual(ivec2 x,ivec2 y);\n"
"bvec3 notEqual(ivec3 x,ivec3 y);\n"
"bvec4 notEqual(ivec4 x,ivec4 y);\n"
"bvec2 notEqual(uvec2 x,uvec2 y);\n"
"bvec3 notEqual(uvec3 x,uvec3 y);\n"
"bvec4 notEqual(uvec4 x,uvec4 y);\n"
"bvec2 notEqual(dvec2 x, dvec2 y);\n"
"bvec3 notEqual(dvec3 x, dvec3 y);\n"
"bvec4 notEqual(dvec4 x, dvec4 y);\n"
"bool any(bvec2 x);\n"
"bool any(bvec3 x);\n"
"bool any(bvec4 x);\n"
"bool all(bvec2 x);\n"
"bool all(bvec3 x);\n"
"bool all(bvec4 x);\n"
"bvec2 not(bvec2 x);\n"
"bvec3 not(bvec3 x);\n"
"bvec4 not(bvec4 x);\n"
"\n"
"__glsld_syscmd_begin_context__;\n"
"__glsld_syscmd_require_extension__ GL_EXT_shader_explicit_arithmetic_types_int64;\n"
"\n"
"bvec2 lessThan(i64vec2 x, i64vec2 y);\n"
"bvec3 lessThan(i64vec3 x, i64vec3 y);\n"
"bvec4 lessThan(i64vec4 x, i64vec4 y);\n"
"bvec2 lessThanEqual(i64vec2 x, i64vec2 y);\n"
"bvec3 lessThanEqual(i64vec3 x, i64vec3 y);\n"
"bvec4 lessThanEqual(i64vec4 x, i64vec4 y);\n"
"bvec2 greaterThan(i64vec2 x, i64vec2 y);\n"
"bvec3 greaterThan(i64vec3 x, i64vec3 y);\n"
"bvec4 greaterThan(i64vec4 x, i64vec4 y);\n"
"bvec2 greaterThanEqual(i64vec2 x, i64vec2 y);\n"
"bvec3 greaterThanEqual(i64vec3 x, i64vec3 y);\n"
"bvec4 greaterThanEqual(i64vec4 x, i64vec4 y);\n"
"bvec2 equal(i64vec2 x, i64vec2 y);\n"
"bvec3 equal(i64vec3 x, i64vec3 y);\n"
"bvec4 equal(i64vec4 x, i64vec4 y);\n"
"bvec2 notEqual(i64vec2 x, i64vec2 y);\n"
"bvec3 notEqual(i64vec3 x, i64vec3 y);\n"
"bvec4 notEqual(i64vec4 x, i64vec4 y);\n"
"\n"
"bvec2 lessThan(u64vec2 x, u64vec2 y);\n"
"bvec3 lessThan(u64vec3 x, u64vec3 y);\n"
"bvec4 lessThan(u64vec4 x, u64vec4 y);\n"
"bvec2 lessThanEqual(u64vec2 x, u64vec2 y);\n"
"bvec3 lessThanEqual(u64vec3 x, u64vec3 y);\n"
"bvec4 lessThanEqual(u64vec4 x, u64vec4 y);\n"
"bvec2 greaterThan(u64vec2 x, u64vec2 y);\n"
"bvec3 greaterThan(u64vec3 x, u64vec3 y);\n"
"bvec4 greaterThan(u64vec4 x, u64vec4 y);\n"
"bvec2 greaterThanEqual(u64vec2 x, u64vec2 y);\n"
"bvec3 greaterThanEqual(u64vec3 x, u64vec3 y);\n"
"bvec4 greaterThanEqual(u64vec4 x, u64vec4 y);\n"
"bvec2 equal(u64vec2 x, u64vec2 y);\n"
"bvec3 equal(u64vec3 x, u64vec3 y);\n"
"bvec4 equal(u64vec4 x, u64vec4 y);\n"
"bvec2 notEqual(u64vec2 x, u64vec2 y);\n"
"bvec3 notEqual(u64vec3 x, u64vec3 y);\n"
"bvec4 notEqual(u64vec4 x, u64vec4 y);\n"
"\n"
"__glsld_syscmd_end_context__;\n"
"\n"
"__glsld_syscmd_begin_context__;\n"
"__glsld_syscmd_require_extension__ GL_EXT_shader_explicit_arithmetic_types_int16;\n"
"\n"
"bvec2 lessThan(i16vec2 x, i16vec2 y);\n"
"bvec3 lessThan(i16vec3 x, i16vec3 y);\n"
"bvec4 lessThan(i16vec4 x, i16vec4 y);\n"
"bvec2 lessThanEqual(i16vec2 x, i16vec2 y);\n"
"bvec3 lessThanEqual(i16vec3 x, i16vec3 y);\n"
"bvec4 lessThanEqual(i16vec4 x, i16vec4 y);\n"
"bvec2 greaterThan(i16vec2 x, i16vec2 y);\n"
"bvec3 greaterThan(i16vec3 x, i16vec3 y);\n"
"bvec4 greaterThan(i16vec4 x, i16vec4 y);\n"
"bvec2 greaterThanEqual(i16vec2 x, i16vec2 y);\n"
"bvec3 greaterThanEqual(i16vec3 x, i16vec3 y);\n"
"bvec4 greaterThanEqual(i16vec4 x, i16vec4 y);\n"
"bvec2 equal(i16vec2 x, i16vec2 y);\n"
"bvec3 equal(i16vec3 x, i16vec3 y);\n"
"bvec4 equal(i16vec4 x, i16vec4 y);\n"
"bvec2 notEqual(i16vec2 x, i16vec2 y);\n"
"bvec3 notEqual(i16vec3 x, i16vec3 y);\n"
"bvec4 notEqual(i16vec4 x, i16vec4 y);\n"
"\n"
"bvec2 lessThan(u16vec2 x, u16vec2 y);\n"
"bvec3 lessThan(u16vec3 x, u16vec3 y);\n"
"bvec4 lessThan(u16vec4 x, u16vec4 y);\n"
"bvec2 lessThanEqual(u16vec2 x, u16vec2 y);\n"
"bvec3 lessThanEqual(u16vec3 x, u16vec3 y);\n"
"bvec4 lessThanEqual(u16vec4 x, u16vec4 y);\n"
"bvec2 greaterThan(u16vec2 x, u16vec2 y);\n"
"bvec3 greaterThan(u16vec3 x, u16vec3 y);\n"
"bvec4 greaterThan(u16vec4 x, u16vec4 y);\n"
"bvec2 greaterThanEqual(u16vec2 x, u16vec2 y);\n"
"bvec3 greaterThanEqual(u16vec3 x, u16vec3 y);\n"
"bvec4 greaterThanEqual(u16vec4 x, u16vec4 y);\n"
"bvec2 equal(u16vec2 x, u16vec2 y);\n"
"bvec3 equal(u16vec3 x, u16vec3 y);\n"
"bvec4 equal(u16vec4 x, u16vec4 y);\n"
"bvec2 notEqual(u16vec2 x, u16vec2 y);\n"
"bvec3 notEqual(u16vec3 x, u16vec3 y);\n"
"bvec4 notEqual(u16vec4 x, u16vec4 y);\n"
"\n"
"__glsld_syscmd_end_context__;\n"
"\n"
"\n"
"__glsld_syscmd_begin_context__;\n"
"__glsld_syscmd_require_extension__ GL_EXT_shader_explicit_arithmetic_types_int8;\n"
"\n"
"bvec2 lessThan(i8vec2 x, i8vec2 y);\n"
"bvec3 lessThan(i8vec3 x, i8vec3 y);\n"
"bvec4 lessThan(i8vec4 x, i8vec4 y);\n"
"bvec2 lessThanEqual(i8vec2 x, i8vec2 y);\n"
"bvec3 lessThanEqual(i8vec3 x, i8vec3 y);\n"
"bvec4 lessThanEqual(i8vec4 x, i8vec4 y);\n"
"bvec2 greaterThan(i8vec2 x, i8vec2 y);\n"
"bvec3 greaterThan(i8vec3 x, i8vec3 y);\n"
"bvec4 greaterThan(i8vec4 x, i8vec4 y);\n"
"bvec2 greaterThanEqual(i8vec2 x, i8vec2 y);\n"
"bvec3 greaterThanEqual(i8vec3 x, i8vec3 y);\n"
"bvec4 greaterThanEqual(i8vec4 x, i8vec4 y);\n"
"bvec2 equal(i8vec2 x, i8vec2 y);\n"
"bvec3 equal(i8vec3 x, i8vec3 y);\n"
"bvec4 equal(i8vec4 x, i8vec4 y);\n"
"bvec2 notEqual(i8vec2 x, i8vec2 y);\n"
"bvec3 notEqual(i8vec3 x, i8vec3 y);\n"
"bvec4 notEqual(i8vec4 x, i8vec4 y);\n"
"\n"
"bvec2 lessThan(u8vec2 x, u8vec2 y);\n"
"bvec3 lessThan(u8vec3 x, u8vec3 y);\n"
"bvec4 lessThan(u8vec4 x, u8vec4 y);\n"
"bvec2 lessThanEqual(u8vec2 x, u8vec2 y);\n"
"bvec3 lessThanEqual(u8vec3 x, u8vec3 y);\n"
"bvec4 lessThanEqual(u8vec4 x, u8vec4 y);\n"
"bvec2 greaterThan(u8vec2 x, u8vec2 y);\n"
"bvec3 greaterThan(u8vec3 x, u8vec3 y);\n"
"bvec4 greaterThan(u8vec4 x, u8vec4 y);\n"
"bvec2 greaterThanEqual(u8vec2 x, u8vec2 y);\n"
"bvec3 greaterThanEqual(u8vec3 x, u8vec3 y);\n"
"bvec4 greaterThanEqual(u8vec4 x, u8vec4 y);\n"
"bvec2 equal(u8vec2 x, u8vec2 y);\n"
"bvec3 equal(u8vec3 x, u8vec3 y);\n"
"bvec4 equal(u8vec4 x, u8vec4 y);\n"
"bvec2 notEqual(u8vec2 x, u8vec2 y);\n"
"bvec3 notEqual(u8vec3 x, u8vec3 y);\n"
"bvec4 notEqual(u8vec4 x, u8vec4 y);\n"
"\n"
"__glsld_syscmd_end_context__;\n"
"\n"
"__glsld_syscmd_begin_context__;\n"
"__glsld_syscmd_require_extension__ GL_EXT_shader_explicit_arithmetic_types_float16;\n"
"\n"
"bvec2 lessThan(f16vec2 x, f16vec2 y);\n"
"bvec3 lessThan(f16vec3 x, f16vec3 y);\n"
"bvec4 lessThan(f16vec4 x, f16vec4 y);\n"
"bvec2 lessThanEqual(f16vec2 x, f16vec2 y);\n"
"bvec3 lessThanEqual(f16vec3 x, f16vec3 y);\n"
"bvec4 lessThanEqual(f16vec4 x, f16vec4 y);\n"
"bvec2 greaterThan(f16vec2 x, f16vec2 y);\n"
"bvec3 greaterThan(f16vec3 x, f16vec3 y);\n"
"bvec4 greaterThan(f16vec4 x, f16vec4 y);\n"
"bvec2 greaterThanEqual(f16vec2 x, f16vec2 y);\n"
"bvec3 greaterThanEqual(f16vec3 x, f16vec3 y);\n"
"bvec4 greaterThanEqual(f16vec4 x, f16vec4 y);\n"
"bvec2 equal(f16vec2 x, f16vec2 y);\n"
"bvec3 equal(f16vec3 x, f16vec3 y);\n"
"bvec4 equal(f16vec4 x, f16vec4 y);\n"
"bvec2 notEqual(f16vec2 x, f16vec2 y);\n"
"bvec3 notEqual(f16vec3 x, f16vec3 y);\n"
"bvec4 notEqual(f16vec4 x, f16vec4 y);\n"
"\n"
"__glsld_syscmd_end_context__;\n"
"\n"
"__glsld_syscmd_begin_context__;\n"
"__glsld_syscmd_require_stage__ compute;\n"
"\n"
"in    highp uvec3 gl_NumWorkGroups;\n"
"const highp uvec3 gl_WorkGroupSize = uvec3(1,1,1);\n"
"in highp uvec3 gl_WorkGroupID;\n"
"in highp uvec3 gl_LocalInvocationID;\n"
"in highp uvec3 gl_GlobalInvocationID;\n"
"in highp uint gl_LocalInvocationIndex;\n"
"\n"
"__glsld_syscmd_end_context__;\n"
"// FIXME: correct qualifiers\n"
"\n"
"__glsld_syscmd_begin_context__;\n"
"__glsld_syscmd_require_stage__ fragment;\n"
"\n"
"in vec4  gl_FragCoord;\n"
"in bool  gl_FrontFacing;\n"
"in float gl_ClipDistance[];\n"
"in float gl_CullDistance[];\n"
"in vec2 gl_PointCoord;\n"
"flat in int gl_PrimitiveID;\n"
"flat in  int  gl_SampleID;\n"
"in  vec2 gl_SamplePosition;\n"
"flat in  int  gl_SampleMaskIn[];\n"
"flat in int gl_Layer;\n"
"flat in int gl_ViewportIndex;\n"
"in bool gl_HelperInvocation;\n"
"\n"
"out float gl_FragDepth;\n"
"out int  gl_SampleMask[];\n"
"\n"
"__glsld_syscmd_end_context__;\n"
"\n"
"__glsld_syscmd_begin_context__;\n"
"__glsld_syscmd_require_target__ opengl;\n"
"__glsld_syscmd_require_stage__ vertex;\n"
"\n"
"in int gl_VertexID;\n"
"in int gl_InstanceID;\n"
"\n"
"__glsld_syscmd_end_context__;\n"
"\n"
"\n"
"__glsld_syscmd_begin_context__;\n"
"__glsld_syscmd_require_target__ vulkan;\n"
"__glsld_syscmd_require_stage__ vertex;\n"
"\n"
"in int gl_VertexIndex;\n"
"in int gl_InstanceIndex;\n"
"\n"
"__glsld_syscmd_end_context__;\n"
"\n"
"__glsld_syscmd_begin_context__;\n"
"__glsld_syscmd_require_stage__ vertex;\n"
"\n"
"in int gl_DrawID;\n"
"in int gl_BaseVertex;\n"
"in int gl_BaseInstance;\n"
"\n"
"out gl_PerVertex {\n"
"    vec4 gl_Position;\n"
"    float gl_PointSize;\n"
"    float gl_ClipDistance[];\n"
"    float gl_CullDistance[];\n"
"};\n"
"\n"
"__glsld_syscmd_end_context__;\n"
"__glsld_syscmd_begin_context__;\n"
"__glsld_syscmd_require_extension__ GL_EXT_ray_tracing;\n"
"\n"
"__glsld_syscmd_require_stage__ rayGen rayAnyHit rayClosestHit rayIntersect rayMiss rayCallable;\n"
"in    uvec3  gl_LaunchIDEXT;\n"
"in    uvec3  gl_LaunchSizeEXT;\n"
"\n"
"__glsld_syscmd_require_stage__ rayGen rayClosestHit rayMiss rayCallable;\n"
"void executeCallableEXT(uint sbtRecordIndex, int callable);\n"
"\n"
"__glsld_syscmd_require_stage__ rayGen rayClosestHit rayMiss;\n"
"void traceRayEXT(accelerationStructureEXT topLevel,uint rayFlags,uint cullMask,uint sbtRecordOffset,uint sbtRecordStride,uint missIndex,vec3 origin,float tMin,vec3 direction,float tMax,int payload);\n"
"\n"
"__glsld_syscmd_require_stage__ rayAnyHit rayClosestHit rayIntersect rayMiss;\n"
"in    vec3   gl_WorldRayOriginEXT;\n"
"in    vec3   gl_WorldRayDirectionEXT;\n"
"in    float  gl_RayTminEXT;\n"
"in    float  gl_RayTmaxEXT;\n"
"in    uint   gl_IncomingRayFlagsEXT;\n"
"in    uint   gl_CullMaskEXT;\n"
"\n"
"__glsld_syscmd_require_stage__ rayAnyHit rayClosestHit rayIntersect;\n"
"in     int   gl_PrimitiveID;\n"
"in     int   gl_InstanceID;\n"
"in     int   gl_InstanceCustomIndexEXT;\n"
"in     int   gl_GeometryIndexEXT;\n"
"in    vec3   gl_ObjectRayOriginEXT;\n"
"in    vec3   gl_ObjectRayDirectionEXT;\n"
"in    float  gl_HitTEXT;\n"
"in    uint   gl_HitKindEXT;\n"
"in    mat4x3 gl_ObjectToWorldEXT;\n"
"in    mat3x4 gl_ObjectToWorld3x4EXT;\n"
"in    mat4x3 gl_WorldToObjectEXT;\n"
"in    mat3x4 gl_WorldToObject3x4EXT;\n"
"\n"
"__glsld_syscmd_require_stage__ rayIntersect;\n"
"bool reportIntersectionEXT(float hitT, uint hitKind);\n"
"\n"
"__glsld_syscmd_end_context__;\n"
"\n"
"__glsld_syscmd_begin_context__;\n"
"__glsld_syscmd_require_extension__ GL_NV_ray_tracing;\n"
"\n"
"__glsld_syscmd_require_stage__ rayGen rayAnyHit rayClosestHit rayIntersect rayMiss rayCallable;\n"
"in    uvec3  gl_LaunchIDNV;\n"
"in    uvec3  gl_LaunchSizeNV;\n"
"\n"
"__glsld_syscmd_require_stage__ rayGen rayClosestHit rayMiss rayCallable;\n"
"void executeCallableNV(uint sbtRecordIndex, int callable);\n"
"\n"
"__glsld_syscmd_require_stage__ rayGen rayClosestHit rayMiss;\n"
"void traceNV(accelerationStructureNV topLevel,uint rayFlags,uint cullMask,uint sbtRecordOffset,uint sbtRecordStride,uint missIndex,vec3 origin,float tMin,vec3 direction,float tMax,int payload);\n"
"void traceRayMotionNV(accelerationStructureNV topLevel,uint rayFlags,uint cullMask,uint sbtRecordOffset,uint sbtRecordStride,uint missIndex,vec3 origin,float tMin,vec3 direction,float tMax,float currentTime,int payload);\n"
"\n"
"__glsld_syscmd_require_stage__ rayAnyHit rayClosestHit rayIntersect rayMiss;\n"
"in    vec3   gl_WorldRayOriginNV;\n"
"in    vec3   gl_WorldRayDirectionNV;\n"
"in    vec3   gl_ObjectRayOriginNV;\n"
"in    vec3   gl_ObjectRayDirectionNV;\n"
"in    float  gl_RayTminNV;\n"
"in    float  gl_RayTmaxNV;\n"
"in    uint   gl_IncomingRayFlagsNV;\n"
"in    float  gl_CurrentRayTimeNV;\n"
"\n"
"__glsld_syscmd_require_stage__ rayAnyHit rayClosestHit rayIntersect;\n"
"in     int   gl_PrimitiveID;\n"
"in     int   gl_InstanceID;\n"
"in     int   gl_InstanceCustomIndexNV;\n"
"in    float  gl_HitTNV;\n"
"in    uint   gl_HitKindNV;\n"
"in    mat4x3 gl_ObjectToWorldNV;\n"
"in    mat4x3 gl_WorldToObjectNV;\n"
"\n"
"__glsld_syscmd_require_stage__ rayAnyHit;\n"
"void ignoreIntersectionNV();\n"
"void terminateRayNV();\n"
"\n"
"__glsld_syscmd_require_stage__ rayIntersect;\n"
"bool reportIntersectionNV(float hitT, uint hitKind);\n"
"\n"
"__glsld_syscmd_end_context__;\n"
"__glsld_syscmd_begin_context__;\n"
"// __glsld_syscmd_require_extension__ GL_EXT_ray_query;\n"
"\n"
"const uint gl_RayQueryCandidateIntersectionEXT = 0U;\n"
"const uint gl_RayQueryCommittedIntersectionEXT = 1U;\n"
"const uint gl_RayQueryCommittedIntersectionNoneEXT = 0U;\n"
"const uint gl_RayQueryCommittedIntersectionTriangleEXT = 1U;\n"
"const uint gl_RayQueryCommittedIntersectionGeneratedEXT = 2U;\n"
"const uint gl_RayQueryCandidateIntersectionTriangleEXT = 0U;\n"
"const uint gl_RayQueryCandidateIntersectionAABBEXT = 1U;\n"
"\n"
"const uint gl_RayFlagsNoneNV = 0U;\n"
"const uint gl_RayFlagsNoneEXT = 0U;\n"
"const uint gl_RayFlagsOpaqueNV = 1U;\n"
"const uint gl_RayFlagsOpaqueEXT = 1U;\n"
"const uint gl_RayFlagsNoOpaqueNV = 2U;\n"
"const uint gl_RayFlagsNoOpaqueEXT = 2U;\n"
"const uint gl_RayFlagsTerminateOnFirstHitNV = 4U;\n"
"const uint gl_RayFlagsTerminateOnFirstHitEXT = 4U;\n"
"const uint gl_RayFlagsSkipClosestHitShaderNV = 8U;\n"
"const uint gl_RayFlagsSkipClosestHitShaderEXT = 8U;\n"
"const uint gl_RayFlagsCullBackFacingTrianglesNV = 16U;\n"
"const uint gl_RayFlagsCullBackFacingTrianglesEXT = 16U;\n"
"const uint gl_RayFlagsCullFrontFacingTrianglesNV = 32U;\n"
"const uint gl_RayFlagsCullFrontFacingTrianglesEXT = 32U;\n"
"const uint gl_RayFlagsCullOpaqueNV = 64U;\n"
"const uint gl_RayFlagsCullOpaqueEXT = 64U;\n"
"const uint gl_RayFlagsCullNoOpaqueNV = 128U;\n"
"const uint gl_RayFlagsCullNoOpaqueEXT = 128U;\n"
"const uint gl_RayFlagsSkipTrianglesEXT = 256U;\n"
"const uint gl_RayFlagsSkipAABBEXT = 512U;\n"
"const uint gl_RayFlagsForceOpacityMicromap2StateEXT = 1024U;\n"
"const uint gl_HitKindFrontFacingTriangleEXT = 254U;\n"
"const uint gl_HitKindBackFacingTriangleEXT = 255U;\n"
"\n"
"void rayQueryInitializeEXT(rayQueryEXT rayQuery, accelerationStructureEXT topLevel, uint rayFlags, uint cullMask, vec3 origin, float tMin, vec3 direction, float tMax);\n"
"void rayQueryTerminateEXT(rayQueryEXT rayQuery);\n"
"void rayQueryGenerateIntersectionEXT(rayQueryEXT rayQuery, float tHit);\n"
"void rayQueryConfirmIntersectionEXT(rayQueryEXT rayQuery);\n"
"bool rayQueryProceedEXT(rayQueryEXT rayQuery);\n"
"uint rayQueryGetIntersectionTypeEXT(rayQueryEXT rayQuery, bool committed);\n"
"float rayQueryGetRayTMinEXT(rayQueryEXT rayQuery);\n"
"uint rayQueryGetRayFlagsEXT(rayQueryEXT rayQuery);\n"
"vec3 rayQueryGetWorldRayOriginEXT(rayQueryEXT rayQuery);\n"
"vec3 rayQueryGetWorldRayDirectionEXT(rayQueryEXT rayQuery);\n"
"float rayQueryGetIntersectionTEXT(rayQueryEXT rayQuery, bool committed);\n"
"int rayQueryGetIntersectionInstanceCustomIndexEXT(rayQueryEXT rayQuery, bool committed);\n"
"int rayQueryGetIntersectionInstanceIdEXT(rayQueryEXT rayQuery, bool committed);\n"
"uint rayQueryGetIntersectionInstanceShaderBindingTableRecordOffsetEXT(rayQueryEXT rayQuery, bool committed);\n"
"int rayQueryGetIntersectionGeometryIndexEXT(rayQueryEXT rayQuery, bool committed);\n"
"int rayQueryGetIntersectionPrimitiveIndexEXT(rayQueryEXT rayQuery, bool committed);\n"
"vec2 rayQueryGetIntersectionBarycentricsEXT(rayQueryEXT rayQuery, bool committed);\n"
"bool rayQueryGetIntersectionFrontFaceEXT(rayQueryEXT rayQuery, bool committed);\n"
"bool rayQueryGetIntersectionCandidateAABBOpaqueEXT(rayQueryEXT rayQuery committed);\n"
"vec3 rayQueryGetIntersectionObjectRayDirectionEXT(rayQueryEXT rayQuery, bool committed);\n"
"vec3 rayQueryGetIntersectionObjectRayOriginEXT(rayQueryEXT rayQuery, bool committed);\n"
"mat4x3 rayQueryGetIntersectionObjectToWorldEXT(rayQueryEXT rayQuery, bool committed);\n"
"mat4x3 rayQueryGetIntersectionWorldToObjectEXT(rayQueryEXT rayQuery, bool committed);\n"
"\n"
"__glsld_syscmd_end_context__;\n"
// clang-format on
